           
            
             
              
               
                
                 
                           
            @@@
         @@
        at p-%d: 0x%02x
        at tail+%d: 0x%02x
    %s [--user-base] [--user-site]\n\n    Without arguments print some useful information\n    With arguments print the value of USER_BASE and/or USER_SITE separated\n    by '%s'.\n\n    Exit codes with --user-base or --user-site:\n      0 - user site directory is enabled\n      1 - user site directory is disabled by user\n      2 - user site directory is disabled by super user\n          or for security reasons\n     >2 - unknown error\n    
    %zu bytes originally requested\n
    Because memory is corrupted at the start, the count of bytes requested\n       may be bogus, and checking the trailing pad bytes may segfault.\n
    Data at p:
    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n    for supporting Python development.  See www.python.org for more information.
    The %d pad bytes at p-%d are 
    The %d pad bytes at tail=%p are 
    csv_reader = reader(iterable [, dialect='excel']\n                        [optional keyword args])\n    for row in csv_reader:\n        process(row)\n\nThe "iterable" argument can be any object that returns a line\nof input for each iteration, such as a file object or a list.  The\noptional "dialect" parameter is discussed below.  The function\nalso accepts optional keyword arguments which override settings\nprovided by the dialect.\n\nThe returned object is an iterator.  Each iteration returns a row\nof the CSV file (which can span multiple input lines).\n
    csv_writer = csv.writer(fileobj [, dialect='excel']\n                            [optional keyword args])\n    for row in sequence:\n        csv_writer.writerow(row)\n\n    [or]\n\n    csv_writer = csv.writer(fileobj [, dialect='excel']\n                            [optional keyword args])\n    csv_writer.writerows(rows)\n\nThe "fileobj" argument can be any object that supports the file API.\n
  ""##&&''))**..//112255668899??@@BBCCFFGGIIJJNNOOQQRRUUVVXXYY^^__aabbeeffhhiimmnnppqqttuuwwxxdist($module, p, q, /)\n--\n\nReturn the Euclidean distance between two points p and q.\n\nThe points should be specified as sequences (or iterables) of\ncoordinates.  Both inputs must have the same dimension.\n\nRoughly equivalent to:\n    sqrt(sum((px - qx) ** 2.0 for px, qx in zip(p, q)))
  <no Python frame>\n
  <tstate is freed>\n
  File 
  File "%S", line %zd\n
  File "%U", line %d, in %U\n
  Garbage-collecting\n
  PYTHONHOME = 
  PYTHONPATH = 
  [Previous line repeated %ld more time]\n
  [Previous line repeated %ld more times]\n
  environment = %i\n
  import site = %i\n
  is in build tree = %i\n
  isolated = %i\n
  program name = 
  safe_path = %i\n
  stdlib dir = 
  sys.%s = 
  sys.path = [\n
  user site = %i\n
 !"#$%&'()*+,-./0123
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 !"#%%%%%%\n\v\f\r
 %.256s
 %02x
 (most recent call first):\n
 (required for relative module names)
 (total: 
 2!2"2#2$2%2&2'2(2)2
 A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
 B\nF7
 Creates a StreamReader instance.\n\n            stream must be a file-like object open for reading.\n\n            The StreamReader may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character\n             'backslashreplace' - Replace with backslashed escape sequences;\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        
 Creates a StreamReaderWriter instance.\n\n            stream must be a Stream-like object.\n\n            Reader, Writer must be factory functions or classes\n            providing the StreamReader, StreamWriter interface resp.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        
 Creates a StreamRecoder instance which implements a two-way\n            conversion: encode and decode work on the frontend (the\n            data visible to .read() and .write()) while Reader and Writer\n            work on the backend (the data in stream).\n\n            You can use these objects to do transparent\n            transcodings from e.g. latin-1 to utf-8 and back.\n\n            stream must be a file-like object.\n\n            encode and decode must adhere to the Codec interface; Reader and\n            Writer must be factory functions or classes providing the\n            StreamReader and StreamWriter interfaces resp.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        
 Creates a StreamWriter instance.\n\n            stream must be a file-like object open for writing.\n\n            The StreamWriter may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character\n             'xmlcharrefreplace' - Replace with the appropriate XML\n                                   character reference.\n             'backslashreplace'  - Replace with backslashed escape\n                                   sequences.\n             'namereplace'       - Replace with \N{...} escape sequences.\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        
 Creates an encoding map from a decoding map.\n\n        If a target mapping in the decoding map occurs multiple\n        times, then that target is mapped to None (undefined mapping),\n        causing an exception when encountered by the charmap codec\n        during translation.\n\n        One example where this happens is cp875.py which decodes\n        multiple character to \u001a.\n\n    
 D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.\n            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]\n            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v\n            In either case, this is followed by: for k, v in F.items(): D[k] = v\n        
 Decodes data from the stream self.stream and returns the\n            resulting object.\n\n            chars indicates the number of decoded code points or bytes to\n            return. read() will never return more data than requested,\n            but it might return less, if there is not enough available.\n\n            size indicates the approximate maximum number of decoded\n            bytes or code points to read for decoding. The decoder\n            can modify this setting as appropriate. The default value\n            -1 indicates to read and decode as much as possible.  size\n            is intended to prevent having to decode huge files in one\n            step.\n\n            If firstline is true, and a UnicodeDecodeError happens\n            after the first line terminator in the input only the first line\n            will be returned, the rest of the input will be kept until the\n            next call to read().\n\n            The method should use a greedy read strategy, meaning that\n            it should read as much data as is allowed within the\n            definition of the encoding and the given size, e.g.  if\n            optional encoding endings or state markers are available\n            on the stream, these should be read too.\n        
 Decodes the object input and returns a tuple (output\n            object, length consumed).\n\n            input must be an object which provides the bf_getreadbuf\n            buffer slot. Python strings, buffer objects and memory\n            mapped files are examples of objects providing this slot.\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamReader for codecs which have to keep state in order to\n            make decoding efficient.\n\n            The decoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        
 Defines the interface for stateless encoders/decoders.\n\n        The .encode()/.decode() methods may use different error\n        handling schemes by providing the errors argument. These\n        string values are predefined:\n\n         'strict' - raise a ValueError error (or a subclass)\n         'ignore' - ignore the character and continue with the next\n         'replace' - replace with a suitable replacement character;\n                    Python will use the official U+FFFD REPLACEMENT\n                    CHARACTER for the builtin Unicode codecs on\n                    decoding and '?' on encoding.\n         'surrogateescape' - replace with private code points U+DCnn.\n         'xmlcharrefreplace' - Replace with the appropriate XML\n                               character reference (only for encoding).\n         'backslashreplace'  - Replace with backslashed escape sequences.\n         'namereplace'       - Replace with \N{...} escape sequences\n                               (only for encoding).\n\n        The set of allowed values can be extended via register_error.\n\n    
 Encodes the object input and returns a tuple (output\n            object, length consumed).\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamWriter for codecs which have to keep state in order to\n            make encoding efficient.\n\n            The encoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        
 Inherit all other methods from the underlying stream.\n        
 Lookup up the codec for the given encoding and return\n        its IncrementalDecoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental decoder.\n\n    
 Lookup up the codec for the given encoding and return\n        its IncrementalEncoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental encoder.\n\n    
 Lookup up the codec for the given encoding and return\n        its StreamReader class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    
 Lookup up the codec for the given encoding and return\n        its StreamWriter class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    
 Lookup up the codec for the given encoding and return\n        its decoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    
 Lookup up the codec for the given encoding and return\n        its encoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    
 Open an encoded file using the given mode and return\n        a wrapped version providing transparent encoding/decoding.\n\n        Note: The wrapped version will only accept the object format\n        defined by the codecs, i.e. Unicode objects for most builtin\n        codecs. Output is also codec dependent and will usually be\n        Unicode as well.\n\n        If encoding is not None, then the\n        underlying encoded files are always opened in binary mode.\n        The default file mode is 'r', meaning to open the file in read mode.\n\n        encoding specifies the encoding which is to be used for the\n        file.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        buffering has the same meaning as for the builtin open() API.\n        It defaults to -1 which means that the default buffer size will\n        be used.\n\n        The returned wrapped file object provides an extra attribute\n        .encoding which allows querying the used encoding. This\n        attribute is only available if an encoding was specified as\n        parameter.\n\n    
 RV1
 Read all lines available on the input stream\n            and return them as a list.\n\n            Line breaks are implemented using the codec's decoder\n            method and are included in the list entries.\n\n            sizehint, if given, is ignored since there is no efficient\n            way to finding the true end-of-line.\n\n        
 Read one line from the input stream and return the\n            decoded data.\n\n            size, if given, is passed as size argument to the\n            read() method.\n\n        
 Remove duplicate entries from sys.path along with making them\n    absolute
 Represent `Callable[argtypes, resulttype]`.\n\n    This sets ``__args__`` to a tuple containing the flattened ``argtypes``\n    followed by ``resulttype``.\n\n    Example: ``Callable[[int, str], float]`` sets ``__args__`` to\n    ``(int, str, float)``.\n    
 Resets the codec buffers used for keeping internal state.\n\n            Calling this method should ensure that the data on the\n            output is put into a clean state, that allows appending\n            of new fresh data without having to rescan the whole\n            stream to recover state.\n\n        
 Resets the codec buffers used for keeping internal state.\n\n            Note that no stream repositioning should take place.\n            This method is primarily intended to be able to recover\n            from decoding errors.\n\n        
 Return a wrapped version of file which provides transparent\n        encoding translation.\n\n        Data written to the wrapped file is decoded according\n        to the given data_encoding and then encoded to the underlying\n        file using file_encoding. The intermediate data type\n        will usually be Unicode but depends on the specified codecs.\n\n        Bytes read from the file are decoded using file_encoding and then\n        passed back to the caller encoded using data_encoding.\n\n        If file_encoding is not given, it defaults to data_encoding.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        The returned wrapped file object provides two extra attributes\n        .data_encoding and .file_encoding which reflect the given\n        parameters of the same name. The attributes can be used for\n        introspection by Python programs.\n\n    
 Return the next decoded line from the input stream.
 SRE 2.2.2 Copyright (c) 1997-2002 by Secret Labs AB 
 Set the input stream's current position.\n\n            Resets the codec buffers used for keeping state.\n        
 StreamReaderWriter instances allow wrapping streams which\n        work in both read and write modes.\n\n        The design is such that one can use the factory functions\n        returned by the codec.lookup() function to construct the\n        instance.\n\n    
 StreamRecoder instances translate data from one encoding to another.\n\n        They use the complete set of APIs returned by the\n        codecs.lookup() function to implement their task.\n\n        Data written to the StreamRecoder is first decoded into an\n        intermediate format (depending on the "decode" codec) and then\n        written to the underlying stream using an instance of the provided\n        Writer class.\n\n        In the other direction, data is read from the underlying stream using\n        a Reader instance and then encoded and returned to the caller.\n\n    
 Writes the concatenated list of strings to the stream\n            using .write().\n        
 Writes the object's contents encoded to self.stream.\n        
 and 
 async for 
 cannot handle 
 codecs -- Python Codec Registry, API and helpers.\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n
 default=
 else 
 for 
 for child module 
 found\n
 has no attribute 
 in __instancecheck__
 in __issubclass__
 in __subclasscheck__
 in collect_exception_group_leaf_ids
 in comparison
 in exceptiongroup_split_recursive
 in print_chained
 in print_exception_group
 is a package and cannot be directly executed
 is not 
 is not a code object
 is not an alphanumeric value
 k=kFk8Tp`=m
 make_identity_dict(rng) -> dict\n\n        Return a dictionary where elements of the rng sequence are\n        mapped to themselves.\n\n    
 mode=%R
 module in 
 must be str, not 
 name=%R
 not bottom-level directory in 
 not found in sys.modules
 not in 
 object
 p!q!r!s!t!u!v!w!x!y!5
 positional argument%s (and %zd keyword-only argument%s)
 substituted in sys.modules during a lazy load
 to exit
 used
 var=
 while calling a Python object
 while decoding a JSON array from a unicode string
 while decoding a JSON object from a unicode string
 while encoding a JSON object
 while getting the repr of an object
 while getting the str of an object
 while pickling an object
 while traversing 'AnnAssign' node
 while traversing 'Assert' node
 while traversing 'Assign' node
 while traversing 'AsyncFor' node
 while traversing 'AsyncFunctionDef' node
 while traversing 'AsyncWith' node
 while traversing 'Attribute' node
 while traversing 'AugAssign' node
 while traversing 'Await' node
 while traversing 'BinOp' node
 while traversing 'BoolOp' node
 while traversing 'Call' node
 while traversing 'ClassDef' node
 while traversing 'Compare' node
 while traversing 'Constant' node
 while traversing 'Delete' node
 while traversing 'Dict' node
 while traversing 'DictComp' node
 while traversing 'ExceptHandler' node
 while traversing 'Expr' node
 while traversing 'Expression' node
 while traversing 'For' node
 while traversing 'FormattedValue' node
 while traversing 'FunctionDef' node
 while traversing 'FunctionType' node
 while traversing 'GeneratorExp' node
 while traversing 'Global' node
 while traversing 'If' node
 while traversing 'IfExp' node
 while traversing 'Import' node
 while traversing 'ImportFrom' node
 while traversing 'Interactive' node
 while traversing 'JoinedStr' node
 while traversing 'Lambda' node
 while traversing 'List' node
 while traversing 'ListComp' node
 while traversing 'Match' node
 while traversing 'MatchAs' node
 while traversing 'MatchClass' node
 while traversing 'MatchMapping' node
 while traversing 'MatchOr' node
 while traversing 'MatchSequence' node
 while traversing 'MatchSingleton' node
 while traversing 'MatchStar' node
 while traversing 'MatchValue' node
 while traversing 'Module' node
 while traversing 'Name' node
 while traversing 'NamedExpr' node
 while traversing 'Nonlocal' node
 while traversing 'Raise' node
 while traversing 'Return' node
 while traversing 'Set' node
 while traversing 'SetComp' node
 while traversing 'Slice' node
 while traversing 'Starred' node
 while traversing 'Subscript' node
 while traversing 'Try' node
 while traversing 'TryStar' node
 while traversing 'Tuple' node
 while traversing 'TypeIgnore' node
 while traversing 'UnaryOp' node
 while traversing 'While' node
 while traversing 'With' node
 while traversing 'Yield' node
 while traversing 'YieldFrom' node
 while traversing 'alias' node
 while traversing 'arg' node
 while traversing 'arguments' node
 while traversing 'comprehension' node
 while traversing 'excepthandler' node
 while traversing 'expr' node
 while traversing 'keyword' node
 while traversing 'match_case' node
 while traversing 'pattern' node
 while traversing 'stmt' node
 while traversing 'withitem' node
 while trying to find 
!#"###g!%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#+!
!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$
!%"%#%$%%%&%'%(%)%*%
!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%
!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&
!'"'#'$'%'&'(')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'Q'R'S'T'U'V'X'Y'Z'['\']'^'_'`'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'
!(type->tp_flags & (1UL << 13))
!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*
!+"+#+$+%+&+'+(+)+*+++,+-+.+/+0+1+2+3+4+5+6+7+8+9+:+;+<+=+>+?+@+A+B+C+D+E+F+G+H+I+J+K+L+M+N+O+P+Q+R+S+T+U+V+W+X+Y+Z+[+\+]+^+_+`+a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t+u+v+!$"$#$$$%$&$'$($)$*$+$,$-$.$/$0$1$2$3$4$5$6$7$8$9$:$;$<$=$>$?$@$A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z$[$\$]$^$_$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)_"
!,",#,$,%,&,',(,),*,.#/#
!,",#,$,%,&,(,),*,+,,,-,.,/,0,1,2,3,4,5,6,7,8,9,:,;,<,=,>,?,@,A,Q,R,S,T,U,V,X,Y,Z,[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,
!-"-#-$-%-&-'-(-)-*-+-,---.-/-0-1-2-3-4-
!0"0#0$0%0&0'0(0)0
!16^B
!32:1r0r%L
!5ybL
!6"6Y
!84d
!=14hCjD8095uJ
!>)RgJ-Rp
!AR7
!Akpnpk
!D"Do
!D2F
!E"ES
!F6I2@u_
!H\Jd1pP
!HbQaE0
!I0N+4
!LRDS
!M-VsG
!Q(pbr
!Q7QMe
!S{R1
!T2NJh
!W/W3W4WpWwW|W
!WhK
!_PyObject_IsFreed((PyObject *)type)
!_PyObject_IsFreed(op)
!aZan~
!caK
!e1U
!j"j#jx7-<d
!raN
!ta1sJ*
!v%4n
"%s" must be a 1-character string
"%s" must be a string
"%s" must be an integer
"%s" must be string or None, not %.200s
"%s" must be string, not %.200s
"+"."a"L"H"="
"0SMu
"2aZ
"3nZoZUH@
"6A2
":OBO
"AA51
"CJPh
"KHGc5
"Lyhxh
"MVm|
"O!Gx
"P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%
"TvO
"U!G^HQL
"V8S7>,H\
"Y\Y`S}Xp7wW~XzX!YcD
"_i1fAF
"`"n"o"d"e"
"aFi
"ay7
"b>bCbVbZbob
"delimiter" must be a 1-character string
"e#e$e&e'e(e)e*e,e-e0e1e2e3e7e:e<e=e@eAeBeCeDeFeGeJeKeMeNePeReSeTeWeXeZe\e_e`eaedeeegeheiejemeneoeqeseuevexeyeze{e|e}e~e
"f#f$fs
"gYd
"h!hcCo
"is not" with a literal. Did you mean "!="?
"is" with a literal. Did you mean "=="?
"n@DE
"oZb|v
"r#rG
"u!u(:~tVKN
"vta
"yVp
#   clear[1] %s\n
#   clear[2] %s\n
# arena map bot nodes
# arena map mid nodes
# arenas allocated current
# arenas allocated total
# arenas highwater mark
# arenas reclaimed
# bytes in allocated blocks
# bytes in available blocks
# bytes lost to arena alignment
# bytes lost to arena map bot
# bytes lost to arena map mid
# bytes lost to arena map root
# bytes lost to pool headers
# bytes lost to quantization
# can't import zipimport.zipimporter\n
# can't import zipimport\n
# cleanup[2] removing %U\n
# cleanup[3] wiping %U\n
# cleanup[3] wiping builtins\n
# cleanup[3] wiping sys\n
# clear builtins._\n
# clear sys.%s\n
# clear sys.audit hooks\n
# destroy %U\n
# installed zipimport hook\n
# installing zipimport hook\n
# of channels should be >= 1
# restore sys.%s\n
#&H&G&.&$&B&A&/&&&F&E&1&%&D&C&0&'&<&I&J&7&K&L&2&)&>&M&N&9&O&P&4&(&Q&R&8&=&S&T&3&*&U&V&:&?&W&X&5&+&Y&Z&;&[&\&@&]&^&_&`&a&b&c&d&6&
#6$6%6Z
#8$8U
#83`e
#Cg2z\
#F;iy
#IEcFcUC2
#J'LIj
#Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2
#QVa
#S7nOx
#SzR-
#Txp(W
#X$Xu
#cAw
#fq{0K.r
#lD5Afy>
#o&k#Kic
#z\vimport sitez
#zwb
$0%0&0'0E
$0KBS
$4#au
$7p?~V2MU
$9@39T
$9sWIG^>.9|
$:uQ102k4k
$=mPD
$AX=t
$C%CT
$D%D&Ds
$G4VP
$JFG*k$
$NMH
$RBW
$ROV
$S?ftICfP
$VFu
$W%WX
$WEN
$XNO
$Xs3E
$ZSU
$`$a$b$c$d$e$f$g$h$i$
$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$
$b)bf
$dVt
$efL
$gP9SO
$k7k9kCkFkYk
$m^:w6!c26qL'9w
$p!q!r!s!t!u!v!w!x!y!z!{!
$pDD[
$plagOKs)m>J
$rCR5FH
$t$u$v$w$x$y$z${$|$}$~$
$uR@Q
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%JU?
%!%"%&%'%)%*%-%.%1%2%5%6%9%:%=%>%@%A%C%D%E%F%G%H%I%J%
%!?!0#1#2#3#4#5#6#7#8#9#'!(!c!a!d!)!w!A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#N!
%#%3%+%;%K% %/%(%7%?%
%$%a%b%V%U%c%Q%W%]%\%[%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%c format: %s is required, not %.200s
%%%c format: a real number is required, not %.200s
%%%c format: an integer is required, not %.200s
%%b requires a bytes-like object, or an object that implements __bytes__, not '%.100s'
%.100s
%.150s%s takes %s %d argument%s (%zd given)
%.200s attribute must be bytes
%.200s attribute must be unicode
%.200s attribute not set
%.200s expected %s%zd argument%s, got %zd
%.200s indices must be integers or slices, not %.200s; perhaps you missed a comma?
%.200s is not a mapping
%.200s is not a sequence
%.200s is not a subtype of %.200s
%.200s%s missing required argument '%U' (pos %d)
%.200s%s missing required argument '%s' (pos %d)
%.200s%s takes %s %d positional argument%s (%zd given)
%.200s%s takes at least one argument
%.200s%s takes at most %d %sargument%s (%zd given)
%.200s%s takes no arguments
%.200s%s takes no positional arguments
%.200s() %.200s must be %.50s, not %.50s
%.200s() must return a deque, not %.200s
%.200s() takes no arguments
%.200s() takes no keyword arguments
%.200s() takes no positional arguments
%.200s(year=%S, week=%S, weekday=%S)
%.200s.%U() returned a non-iterable (type %.200s)
%.200s.__divmod__() must return a 2-tuple, not %.200s
%.200s.__init__() takes exactly one argument (the instance to initialize)
%.200s.__prepare__() must return a mapping, not %.200s
%.200s.__setstate__ argument should be 3-tuple, got %.200s
%.200s.__setstate__ argument should be 4-tuple, got %.200s
%.200s.__slotnames__ should be a list or None, not %.200s
%.20s_%.200s
%.400s constructor takes at most %zd positional argument%s
%.400s got multiple values for argument '%U'
%.500s() takes a %zd-sequence (%zd-sequence given)
%.500s() takes a dict as second arg, if any
%.500s() takes an at least %zd-sequence (%zd-sequence given)
%.500s() takes an at most %zd-sequence (%zd-sequence given)
%.50s.__float__ returned non-float (type %.50s)
%.50s.__float__ returned non-float (type %.50s).  The ability to return an instance of a strict subclass of float is deprecated, and may be removed in a future version of Python.
%.80s (%.80s) %.80s
%02d
%02d:%02d
%02d:%02d:%02d
%02d:%02d:%02d.%03d
%02d:%02d:%02d.%06d
%04X
%04d-%02d-%02d
%04d-%02d-%02d%c%02d
%04d-%02d-%02d%c%02d:%02d
%04d-%02d-%02d%c%02d:%02d:%02d
%04d-%02d-%02d%c%02d:%02d:%02d.%03d
%04d-%02d-%02d%c%02d:%02d:%02d.%06d
%06d
%0JI"S
%48s 
%5&5G
%5tBODg
%5u %6u %11zu %15zu %13zu\n
%7&7I
%7`mambm,
%8k:v
%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%
%=Edk
%?6Ade
%?kfoFlfmfW
%B&BA
%CxF-kJD
%ECE>
%FxG=R\
%I-XL
%NqF
%P4q1|xL
%Pz6
%R has already been used once
%R in __slots__ conflicts with class variable
%R is not a generic class
%R is not in deque
%R is not in list
%R is not in range
%R not in sys.modules as expected
%R returned NULL without setting an exception
%R returned a result with an exception set
%R was created by a different ContextVar
%R was created in a different Context
%S (%U, line %ld)
%S (%zd sub-exception%s)
%S (line %ld)
%S - Consider hexadecimal for huge integer literals to avoid decimal conversion limits.
%S does not support cross-interpreter data
%S: %R is a directory, cannot continue\n
%S: can't open file %R: [Errno %d] %s\n
%SWps
%Sv0$S8
%U (%s: %S)
%U and %U
%U argument after * must be an iterable, not %.200s
%U argument after ** must be a mapping, not %.200s
%U encoding=%R>
%U got multiple values for keyword argument '%S'
%U requires closure of length %zd, not %zd
%U takes exactly one argument (%zd given)
%U takes no arguments (%zd given)
%U takes no keyword arguments
%U%smicroseconds=%d
%U%sseconds=%d
%U() got an unexpected keyword argument '%S'
%U() got multiple values for argument '%S'
%U() got some positional-only arguments passed as keyword arguments: '%U'
%U() keywords must be strings
%U() missing %i required %s argument%s: %U
%U() requires a code object with %zd free vars, not %zd
%U() takes %U positional argument%s but %zd%U %s given
%U, fold=%d)
%U, tzinfo=%R)
%VVF"
%Yg{K]TP
%ZF<)6<8OH%<&Z'ZVLCH(Z}F
%\t%\n%\v%\f%\r%
%b9MrjGK
%c arg not in range(0x110000)
%c arg not in range(256)
%c requires an integer in range(256) or a single byte
%c requires int or char
%c%02d%s%02d
%c%02d%s%02d%s%02d
%c%02d%s%02d%s%02d.%06d
%d %ss * %zd bytes each
%d day%s, %d:%02d:%02d
%d day%s, %d:%02d:%02d.%06d
%d&`&a&e&g&c&
%d'd(d)d+d.d/d0d1d2d3d5d6d7d8d9d;d<d>d@dBdCdIdKdLdMdNdOdPdQdSdUdVdWdYdZd[d\d]d_d`dadbdcdddedfdhdjdkdldndodpdqdrdsdtdudvdwd{d|d}d~d
%d.%d.%d.%d
%d:%02d:%02d
%d:%02d:%02d.%06d
%f&ft
%f?iCt
%h$hn
%l[FH
%lld
%lli
%llu
%mrn
%m~bQJ_
%n:X#n&nW
%r is a namespace package and cannot be executed
%s %s %2d %02d:%02d:%02d %04d
%s %s%3d %.2d:%.2d:%.2d %d
%s arg must be None or str
%s args argument must be a tuple, not %.200s
%s assignment: '%s' deallocator differs from '%s'
%s assignment: '%s' object layout differs from '%s'
%s class argument '%.200s' doesn't have __new__
%s class argument must be a type, not %.200s
%s expected at least 1 argument, got 0
%s first arg must be bytes or a tuple of bytes, not %s
%s in %U.%s must be str, not %.100s
%s kwargs argument must be a dict, not %.200s
%s must be a mapping or None
%s only supported in Python 3.%i and greater
%s op %d should not be possible
%s returned NULL without setting an exception
%s returned a result with an exception set
%s with '%s' codec failed
%s%s%s should be %s, not %.200s
%s%s%s too long for Windows
%s%s%s unavailable on this platform
%s%s%s, %.20s, %.9s
%s%s%sj%s
%s%sembedded null character in %s
%s(%R, %zd)
%s(%R, maxlen=%zd)
%s(%d, %d, %d)
%s(%d, %d, %d, %d)
%s(%d, %d, %d, %d, %d)
%s(%d, %d, %d, %d, %d, %d)
%s(%d, %d, %d, %d, %d, %d, %d)
%s(%lld, recv=True)
%s(%lld, send=True)
%s(%zd, %R)
%s('%c', %R)
%s() accepts %d positional sub-pattern%s (%d given)
%s() arg 1 must be a %s object
%s() arg is an empty sequence
%s() expects an error PyStatus
%s() got multiple sub-patterns for attribute %R
%s() method: bad call flags
%s() requires a dict argument, not '%s'
%s() takes no keyword arguments
%s(dt) argument must be a datetime instance or None, not %.200s
%s+---------------- %zd ----------------\n
%s+---------------- ... ----------------\n
%s.__bases__ must be tuple of classes, not '%s'
%s.__match_args__ must be a tuple (got %s)
%s.__new__(%s) is not safe, use %s.__new__()
%s.__new__(%s): %s is not a subtype of %s
%s.__new__(): not enough arguments
%s.__new__(X): X is not a type object (%s)
%s.utc
%s0%se%d
%s: No _csv module state found
%s: bug likely caused by a refcount error in a C extension
%s: can't specify both dir_fd and fd
%s: can't specify dir_fd without matching path
%s: cannot use fd and follow_symlinks together
%s:%d: bad argument to internal function
%u unused pools * %d bytes
%v(v<v3v
%x'y3y4y7y8y9y;y?y@yMyQydy.zP
%zu arenas * %d bytes/arena
&!<!3!4!l0zC!
&6'6(6e
&8.pB1g
&9TU>
&:gQ|OR<q
&;L3W]2
&BeDv6
&E#g_O$g%g&g7AiWpI8O/VUV'gm0(g)g\IoR->*gs0^Ha=+gFH
&F'FD
&HyE
&I{qyq
&J;wjrH^Si
&NVNsN
&P8R
&Q%Q"Q$Q Q)Q
&Q5^U
&Y'YWB
&\X05
&^6=oHt
&`AV\acpdqq\'V
&a14
&b*E6
&cZQ%r
&d$y3p
&eP7b
&irK
&m#mo
&n7M?1]
&qUK
&r'rUQn6(r)r_5*r+rK
&t(t*t+t,t.t/t0tDtFtGtKtWtbtktmt
&u'upDW
&w'w(wn1)w*w+w
' as the module name.
' instead of '
'%.100s' object has no attribute '%U'
'%.100s' object has no attributes (%s .%U)
'%.100s' object has only read-only attributes (%s .%U)
'%.200s' object can't be concatenated
'%.200s' object can't be repeated
'%.200s' object cannot be interpreted as an integer
'%.200s' object does not support indexing
'%.200s' object does not support item assignment
'%.200s' object does not support item deletion
'%.200s' object does not support the asynchronous context manager protocol
'%.200s' object does not support the asynchronous context manager protocol (missed __aexit__ method)
'%.200s' object does not support the context manager protocol
'%.200s' object does not support the context manager protocol (missed __exit__ method)
'%.200s' object does not support vectorcall
'%.200s' object doesn't support item deletion
'%.200s' object doesn't support slice assignment
'%.200s' object doesn't support slice deletion
'%.200s' object has no attribute '%s'
'%.200s' object is not a container
'%.200s' object is not a mapping
'%.200s' object is not an async iterable
'%.200s' object is not an async iterator
'%.200s' object is not an iterator
'%.200s' object is not callable
'%.200s' object is not callable; perhaps you missed a comma?
'%.200s' object is not iterable
'%.200s' object is not reversible
'%.200s' object is not subscriptable
'%.200s' object is not subscriptable; perhaps you missed a comma?
'%.200s' object is unsliceable
'%.400s' decoder returned '%.400s' instead of 'str'; use codecs.decode() to decode to arbitrary types
'%.400s' encoder returned '%.400s' instead of 'bytes'; use codecs.encode() to encode to arbitrary types
'%.400s' encoder returned '%.400s' instead of 'str'; use codecs.encode() to encode to arbitrary types
'%.400s' is not a text encoding; use %s to handle arbitrary codecs
'%.50s' object attribute '%U' is read-only
'%.50s' object has no attribute '%U'
'%S' is an invalid keyword argument for %.200s%s
'%S' is an invalid keyword argument for enumerate()
'%U' codec can't decode byte 0x%02x in position %zd: %U
'%U' codec can't decode bytes in position %zd-%zd: %U
'%U' codec can't encode character '\U%08x' in position %zd: %U
'%U' codec can't encode character '\u%04x' in position %zd: %U
'%U' codec can't encode character '\x%02x' in position %zd: %U
'%U' codec can't encode characters in position %zd-%zd: %U
'%U' is an invalid keyword argument for %.200s%s
'%c' expected after '%c'
'%c' format requires %zd <= number <= %zd
'%c' format requires 0 <= number <= %zu
'%c' was never closed
'%s' can not be used within an annotation
'%s' is an illegal expression for augmented assignment
'%s' not supported between instances of '%.100s' and '%.100s'
'1i<B0J
'3D9'b
'7(7)7J
'7s8R:McNcDTOc^
'8(8g
'8WEi
'9Pa
':' expected after dictionary key
'=' alignment flag is not allowed in complex format specifier
'=' alignment not allowed in string format specifier
'CR6$
'D(Dy
'Fxly
'Ipfqfrf9esftfbBufvfhVwfZ
'PMt
'T|hRz
'XpD{Wq
'__name__' not in globals
'aSnCP
'alpha', 'beta', 'candidate', or 'final'
'async for' outside async function
'async for' received an invalid object from __anext__: %.100s
'async for' received an object from __aiter__ that does not implement __anext__: %.100s
'async for' requires an iterator with __anext__ method, got %.100s
'async for' requires an object with __aiter__ method, got %.100s
'async with' outside async function
'async with' received an object from __aenter__ that does not implement __await__: %.100s
'async with' received an object from __aexit__ that does not implement __await__: %.100s
'audioop' is deprecated and slated for removal in Python 3.13
'await' outside async function
'await' outside function
'break' outside loop
'break', 'continue' and 'return' cannot appear in an except* block
'cDG
'continue' not properly in loop
'dRl
'e*eH
'eRU
'e_NY:Z
'encoding' argument not specified
'hw:xg$h
'import warnings' failed; traceback:\n
'in <string>' requires string as left operand, not %.100s
'l*PQ
'memo' attribute must be a PicklerMemoProxy object or dict, not %.200s
'memo' attribute must be an UnpicklerMemoProxy object or dict, not %.200s
'memo' values must be 2-item tuples
'n$n9O`
'path' must be 'str', not '%.200s'
'registry' must be a dict or None
'return' outside function
'return' with value in async generator
's)s$sE
'send' and 'recv' cannot both be False
'send', 'recv', or 'both'
'xug
'yield from' inside async function
'yield' inside dict comprehension
'yield' inside generator expression
'yield' inside list comprehension
'yield' inside set comprehension
'yield' outside function
'{o{y{/|0|8|=|i
'|=' is not supported by %s; use '|' instead
(%s) unknown error
((Olldd))
((OllddO))
() argument must be str, bytes, or os.PathLike object, not 
(-2) <= ix && ix <= usable
(0)0*0+0,0-0.0/0J
(4]Vx
(4w6fU
(5I8WUX3
(:82mWxWwW36
(;L4B
(BQ5qM
(C)Cf
(Extremely) low-level import machinery bits as used by importlib and imp.
(GXS}
(H)HJ
(HqV>JrV
(J}L!^#<B>x]~]h1
(Md9A
(NNN)
(Niiii)
(NiiiiiN)
(O(OiiNii))
(ONN)
(OOO)
(OOnN)
(OiiO)
(OnN)
(OnnNnn)
(Q*QD
(R(t)tb
(R*43L
(U)U+U-U2U4U5U6U8U9U:U;U=U@UBUEUGUHUKULUMUNUOUQURUSUTUWUXUYUZU[U]U^U_U`UbUcUhUiUkUoUpUqUrUsUtUyUzU}U
(WRG'X@JF
(Z3Z
(^dtBl
(_+_,_._0_2_3_4_5_6_7_8_;_=_>_?_A_B_C_D_E_F_G_H_I_J_K_L_M_N_O_Q_T_Y_Z_[_\_^___`_c_e_g_h_k_n_o_r_t_u_v_x_z_}_~_
(buffer is NULL)
(buffer_len is NULL)
(b~2"ba
(d.deB
(duplicate_check & (1<<index)) == 0
(encoding failed)
(iOO)
(iOOiO)
(iii)
(iiiiiii)
(impossible<bad format char>)
(invalid use of 'w' format character)
(kk):_acquire_restore
(kkk)
(mB^bv\mu\9`
(not set)
(nwBb
(szz)
(unicode conversion error)
(unknown parser marker combination)
(unspecified)
(yield 
(yield from 
(yield)
)"A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%
)*5*+*8***7*
)0-qG
)1*1U
)320A
)48q;M
)4dQ
)5*5S
)98:*9p5!
)@Q^(IoQ$Eg063EHQ
)@~:t7kQI;o9=
)Bf3j
)E*Ey
)JrKW
)P5G1
)S*SS]tOxHc
)SbE
)T50_:2
)U_KoU.Z_VJ40Z/Z
)Ubz
)Y6V
)ev`3v~a
)f0f
)j:d"sRM
)l*l+lt
)n*nn
)p'pd7g
)q(qE
)r*r+r,r1
)rDp
)uM=8Ca?aK*uT
* argument may appear only once
* wants int
** or pow()
*5HBhG
*7+7P
*8+8i
*8CKq
*=>8HA%e+e`
*@*RP6q
*B0D5=x
*C+C,Cg
*H42x
*Jya
*Kgiq
*Ks1X
*M%u#u4=(uS
*SQS&T
*TVPd3WU
*[GT?2U
*\cr4i\R
*avail_out != 0 in OutputBuffer_WindowGrow().
*f+fy
*i';E?07tLt
*j|zvu<pT};`CN
*m9cbR
*o+o4A,ozOxK.o-oz3x9/o0obP1o2of7?P3o4o5oqH`L6o7o8o9o:o`U;om4*C<o
*o/o3oQoYo^oaobo~o
*o9x
*pPy
*qQN
*tK>_Sc
*vpU,v9C
*zCf2a+J
+!0 o&m&j&  ! 
+,,,-,.,/,0,1,2,3,4,Z&[&\&]&^&_&`&a&b&c&m&
+------------------------------------\n
+1,1a
+1Wv
+2$4r
+5,5-5T
+6,6q
+8yF`
+9,9-9K
+:8h9h:hB>
+;3Tv
+;RYr
+@WcXcYc`
+B,BK
+DU6
+I^QueE
+Kpj
+R+4r
+RO@S
+T3J&M
+Us1
+VBP
+Y9J
+[q=bAm
+aZ8-a.a0a:51a
+bhs
+c77
+d,d1
+e-eq
+j2v
+p,p-p.p/p0p1p2p3p4p6p7p8p:p;p<p=p>p?p@pApBpCpDpEpFpGpHpIpJpKpMpNpPpQpRpSpTpUpVpWpXpYpZp[p\p]p_p`papbpcpdpepfpgphpipjpnpqprpsptpwpypzp{p}p
+p.nm
+r4r8r9r,NBrSrWrcr
+tt3U
+x,x-xo
, %U, and %U
, item %d
, line 
, start on mount 
,8-8k
,8jkV9<
,944vV88DM)Mv4xVB
,:}LT?1KtF
,;dkeri
,?1i:iQ
,Cfq
,Ff0
,J|R_3jeaD!>2NrDV>(Fc2
,M{Cs:t@BMrO8_EO
,PSSDU|W
,S0a
,Seru2_
,TGq
,XLs
,Z0j
,gf;x8$Q-ggBx>J=3M.g/gn>eP
,gvN
,mNj
,p~LaM
,qNU)q
,tFP\
,w.w0w1w2w3w4w9w;w=w>w?wBwDwEwFwHwIwJwKwLwMwNwOwRwSwTwUwVwWwXwYw\w]w^w_w`wdwgwiwjwmwnwowpwqwrwswtwuwvwwwxwzw{w|w
,wDkam+`G]
,zQu3g
--check-hash-based-pycs must be one of 'default', 'always', or 'never'\n
--user-base
--user-site
-0x%sp%c%d
-0x0.0p+0
-1!s"st
-3gD
-6.6/6r
-64u
-7mRP
-8NlMl
-> (cls, state)
-B.B/BL
-H.HQ
-Infinity
-J is reserved for Jython\n
-JcR_Rc8
-Lzv2VXR
-NB\k
-O or -OO
-SahlN
-TQv
-W*FA
-WExR_
-X dev
-X int_max_str_digits
-X int_max_str_digits: invalid limit; must be >= 640 or 0 for unlimited.
-X tracemalloc=NFRAME: invalid number of frames
-X utf8
-X warn_default_encoding
-XZWL
-ZcRQO
-cLV4Y
-h.hD
-i0ia
-inf + inf in fsum
-j_6id!
-mjz
-t.t/tt
-u/uQPa
-y-idX3zEb=|
-zYvtz
. Did you mean: '
. Try using '
.)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)
... (max_group_depth is %d)\n
... truncated
.00cfg
.28h!
.3/30313
.3Mx
.7.Rx
.<locals>
.AH@C
.CRT$XCA
.CRT$XCZ
.CRT$XIA
.CRT$XIZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.Dh26a-
.E+Ec
.F-l.lw
.F/Fj
.GIzI}I
.Hka
.Qm\Nh
.QqP8j9j:j5:@
.RonWUdj"xkM?W1{
.V0V
.VZN'Uu:&7V@Z
.Y1YtYvYU[
.ZnJ
._pth
.a0a/a
.bss
.bss$00
.bss$dk00
.bss$pr00
.bss$zz
.cmgA}bZ
.cp311-win_amd64.pyd
.data
.data$00
.data$dk00
.data$pr00
.data$zz
.e2ek7c
.edata
.exec_module() not found; falling back to load_module()
.f,f-fa:S7
.find_spec() not found; falling back to find_loader()
.find_spec() not found; falling back to find_module()
.g?g6gAg8g7gFg^g`gYgcgdg
.idata$2
.idata$3
.idata$4
.idata$5
.idata$6
.k/k0kU7
.local
.mmp
.o/oCD
.p,p-pp
.pdata
.pth
.pyc
.pyd
.python_history
.pyw
.r";2B0EGB
.rdata
.rdata$00
.rdata$voltmd
.rdata$zz
.rdata$zzzdbg
.rsrc$01
.rsrc$02
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.s4G4
.tNu
.text$lp00python311
.text$mn
.text$mn$00
.text$x
.text$zs
.text$zy
.text$zz
.xdata
.zip
/ may appear only once
/ must be ahead of *
/101m
/20212
/30f0
/4h7fpep#FapbpC4T
/6zV,EY=>[?[
/707
/8-8K
/9091929N
/?7N0
/@lr^rE
/B64
/BZP
/D0D
/E50
/HPE$brG4I
/J0R:q
/K!n=6D
/M5qt
/NB9
/OeRZS
/Oo0
/OpO
/QcW
/TIi
/UQO*Q
/V1V_4
/`RJGH
/bin:/usr/bin
/dev/null
/l9EN6
/lib/python
/lib/python/site-packages
/os.pycz\f/lib-dynloadz\tLib/os.pyz\npyvenv.cfgz
/os.pyz
/python
/qn20qT
/site-packages
/w6Z
/x0x
/xvo
0 <= keys->dk_nentries && keys->dk_nentries <= usable
0 <= keys->dk_usable && keys->dk_usable <= usable
0 <= mp->ma_used && mp->ma_used <= usable
0%1%2%3%4%5%6%7%8%9%
0.0 cannot be raised to a negative power
0.0 to a negative or complex power
0010203040K
0123456789ABCDEF
0123456789abcdef
01dW?Wf
05 2 
0616
07v5MnOn
0<uF6W
0?1?2?3?4?5?
0@8RgkH
0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
0A>E/
0B1BR
0Bb^
0E1EP
0Fj0?H
0G1G
0Hl0&9S<qN=[SA
0K0w$
0L"j
0LtER
0M0x$
0MvhN
0M~q#P/a#x
0O0y$
0OYwfs
0OZ39\T
0Q0z$
0R1R[<
0S0{$
0TZDE
0TeU?
0VE@
0VJx
0WIqS
0WhX=K
0W{F[J\
0X/;11D
0Y7Y6>
0\t0\n0\v0\f0\r0
0]NFd
0`WG
0cDA-cV
0d&`&b&f&a&e&g&c&
0e-VJ\
0f2f
0g,gG
0h0tjsnZ
0h|G3
0iNV6
0j"k"
0kct
0kwM
0n7Nw
0plN1p2pq
0u1un
0vOoOi
0w1w
0x%sp%c%d
0x%x
0x0.0p+0
1 1!1"1#1$1%1&1'1(1)1
1 if summer time is in effect, 0 if not, and -1 if unknown
1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(
1.2.13
112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
12345679:;<=>?@A
124789ABCEFGHIJKLMN
14:57:12
1525q
19F2pTMO\0KUu;JV770L6Fa1:9|Va9!7z<Zj[jyLs9\j{43CQ7X:]jtT^jV<_;_j^A8B_TJW`jajdjbjcj^I38D6ejjJMIM4P
1:IN
1;wH{P%
1<qbTP9TubV9vbO
1@G1"
1A2A
1Ay`cV/2DV[5
1E]pqQM
1E{Yx
1F2Fn
1Hzqs
1Ju?D
1KDL
1Kfu
1LXw
1M2M
1N=a;a\C&@8
1NyX
1OW\X
1Q-Q.Q
1SE?bLJ
1V2^
1W.O
1W>8hBl
1X4CeRY
1YDG
1ZGXb\Nstu
1[Hp
1\t1\n1\v1\f1\r1
1^3^A
1`g2W
1ck|(M
1e%d
1g*s
1jtZp
1k?m
1kbG
1ng=v
1p!q!r!s!t!u!v!w!x!y!
1p2p3p4p5p<Q^
1s,sZ
1t"=U2z
1vJ9c
2&3&4&5&6&7&8&
2&3&4&5&6&7&8&e
2*iZ
2122292~3}3|3
2122292~3}3|3R"a"+"."
2232
2333D
23c1,>H2X
24Qb
2838
2:?0H
2;TR
2=d;)Z*ZHQ+ZmPo6[B
2?kU!;d
2D"J#A
2El4
2KBq
2NE9
2OH:
2Q(g
2Q1Q0QS
2Q23z
2T5T
2ToL
2V5W
2W@J5W!P1P`
2XkQ;:
2Y)A3Yg
2Y5>;5
2\lP}Npn
2\t2\n2\v2\f2\r2
2c5c;c<cAcDcNc
2eBd@k
2e~D]
2j1jS
2j3j4j?jFjIjzjNjRjdj
2m/t
2m1m
2m1mA
2nd arg must be a tuple
2o3o6oG
2rvs[v
2s8s8
2w3w
3"3M3
3+"."5"4"@&B&A&\t&
3.11
3.11.6
304050;0<0
31Rk%Lc
32d[
34?J/GtVuV
35Vq<
363Q3W3\r3&3#3+3J3;3
36~Y}Y
3747
37UIGlb;H
3949S
3=o?I
3A4A
3BPv
3C4CE
3D4D
3H4Hm
3P4P5P4K6P
3QbJP2
3R%6jG|qnO3KkPoggMK9Y6}qd0LK~q$T-BlADF1>!rU<F
3R?R
3T9S^j
3WCc}sZ^
3\URI
3]lT
3a8@$
3a8a
3b!L
3bVG
3cIcX6
3d/d;
3dCd
3gfgGgHg{g
3h;h>hDhEhIhLhUhWhw;khnhzh|h
3i(i
3kQ4/
3l_0
3mfc^
3oMb
3q4qZ
3r4r2r
3sXdyOZO
3u4u5uv
3yRr
3z:zDzXzt
3|jjkjzP
4!5!6!7!8!9!:!;!<!=!
4!5!6!7!8!9!:!;!>!?!
4(N/N0N
40i[
41jU:8O
424O[
42d4
4353637383E
4656
47;n
48DsY
49pNHT
49v|
4<4HQBq
4=l;N
4>F1"
4A@QAQ,Hx8;OBQ
4B5Bd
4C>YEY@YGYCY
4E5Eb
4Ejn[
4F'W0JCD
4F5Ft
4N)D>1}TX
4O$RJS
4OJS
4Q5Q
4QacjH/9-=X3[NB
4S#M
4TGd
4U,O
4W3W
4WnaoaLS
4X.C!S#Np
4Z*ni{
4\,05\K
4\6\3\R
4\9zOJ
4]5d0X
4^mJ9^c
4`dL
4eHMHn
4g3g
4hCk
4k!j
4law
4m3m
4nDn\n^n
4ps;6p3p
4u5u
4u8{
4vdA5v6v7v8v9v:v#H;v
4{FK
4|Bu
5,6,7,8,9,:,;,<,=,>,?,@,
5-6-7-8-9-:-;-<-=->-?-W-
52?B`f;JafbfT>cf$WUMef]<dfffgfnBS
53~Tl9yPa
54)O
5565
576777
58;7<={C$6h@w8f
59d?f1<AXYE51
5;6;Y
5;zY
5=J?W
5=V?V@VGV^V`VmV
5@6-I
5B-0iKF
5BWj9
5DN@
5GUJU
5H~c^C{E
5JlAG9
5KQX
5Lrpq
5Nmc
5ObG!
5Q8Q7Q
5QiR6QG<
5S9@!E&2qT
5S;S`
5U3y
5X6X5
5XywL
5\x`1g
5]/r3
5_7_q
5`UaUdU
5bpE
5cdq
5h2h3hb
5iBiWicidihi
5kUp5
5m7mF
5mca
5n4ni
5q7q8q9q:q;q<q=q>q?q@qAqBqCqDqFqGqHqIqKqMqOqPqQqRqSqTqUqVqWqXqYqZq[q]q_q`qaqbqcqeqiqjqkqlqmqoqpqqqtquqvqwqyq{q|q~q
5s3s6
5v6v_
5v[W
5ws|sp/N5qRoHhqk
5y6y
6676
6878
68NRK
6:0?H
6A7A
6B7B8Be
6IhP
6KLmMm|
6L13
6M669?[Uh
6Q7Q3r
6StX]Y
6W5O
6Zq>4
6\fZ\rZ
6\id
6]/nxM
6^=2Sf
6_5_;VP=YUH0#6I?(L3_7JRS
6a5akAA
6b4Kr
6c_7
6d9u
6eKb
6eos
6gGe,V
6gcD
6i8i
6jzyLfXv
6k7k
6l)J
6lCl?l;l
6m+m=m8m
6n7n9n;n<n=n>n?n@nAnBnEnFnGnHnInJnKnLnOnPnQnRnUnWnYnZn\n]n^n`nanbncndnenfngnhninjnlnmnonpnqnrnsntnunvnwnxnynzn{n|n}n
6oso
6q2q[
6t7tf602OO4t,4{
6t~l
6x7xz
6|-rao.sF\kY
6}1Z5{
7'{O^B@iW
7080W
71U)
75.Q/QI
78bZb
79`Zv
7>AYRG
7B9E
7BiY6
7C8CQ
7Cp0Y
7D8DG
7E@BWIoTpT{1l
7GN46;@P#l
7KSh
7K^kJ
7L8[
7Q8Q
7Q;P
7Qzg
7R6R"
7S8S]
7SLz
7T[\_\&Lf\m
7U8U
7V3MUxXe
7X%=8
7X1NBJ
7Xcqo
7Y#1aS9Yb
7\sSR
7_p54_
7`lWlq/eaUmWQQ
7a]j]
7aw=
7bALQ
7e]Hr
7h%m
7i5i
7j6kUJ
7k=0
7kxo\uLmU[Oq
7p!n
7p6p'T`
7qxn
7tB}0|
7u6uz
7up`
7w+z
7x3u{T8O
7zFP
8!@PBPG
8"n&o&p&q&r&s&t&
8.I.P.c.h.n.,///6/Z/^/aObOPt\t^tat(u+uCueuivwv%wUw)
80qhph
81/4E
8191
8494
8595
8696:6
86:6
86:T
87%Bd28
8797:7
87la
8999Y
8;9;c
8<27F
8Dunrn
8E9Ej
8E;Q]
8Fpc
8H9H
8HcQd
8JSR
8J]UF@X
8Lb5ezk5l:llp+r,N
8MpVOe]5
8N+T
8NSXV0UXV
8O[i,Q
8R=2LK$
8RqM
8SVr
8T>ko]
8UDa
8VT=
8V|j40
8Wgj,W|HSXMX^TS
8Xsz
8Y9YIo
8ZpY@
8\K\N\>\R7E0G\>PA\(;_
8^'||w1w;N!t
8b+k
8b6ee5b
8bOw
8cn3
8d9diL
8eoLISW<jIh
8f7f
8g9g[W@U:gLB:W;g<g=gj<eCB@>g?g)<
8h(8
8j<j7jn
8jyQ
8k4>
8l?I9l|
8nU0G
8qu}y`
8rHv
8r}v
8|PQ
8}0P
8}hc
8~*~I~@~G~)~L~0~;~6~D~:~E
9!:!;!R!S!T!U!V!W!X!Y!Z![!)"."L!M!
90:0;0X
90H8?
91+cQ2,5_9h6
93K1
96G6
96xtM
98:8;8<8=8
98YOeDokpkZLHMr0d
9:D1k
9;bU
9?9M9
9C:C;CR
9D:D;DH
9FREGG[
9Gc7
9IJ1
9I~OJjNTMjOj~
9J]fd
9KBP
9M<0v3w;J[/:T
9NXS
9Oxi.
9PrT
9PvGu
9Q:Qt0e
9QaQGX}
9S0S
9V}UK4=2dNgFh
9Y49[@U
9[+B:[r>]L<[=[hM!
9a&g
9b7b
9cEk)t6MyR
9dh?\r
9dmv
9iEz
9iXq
9k:k
9l8lCB7l
9mEq
9mH?;mN
9o-E
9p:p<pCpGpKp
9p@pBp
9p~dId
9q:q
9t6q
9tcN
9z]zmzU
9|BnuJ
: <exception str() failed>
:&=&;&@&9&>&<&?&l&}"
:';'\']'^'6'7'8'T'U'V'W'X'!'"'#'%'+','-'.'/'0'1'2'3'4'''(')'*'='>'e'f'g'h'a'b'c'?'@'A'B'C'D'E'F'G'H'N'O'P'Q'R'S'Z'['c"l'&'`'o'a"<'m'5'
:0>jL
:3;3<3G
:3wd
:4;4F
:<QRHKM0
:<qTn
:>9>BUq
:@RE5D
:AMT
:GXN
:JAFle<P
:L}["?GDs[8
:Mm28=[8
:P:wsXMw
:Q9Q
:T3d
:UMsaK
:VAu
:a60G
:a9aBZ&38a4
:f27
:getstate
:j;je
:oVua
:p1n
:r+J8r]
:r}iJP
:u9B~
:uke
:xPh
:~<~=~>~?~@~B~C~D~E~F~H~I~J~K~L~M~N~O~P~Q~R~S~T~U~V~W~X~Y~Z~[~\~]~^~_~`~a~b~c~d~e~f~g~h~i~j~k~l~m~n~o~p~q~r~s~t~u~v~w~x~y~z~{~|~}~~~
; {!r} is not a package
;2<2b
;6GDGGL@L
;;0d9d4d:
;=%:`Rz2`:6D
;Ad44
;BN.x
;Bxl
;Cdb:6I
;E<Eo
;Fiiilirizi
;I"at
;JKPv
;NM5!WtWSS
;NOO
;P:P)JD
;RtS
;SlJ
;U2Ip
;Y!2jCO
;[XXZ
;c<cs
;eHA
;ejtjqj
;iq0f
;j>jEjPjVj[jkjsj
;leW
;m=m>m6m
;n4M
;nVUoWL
;o5oL
;r6r?r=rd
;skBm:
;tUZ
;uqQ=0
;w:wb
;zjWk
<%U.%U object at %p>
<%s %s object at %p>
<%s %s object owner=%ld count=%lu at %p>
<%s closed=False, access=%s, length=%zd, pos=%zd, offset=%lld>
<%s closed=True>
<%s name=%R>
<%s object at %p>
<%s object; span=(%zd, %zd), match=%.50R>
<%s.%s object for encoding %s at %#x>
<0=0d
<1H^1=WLJ^M
<4K5\
<5VVY
<61[d
<6H@FO.LwfT@)
<<xDg
<?#k_UHjT
<AddedDllDirectory()>
<AddedDllDirectory({!r})>
<B=BF
<Bhegeie
<C=CX
<COMMENT>
<ContextVar name=
<Crcn
<D=DN
<DirEntry %R>
<E5M
<ENCODING>
<ERRORTOKEN>
<J6Bq65E
<KbV
<Kj=(Y3
<Ljw
<M03
<NULL>
<N_TOKENS>
<PyHKEY:%p>
<Py[1W
<Token
<Token.MISSING>
<VeS
<WcL
<X0r
<Y}2:Yq5sB6YS
<\6RUu
<_=_>_;E?_B_1TC_
<__notes__ repr() failed>
<__phello__
<__phello__.ham
<_io.FileIO [closed]>
<_io.FileIO fd=%d mode='%s' closefd=%s>
<_io.FileIO name=%R mode='%s' closefd=%s>
<_io.TextIOWrapper
<_io._WindowsConsoleIO [closed]>
<_io._WindowsConsoleIO mode='rb' closefd=%s>
<_io._WindowsConsoleIO mode='wb' closefd=%s>
<ascii(self) failed>
<async_generator object %S at %p>
<attribute '%V' of '%s' objects>
<b=b>b?b@bAb97{R$=NJ%1GK
<bFi
<bound method %V of %R>
<built-in function %s>
<built-in method %S.%s>
<built-in method %s of %s object at %p>
<built-in method %s>
<capsule object %s%s%s at %p>
<cell at %p: %.80s object at %p>
<cell at %p: empty>
<class '%U.%U'>
<class '%s'>
<class at %p>
<classmethod(%R)>
<code object %U at %p, file "%U", line %d>
<code object %U at %p, file ???, line %d>
<coroutine object %S at %p>
<descriptor>.__name__ is not a unicode object
<descriptor>.__objclass__.__qualname__ is not a unicode object
<dictcomp>
<dummy key>
<dummy key> type
<exception str() failed>
<failed to get thread name>
<frame at %p, file %R, line %d, code %S>
<frozen __hello__>
<frozen __phello__.ham.eggs>
<frozen __phello__.ham>
<frozen __phello__.spam>
<frozen __phello__>
<frozen _collections_abc>
<frozen _sitebuiltins>
<frozen abc>
<frozen codecs>
<frozen frozen_only>
<frozen genericpath>
<frozen getpath>
<frozen importlib._bootstrap>
<frozen importlib._bootstrap_external>
<frozen importlib.machinery>
<frozen importlib.util>
<frozen io>
<frozen ntpath>
<frozen os>
<frozen posixpath>
<frozen runpy>
<frozen site>
<frozen stat>
<frozen zipimport>
<function %U at %p>
<generator object %S at %p>
<genexpr>
<i%Up
<instancemethod %V at %p>
<invalid compact kind>
<lambda>
<legacy invalid kind>
<listcomp>
<locals>
<member '%V' of '%s' objects>
<memory at %p>
<message not set>
<metaclass>
<method '%V' of '%s' objects>
<method-wrapper '%s' of %s object at %p>
<method>.__class__.__qualname__ is not a unicode object
<module 
<module {!r} (namespace)>
<module {!r} ({!r})>
<module {!r} ({})>
<module {!r} from {!r}>
<module {!r}>
<module>
<module>.__dict__ is not a dictionary
<module>r
<mxEY
<nil>
<note str() failed>
<object at %p is freed>\n
<object repr() failed>
<prefix>\python{major}{minor}
<rcl
<refcnt %ld at %p>
<released memory at %p>
<riTb
<run_path>
<setcomp>
<slot wrapper '%V' of '%s' objects>
<staticmethod(%R)>
<stderr>
<stdin>
<stdout>
<stdprinter(fd=%d) object at %p>
<string>
<super: <class '%s'>, <%s object>>
<super: <class '%s'>, NULL>
<symtable entry %U(%R), line %d>
<u$rNXOX
<unknown module name>
<unknown>
<unknown>.
<w=wJ
<weakproxy at %p to %s at %p>
<weakref at %p; dead>
<weakref at %p; to '%s' at %p (%U)>
<weakref at %p; to '%s' at %p>
<y=yAy
<zbf
<zipimporter object "
='A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
=/q1qPqJqSq^q
=2E8
=2n<nHnInKnLnOnQnSnTnWncn
=3hHr
=4>4S
=8J<=B$BB3jZw
=:3tc00ty
=<fYgX
=AOQK
=E>Eu
=HLJ
=L83
=MBx
=MhA/Pv;sF=
=O5A
=OsOGP
=PX5
=PpTpop
=Q5x]
=TOTAT(T$TGT
=Tpepiplpnpvp~p
=TwGl
=XoYvM:?
=Z>Z@Z?ZAZ~2G
=a?aMBj
=cifju
=h7h
=hxJ\8uLt
=iBitA~
=jCh}
=llF
=npJQ
=pPWPT
=u>u@uHuNuPuRuluruquzu}u~u
=v;a?MTtMf
=z Failed to find real location of c
=zHLMoUU
={'{*{.{/{1{
>*M*?*N*Z*`*
>69XH1O1Q1~E
>6w[D
>9s,s1s3s=sRs
>:BBHk^
>;opm
>=hffB':ifT
>BO.PlP
>EDm
>Gz]|]~]"^*0N1k
>Jjlq@i
>MEPGPn:HP$Up
>NpW
>R$Ih6e03
>TDu
>Uy7
>X?XU0<
>YAY@Y
>ZMd
>_6JJ
>a?Mf
>aVHAa
>h<Ih
>i-7{_\vR&R<R
>j1Y
>kPAuArTU844_
>ksls
>p?pi>@pl6ApBpCpDp5HEpFpd
>q@qAq
>q@qF
>rwCz
?1@1A1
?3333
?333333
?3@3S
?3fR
?4"g4IY8ID
?456789:;<=
?6xj
?>nG6q7qU?
??RCfCr
?D"6Y
?E@EAEv
?FI4B
?J0U
?JIH
?Q]C3<p
?S?Bumuru
?T@T>Tk
?UUUUUU
?VNB
?XE>rF2R0OgO_
?\OcB
?a,NM7@a
?aCoc
?dSJJ
?e85cuhu#L
?e=0JL
?ipojW
?k&3I9+VQ
?kwB-5
?lAl
?lMl[lml
?q1x
?qBqm
?tob
?xbXhS
?y/VFU
?zJT
?zv\O
@0At
@4A4b
@5'5c;Q
@6A6
@6AO(JvaxU|Sxa|ayaK
@92O
@9xGxQxfxH
@;Klh
@@A@B@C@D@E@F@G@
@B9_pB
@BABR
@CACj
@Cw9@agE@
@FAFF
@FQWPW
@ID3u
@MEB
@NTcOQuq
@RSDS|8
@SWc
@UA9@
@Upczm
@YoV
@Z4xrk
@aAa
@bLX
@c@ypi
@ez<]0;eCeGeK9VL%
@gAg6gP6Bg
@hAh
@jOa
@m9J
@m=mX
@qHmCo
@rn3
@sAs
@sAsW
@uAu
@vAvQDc
@wAw
A Mapping is a generic container for associating key/value\n    pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __iter__, and __len__.\n    
A MutableMapping is a generic container for associating\n    key/value pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __setitem__, __delitem__,\n    __iter__, and __len__.\n    
A bool indicating whether the memory is C contiguous.
A bool indicating whether the memory is Fortran contiguous.
A bool indicating whether the memory is contiguous.
A bool indicating whether the memory is read only.
A channel ID identifies a channel and may be used as an int.
A class method which returns a closure to use on sys.path_hook\n        which will return an instance using the specified loaders and the path\n        called on the closure.\n\n        If the path called on the closure is not a directory, ImportError is\n        raised.\n\n        
A combination of multiple unrelated exceptions.
A decorator indicating abstract classmethods.\n\n    Deprecated, use 'classmethod' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @classmethod\n            @abstractmethod\n            def my_abstract_classmethod(cls, ...):\n                ...\n\n    
A decorator indicating abstract methods.\n\n    Requires that the metaclass is ABCMeta or derived from it.  A\n    class that has a metaclass derived from ABCMeta cannot be\n    instantiated unless all of its abstract methods are overridden.\n    The abstract methods can be called using any of the normal\n    'super' call mechanisms.  abstractmethod() may be used to declare\n    abstract methods for properties and descriptors.\n\n    Usage:\n\n        class C(metaclass=ABCMeta):\n            @abstractmethod\n            def my_abstract_method(self, arg1, arg2, argN):\n                ...\n    
A decorator indicating abstract properties.\n\n    Deprecated, use 'property' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @property\n            @abstractmethod\n            def my_abstract_property(self):\n                ...\n\n    
A decorator indicating abstract staticmethods.\n\n    Deprecated, use 'staticmethod' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @staticmethod\n            @abstractmethod\n            def my_abstract_staticmethod(...):\n                ...\n\n    
A dictionary mapping group names to group numbers.
A interpreter ID identifies a interpreter and may be used as an int.
A load persistent id instruction was encountered,\nbut no persistent_load function was specified.
A loader that creates a module which defers loading until attribute access.
A lock object is a synchronization primitive.  To create a lock,\ncall threading.Lock().  Methods are:\n\nacquire() -- lock the lock, possibly blocking until it can be obtained\nrelease() -- unlock of the lock\nlocked() -- test whether the lock is currently locked\n\nA lock is not owned by the thread that locked it; another thread may\nunlock it.  A thread attempting to lock a lock that it has already locked\nwill block until another thread unlocks it.  Deadlocks may ensue.
A mutable set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__, __len__,\n    add(), and discard().\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), all you have to do is redefine __le__ and\n    then the other operations will automatically follow suit.\n    
A recursive lock implementation which is able to detect deadlocks\n    (e.g. thread 1 trying to take locks A then B, and thread 2 trying to\n    take locks B then A).\n    
A set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__ and __len__.\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), redefine __le__ and __ge__,\n    then the other operations will automatically follow suit.\n    
A simple _ModuleLock equivalent for Python builds without\n    multi-threading support.
A simple attribute-based namespace.\n\nSimpleNamespace(**kwargs)
A string containing the format (in struct module style)\n for each element in the view.
A subclass of the module type which triggers loading upon attribute access.
A tuple of (columns, lines) for holding terminal window size
A tuple of integers used internally for PIL-style arrays.
A tuple of ndim integers giving the shape of the memory\n as an N-dimensional array.
A tuple of ndim integers giving the size in bytes to access\n each element for each dimension of the array.
A wrapper object implementing __await__ for coroutines.
A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&
A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&x
A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(
A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,
A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
A1(hy
A333333
A3B3C3T
A4w4
A4zN
A6GJ:D":
A7B7
A7|e}e#f
A8B8
A9P`
A;S5
A?Y\p
A@R4Zk
AABACA
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
ABCMeta
ABCMeta.__instancecheck__
ABCMeta.__new__
ABCMeta.__subclasscheck__
ABCMeta._abc_caches_clear
ABCMeta._abc_registry_clear
ABCMeta._dump_registry
ABCMeta.register
ABOVE_NORMAL_PRIORITY_CLASS
ACCESS_COPY
ACCESS_DEFAULT
ACCESS_READ
ACCESS_WRITE
ACrWb
ADVAPI32.dll
AD_`m
AF'D
AIsD9
AJYh
AKXUD
ALLOCATIONGRANULARITY
AMPER
AMPEREQUAL
AN$q
AP>2K
APPDATA
AQ:r]
AQkY9\
AQpS
AR@R#>a8CR>H8
ASCII
ASFS
ASMp
AST constructor recursion depth mismatch (before=%d, after=%d)
AST identifier must be of type str
AST node column range (%d, %d) for line range (%d, %d) is not valid
AST node line range (%d, %d) is not valid
AST optimizer recursion depth mismatch (before=%d, after=%d)
AST string must be of type str
AST validator recursion depth mismatch (before=%d, after=%d)
ASYNC
ATDT!
ATEQUAL
AT`V
AU{y{d{f{i{s{
AVBVZ
AWAIT
AWBWy
AZUL
A_uB%
Aborted
Abstract Base Classes (ABCs) according to PEP 3119.
Abstract Base Classes (ABCs) for collections, according to PEP 3119.\n\nUnit tests are in test_collections.\n
Abstract base class for implementing the file system path protocol.
Abstract base class for time zone info objects.
Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n
Accelerators for the statistics module.\n
Accelerators for the typing module.\n
Acquire the import lock.
Acquires then releases the module lock for a given module name.\n\n    This is used to ensure a module is completely initialized, in the\n    event it is being imported by another thread.\n    
Add 'sitedir' argument to sys.path if missing and handle .pth files in\n    'sitedir'
Add a path to the DLL search path.\n\n        This search path is used when resolving dependencies for imported\n        extension modules (the module itself is resolved through sys.path),\n        and also by ctypes.\n\n        Remove the directory by calling close() on the returned object or\n        using it in a with statement.\n        
Add a per user site-package to sys.path\n\n    Each user has its own python directory with site-packages in the\n    home directory.\n    
Add an element to a set.\n\nThis has no effect if the element is already present.
Add an element to the left side of the deque.
Add an element to the right side of the deque.
Add an element.
Add site-packages to sys.path
Add standard site-specific directories to the module search path.\n\n    This function is called automatically when this module is imported,\n    unless the python interpreter was started with the -S flag.\n    
AddDllDirectory
AddVectoredExceptionHandler
Adding directory: 
AdjustTokenPrivileges
Adkx
AeS@N
Agyry
AlKN
All the operations on a read-only sequence.\n\n    Concrete subclasses must override __new__ or __init__,\n    __getitem__, and __len__.\n    
All the operations on a read-write sequence.\n\n    Concrete subclasses must provide __new__ or __init__,\n    __getitem__, __setitem__, __delitem__, __len__, and insert().\n    
Already preserving saved value
Alternate form (#) not allowed in string format specifier
Alternate form (#) not allowed with integer format specifier 'c'
An integer indicating how many dimensions of a multi-dimensional\n array the memory represents.
An;05UNQ`<P:E
AnnAssign
AnnAssign with simple non-Name target
AnnAssign(expr target, expr annotation, expr? value, int simple)
Append module search paths for third-party packages to sys.path.\n\n****************************************************************\n* This module is automatically imported during initialization. *\n****************************************************************\n\nThis will append site-specific paths to the module search path.  On\nUnix (including Mac OSX), it starts with sys.prefix and\nsys.exec_prefix (if different) and appends\nlib/python<version>/site-packages.\nOn other platforms (such as Windows), it tries each of the\nprefixes directly, as well as with lib/site-packages appended.  The\nresulting directories, if they exist, are appended to sys.path, and\nalso inspected for path configuration files.\n\nIf a file named "pyvenv.cfg" exists one directory above sys.executable,\nsys.prefix and sys.exec_prefix are set to that directory and\nit is also checked for site-packages (sys.base_prefix and\nsys.base_exec_prefix will always be the "real" prefixes of the Python\ninstallation). If "pyvenv.cfg" (a bootstrap configuration file) contains\nthe key "include-system-site-packages" set to anything other than "false"\n(case-insensitive), the system-level prefixes will still also be\nsearched for site-packages; otherwise they won't.\n\nAll of the resulting site-specific directories, if they exist, are\nappended to sys.path, and also inspected for path configuration\nfiles.\n\nA path configuration file is a file whose name has the form\n<package>.pth; its contents are additional directories (one per line)\nto be added to sys.path.  Non-existing directories (or\nnon-directories) are never added to sys.path; no directory is added to\nsys.path more than once.  Blank lines and lines beginning with\n'#' are skipped. Lines starting with 'import' are executed.\n\nFor example, suppose sys.prefix and sys.exec_prefix are set to\n/usr/local and there is a directory /usr/local/lib/python2.5/site-packages\nwith three subdirectories, foo, bar and spam, and two path\nconfiguration files, foo.pth and bar.pth.  Assume foo.pth contains the\nfollowing:\n\n  # foo package configuration\n  foo\n  bar\n  bletch\n\nand bar.pth contains:\n\n  # bar package configuration\n  bar\n\nThen the following directories are added to sys.path, in this order:\n\n  /usr/local/lib/python2.5/site-packages/bar\n  /usr/local/lib/python2.5/site-packages/foo\n\nNote that bletch is omitted because it doesn't exist; bar precedes foo\nbecause bar.pth comes alphabetically before foo.pth; and spam is\nomitted because it is not mentioned in either path configuration file.\n\nThe readline module is also automatically configured to enable\ncompletion for systems that support it.  This can be overridden in\nsitecustomize, usercustomize or PYTHONSTARTUP.  Starting Python in\nisolated mode (-I) disables automatic readline configuration.\n\nAfter these operations, an attempt is made to import a module\nnamed sitecustomize, which can perform arbitrary additional\nsite-specific customizations.  If this import fails with an\nImportError exception, it is silently ignored.\n
Argument expected for the %ls options\n
Argument expected for the -%c option\n
Arguments must be iterators.
ArithmeticError
ArrayType
As+P
Assert
Assert(expr test, expr? msg)
Assertion "%s" failed
Assertion failed
Assertion failed.
AssertionError
Assign
Assign field "targets" changed size during iteration
Assign field "targets" must be a list, not a %.200s
Assign(expr* targets, expr value, string? type_comment)
Assignment expressions are
Async comprehensions are
Async for loops are
Async functions are
Async with statements are
AsyncFor
AsyncFor field "body" changed size during iteration
AsyncFor field "body" must be a list, not a %.200s
AsyncFor field "orelse" changed size during iteration
AsyncFor field "orelse" must be a list, not a %.200s
AsyncFor(expr target, expr iter, stmt* body, stmt* orelse, string? type_comment)
AsyncFunctionDef
AsyncFunctionDef field "body" changed size during iteration
AsyncFunctionDef field "body" must be a list, not a %.200s
AsyncFunctionDef field "decorator_list" changed size during iteration
AsyncFunctionDef field "decorator_list" must be a list, not a %.200s
AsyncFunctionDef(identifier name, arguments args, stmt* body, expr* decorator_list, expr? returns, string? type_comment)
AsyncGenerator
AsyncGenerator.__anext__
AsyncGenerator.__subclasshook__
AsyncGenerator.aclose
AsyncGenerator.asend
AsyncGenerator.athrow
AsyncIterable
AsyncIterable.__aiter__
AsyncIterable.__subclasshook__
AsyncIterator
AsyncIterator.__aiter__
AsyncIterator.__anext__
AsyncIterator.__subclasshook__
AsyncWith
AsyncWith field "body" changed size during iteration
AsyncWith field "body" must be a list, not a %.200s
AsyncWith field "items" changed size during iteration
AsyncWith field "items" must be a list, not a %.200s
AsyncWith(withitem* items, stmt* body, string? type_comment)
At most 45 bytes at once
Attribute
Attribute not found.
Attribute(expr value, identifier attr, expr_context ctx)
AttributeError
AuD\
AugAssign
AugAssign(expr target, operator op, expr value)
Await
Await expressions are
Await(expr value)
Awaitable
Awaitable.__await__
Awaitable.__subclasshook__
B c0
B'C'D'E'F'G'H'I'J'K'L'M'N'O'P'
B,qZD'J"J
B.__alloc__() -> int\n\nReturn the number of bytes actually allocated.
B.capitalize() -> copy of B\n\nReturn a copy of B with only its first character capitalized (ASCII)\nand the rest lower-cased.
B.count(sub[, start[, end]]) -> int\n\nReturn the number of non-overlapping occurrences of subsection sub in\nbytes B[start:end].  Optional arguments start and end are interpreted\nas in slice notation.
B.endswith(suffix[, start[, end]]) -> bool\n\nReturn True if B ends with the specified suffix, False otherwise.\nWith optional start, test B beginning at that position.\nWith optional end, stop comparing B at that position.\nsuffix can also be a tuple of bytes to try.
B.find(sub[, start[, end]]) -> int\n\nReturn the lowest index in B where subsection sub is found,\nsuch that sub is contained within B[start,end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.
B.index(sub[, start[, end]]) -> int\n\nReturn the lowest index in B where subsection sub is found,\nsuch that sub is contained within B[start,end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the subsection is not found.
B.isalnum() -> bool\n\nReturn True if all characters in B are alphanumeric\nand there is at least one character in B, False otherwise.
B.isalpha() -> bool\n\nReturn True if all characters in B are alphabetic\nand there is at least one character in B, False otherwise.
B.isascii() -> bool\n\nReturn True if B is empty or all characters in B are ASCII,\nFalse otherwise.
B.isdigit() -> bool\n\nReturn True if all characters in B are digits\nand there is at least one character in B, False otherwise.
B.islower() -> bool\n\nReturn True if all cased characters in B are lowercase and there is\nat least one cased character in B, False otherwise.
B.isspace() -> bool\n\nReturn True if all characters in B are whitespace\nand there is at least one character in B, False otherwise.
B.istitle() -> bool\n\nReturn True if B is a titlecased string and there is at least one\ncharacter in B, i.e. uppercase characters may only follow uncased\ncharacters and lowercase characters only cased ones. Return False\notherwise.
B.isupper() -> bool\n\nReturn True if all cased characters in B are uppercase and there is\nat least one cased character in B, False otherwise.
B.lower() -> copy of B\n\nReturn a copy of B with all ASCII characters converted to lowercase.
B.rfind(sub[, start[, end]]) -> int\n\nReturn the highest index in B where subsection sub is found,\nsuch that sub is contained within B[start,end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.
B.rindex(sub[, start[, end]]) -> int\n\nReturn the highest index in B where subsection sub is found,\nsuch that sub is contained within B[start,end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaise ValueError when the subsection is not found.
B.startswith(prefix[, start[, end]]) -> bool\n\nReturn True if B starts with the specified prefix, False otherwise.\nWith optional start, test B beginning at that position.\nWith optional end, stop comparing B at that position.\nprefix can also be a tuple of bytes to try.
B.swapcase() -> copy of B\n\nReturn a copy of B with uppercase ASCII characters converted\nto lowercase ASCII and vice versa.
B.title() -> copy of B\n\nReturn a titlecased version of B, i.e. ASCII words start with uppercase\ncharacters, all remaining cased characters have lowercase.
B.upper() -> copy of B\n\nReturn a copy of B with all ASCII characters converted to uppercase.
B6C6D6
B6OZ
B8EXE
B<C<D<S
B?MhyV
B@wm.B$Bum)0"O
BAAAE
BBCBDBS
BCryptGenRandom
BDCD
BDEFGHJKLMN
BECE
BELOW_NORMAL_PRIORITY_CLASS
BELT
BHkE
BINBYTES exceeds system's maximum size of %zd bytes
BINSTRING exceeds system's maximum size of %zd bytes
BINUNICODE exceeds system's maximum size of %zd bytes
BJ~6!XZSw?
BLAKE2B_MAX_DIGEST_SIZE
BLAKE2B_MAX_KEY_SIZE
BLAKE2B_PERSON_SIZE
BLAKE2B_SALT_SIZE
BLAKE2S_MAX_DIGEST_SIZE
BLAKE2S_MAX_KEY_SIZE
BLAKE2S_PERSON_SIZE
BLAKE2S_SALT_SIZE
BL~mqmrmI
BMZg
BN*P
BNGV
BOM32_BE
BOM32_LE
BOM64_BE
BOM64_LE
BOM_BE
BOM_LE
BOM_UTF16
BOM_UTF16_BE
BOM_UTF16_LE
BOM_UTF32
BOM_UTF32_BE
BOM_UTF32_LE
BOM_UTF8
BTPSCksED
BUG: internal directive bookkeeping broken
BUILDSTDLIB_LANDMARKS
BUILD_LANDMARK
BW/C67QG)Cb\X\k\T\
BYTEARRAY8 exceeds system's maximum size of %zd bytes
BYTECODE_SUFFIXES
BYoGR
BY}Z}j}p}
B\fp\v0
B\rC;@4C
B]7oTg
B]HC<F.NL]S
Bad code object in .pyc file
Bad compression level
Bad dict format
Bad magic number in .pyc file
Base class for I/O related errors.
Base class for arithmetic errors.
Base class for buffered IO objects.\n\nThe main difference with RawIOBase is that the read() method\nsupports omitting the size argument, and does not have a default\nimplementation that defers to readinto().\n\nIn addition, read(), readinto() and write() may raise\nBlockingIOError if the underlying raw stream is in non-blocking\nmode and not ready; unlike their raw counterparts, they will never\nreturn None.\n\nA typical implementation should not inherit from a RawIOBase\nimplementation, but wrap one.\n
Base class for lookup errors.
Base class for raw binary I/O.
Base class for text I/O.\n\nThis class provides a character and line based interface to stream\nI/O. There is no readinto method because Python's character strings\nare immutable.\n
Base class for warning categories.
Base class for warnings about Unicode related problems, mostly\nrelated to conversion problems.
Base class for warnings about bytes and buffer related problems, mostly\nrelated to conversion from str or comparing to str.
Base class for warnings about constructs that will change semantically\nin the future.
Base class for warnings about deprecated features.
Base class for warnings about dubious runtime behavior.
Base class for warnings about dubious syntax.
Base class for warnings about encodings.
Base class for warnings about features which will be deprecated\nin the future.
Base class for warnings about probable mistakes in module imports
Base class for warnings about resource usage.
Base class for warnings generated by user code.
Base class of common code needed by both SourceLoader and\n    SourcelessFileLoader.
Base file loader class which implements the loader protocol methods that\n    require file system usage.
BaseException
BaseExceptionGroup
BbDbEb
Bb|6DHCb
BciG#
BdURIdCd
Be57Ce
Be<e
Best-effort function to write data to a path atomically.\n    Be prepared to handle a FileExistsError if concurrent writing of the\n    temporary file is attempted.
BfCf
Bfcc
BinOp
BinOp(expr left, operator op, expr right)
Bisection algorithms.\n\nThis module provides support for maintaining a list in sorted order without\nhaving to sort the list after each insertion. For long lists of items with\nexpensive comparison operations, this can be an improvement over the more\ncommon approach.\n
Bit mask identifying available product suites
BitAnd
BitOr
BitXor
BjAjZi
Bjfr6p
BkDkvIWVMU2POk8NPk]
Bl6Ac3
BlockingIOError
BnZ+Z
BoolOp
BoolOp field "values" changed size during iteration
BoolOp field "values" must be a list, not a %.200s
BoolOp with less than 2 values
BoolOp(boolop op, expr* values)
BrCv
Break
Broken pipe.
BrokenPipeError
Buffer error.
Buffer had room for %zd bytes but %u bytes required
Buffer is NULL
Buffer must be single dimension
BufferError
BufferedIOBase
BufferedIncrementalDecoder
BufferedIncrementalDecoder.__init__
BufferedIncrementalDecoder._buffer_decode
BufferedIncrementalDecoder.decode
BufferedIncrementalDecoder.getstate
BufferedIncrementalDecoder.reset
BufferedIncrementalDecoder.setstate
BufferedIncrementalEncoder
BufferedIncrementalEncoder.__init__
BufferedIncrementalEncoder._buffer_encode
BufferedIncrementalEncoder.encode
BufferedIncrementalEncoder.getstate
BufferedIncrementalEncoder.reset
BufferedIncrementalEncoder.setstate
BufferedRWPair
BufferedRWPair(reader, writer, buffer_size=DEFAULT_BUFFER_SIZE, /)\n--\n\nA buffered reader and writer object together.\n\nA buffered reader object and buffered writer object put together to\nform a sequential IO object that can read and write. This is typically\nused with a socket or two-way pipe.\n\nreader and writer are RawIOBase objects that are readable and\nwriteable respectively. If the buffer_size is omitted it defaults to\nDEFAULT_BUFFER_SIZE.
BufferedRandom
BufferedRandom(raw, buffer_size=DEFAULT_BUFFER_SIZE)\n--\n\nA buffered interface to random access streams.\n\nThe constructor creates a reader and writer for a seekable stream,\nraw, given in the first argument. If the buffer_size is omitted it\ndefaults to DEFAULT_BUFFER_SIZE.
BufferedReader
BufferedReader(raw, buffer_size=DEFAULT_BUFFER_SIZE)\n--\n\nCreate a new buffered reader using the given readable raw IO object.
BufferedWriter
BufferedWriter(raw, buffer_size=DEFAULT_BUFFER_SIZE)\n--\n\nA buffer for a writeable sequential RawIO object.\n\nThe constructor creates a BufferedWriter for the given writeable raw\nstream. If the buffer_size is not given, it defaults to\nDEFAULT_BUFFER_SIZE.
Build number
Built-in functions, types, exceptions, and other objects.\n\nThis module provides direct access to all 'built-in'\nidentifiers of Python; for example, builtins.len is\nthe full name for the built-in function len().\n\nThis module is not normally accessed explicitly by most\napplications, but can be useful in modules that provide\nobjects with the same name as a built-in value, but in\nwhich the built-in of that name is also needed.
BuiltinImporter
BuiltinImporter.create_module
BuiltinImporter.exec_module
BuiltinImporter.find_module
BuiltinImporter.find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
BuiltinImporter.find_spec
BuiltinImporter.get_code
BuiltinImporter.get_source
BuiltinImporter.is_package
BuiltinImporter.module_repr
BuiltinImporter.module_repr() is deprecated and slated for removal in Python 3.12
BwAwDwk
ByteString
BytesIO
BytesIO(initial_bytes=b'')\n--\n\nBuffered I/O implementation using an in-memory bytes buffer.
BytesWarning
Bza{mz"pqL
C"G"H"K"J"I"L"
C*S*++*+9*H*
C.UTF-8
C.utf8
C0.m
C0n=/9GM
C14mqcrc
C1D1
C1QA}8E8g6a
C2QAQ
C4D4E4g
C5GEca
C6cq
C=soL6+0C
CC(o
CELL
CHAR_MAX
CIRCUMFLEX
CIRCUMFLEXEQUAL
CKM`F`B`
CL>wK|
CMZM
CMnYpY
CN8rv07rQ
CODESIZE
COLON
COLONEQUAL
COMMA
COzO
CP0Xf_\tq
CP_UTF7
CP_UTF8
CPython
CREATE_BREAKAWAY_FROM_JOB
CREATE_DEFAULT_ERROR_MODE
CREATE_NEW_CONSOLE
CREATE_NEW_PROCESS_GROUP
CREATE_NO_WINDOW
CRT_ASSEMBLY_VERSION
CS&Kf
CS<S-4
CSV dialect\n\nThe Dialect type records CSV parsing and generation options.\n
CSV parsing and writing.\n\nThis module provides classes that assist in the reading and writing\nof Comma Separated Value (CSV) files, and implements the interface\ndescribed by PEP 305.  Although many CSV files are simple to parse,\nthe format is not formally defined by a stable specification and\nis subtle enough that parsing lines of a CSV file with something\nlike line.split(",") is bound to fail.  The module supports three\nbasic APIs: reading, writing, and registration of dialects.\n\n\nDIALECT REGISTRATION:\n\nReaders and writers support a dialect argument, which is a convenient\nhandle on a group of settings.  When the dialect argument is a string,\nit identifies one of the dialects previously registered with the module.\nIf it is a class or instance, the attributes of the argument are used as\nthe settings for the reader or writer:\n\n    class excel:\n        delimiter = ','\n        quotechar = '"'\n        escapechar = None\n        doublequote = True\n        skipinitialspace = False\n        lineterminator = '\r\n'\n        quoting = QUOTE_MINIMAL\n\nSETTINGS:\n\n    * quotechar - specifies a one-character string to use as the\n        quoting character.  It defaults to '"'.\n    * delimiter - specifies a one-character string to use as the\n        field separator.  It defaults to ','.\n    * skipinitialspace - specifies how to interpret spaces which\n        immediately follow a delimiter.  It defaults to False, which\n        means that spaces immediately following a delimiter is part\n        of the following field.\n    * lineterminator -  specifies the character sequence which should\n        terminate rows.\n    * quoting - controls when quotes should be generated by the writer.\n        It can take on any of the following module constants:\n\n        csv.QUOTE_MINIMAL means only when required, for example, when a\n            field contains either the quotechar or the delimiter\n        csv.QUOTE_ALL means that quotes are always placed around fields.\n        csv.QUOTE_NONNUMERIC means that quotes are always placed around\n            fields which do not parse as integers or floating point\n            numbers.\n        csv.QUOTE_NONE means that quotes are never placed around fields.\n    * escapechar - specifies a one-character string used to escape\n        the delimiter when quoting is set to QUOTE_NONE.\n    * doublequote - controls the handling of quotes inside fields.  When\n        True, two consecutive quotes are interpreted as one during read,\n        and when writing, each quote character embedded in the data is\n        written as two quotes\n
CSV reader\n\nReader objects are responsible for reading and parsing tabular data\nin CSV format.\n
CSV writer\n\nWriter objects are responsible for generating tabular data\nin CSV format from sequence input.\n
CTRL_BREAK_EVENT
CTRL_C_EVENT
CU0S
CV=V33>VGVFVEVAV
CVtV
CXBX
CYhP
C\53
C\H\I\T2Q\UKl
C\fjVB
C^%X*?M[lRzF*Ek
C`6J`
CaBa
Cache the module name and the path to the file found by the\n        finder.
Calculate the mode permissions for a bytecode file.
Calculate what __package__ should be.\n\n    __package__ is not guaranteed to be defined or could be set to None\n    to represent that its proper value is unknown.\n\n    
Call
Call field "args" changed size during iteration
Call field "args" must be a list, not a %.200s
Call field "keywords" changed size during iteration
Call field "keywords" must be a list, not a %.200s
Call the invalidate_caches() method on all path entry finders\n        stored in sys.path_importer_caches (where implemented).
Call(expr func, expr* args, keyword* keywords)
Callable
Callable must be used as Callable[[arg, ...], result].
Callable.__call__
Callable.__subclasshook__
CallableProxyType
Can only register classes
Can't allocate memory for compression object
Can't allocate memory for decompression object
Can't compare %.100s and %.100s
Can't convert '%.100s' object to str implicitly
Can't do nonzero cur-relative seeks
Can't get attribute %R on %R
Can't initialize bytes iterator type
Can't initialize bytes type
Can't initialize float type
Can't initialize int type
Can't initialize threads for interpreter
Can't initialize tuple iterator type
Can't initialize tuple type
Can't initialize types
Can't initialize unicode types
Can't instantiate abstract class %s with abstract method%s %U
Can't mix absolute and relative paths
Can't mix strings and bytes in path components
Can't pickle %R: attribute lookup %S on %S failed
Can't pickle %R: extension code %R isn't an integer
Can't pickle %R: extension code %ld is out of range
Can't pickle %R: import of module %R failed
Can't pickle %R: it's not the same object as %S.%S
Can't pickle local attribute %R on %R
Can't pickle local object %R
CancelIo
CancelIoEx
Cannot add note: __notes__ is not a list
Cannot copy %s characters into a string of %s characters
Cannot create '%.200s objects
Cannot create a consistent method resolution\norder (MRO) for bases
Cannot extend an incomplete type '%.100s'
Cannot have two type comments on def
Cannot install a profile function while another profile function is being installed
Cannot install a trace function while another trace function is being installed
Cannot modify a string currently used
Cannot nest BaseExceptions in '%.200s'
Cannot nest BaseExceptions in an ExceptionGroup
Cannot open console input buffer for writing
Cannot open console output buffer for reading
Cannot recover from MemoryErrors while normalizing exceptions.
Cannot recover from stack overflow.
Cannot recover from the recursive normalization of an exception.
Cannot set an attribute on 
Cannot specify '%c' with '%c'.
Cannot specify '%c' with '\x%x'.
Cannot specify a default for %s() with multiple positional arguments
Cannot specify both ',' and '_'.
Cannot use closefd=False with file name
Cannot use package as __main__ module
Cannot write %zi characters at %zi in a string of %zi characters
Capsule objects let you wrap a C "void *" pointer in a Python\nobject.  They're a way of passing data through the Python interpreter\nwithout creating your own custom type.\n\nCapsules are used for communication between extension modules.\nThey provide a way for an extension module to export a C interface\nto other extension modules, so that extension modules can use the\nPython import mechanism to link to one another.\n
Cb??2L
Cdm5
Ceiling of an Integral returns itself.
Cell is empty
CgDg:;^5FB`1Eg5TFg?8HgGgl7
ChannelClosedError
ChannelEmptyError
ChannelError
ChannelID
ChannelNotEmptyError
ChannelNotFoundError
Check if user site directory is safe for inclusion\n\n    The function tests for the command line flag (including environment var),\n    process uid/gid equal to effective uid/gid.\n\n    None: Disabled for security reasons\n    False: Disabled by user (command line option)\n    True: Safe and enabled\n    
Checks if obj matches either a list of types, ``...``, ``ParamSpec`` or\n    ``_ConcatenateGenericAlias`` from typing.py\n    
Child process error.
ChildProcessError
CiIA
Circular reference detected
Cl!Ya7+
Cl8KC@~L
Class: 
ClassDef
ClassDef field "bases" changed size during iteration
ClassDef field "bases" must be a list, not a %.200s
ClassDef field "body" changed size during iteration
ClassDef field "body" must be a list, not a %.200s
ClassDef field "decorator_list" changed size during iteration
ClassDef field "decorator_list" must be a list, not a %.200s
ClassDef field "keywords" changed size during iteration
ClassDef field "keywords" must be a list, not a %.200s
ClassDef(identifier name, expr* bases, keyword* keywords, stmt* body, expr* decorator_list)
Clear the caches (for debugging or testing).
Clear the registry (for debugging or testing).
Close
Close($self, /)\n--\n\nCloses the underlying Windows handle.\n\nIf the handle is already closed, no error is raised.
CloseHandle
CloseHandle($module, handle, /)\n--\n\nClose handle.
CloseKey
CloseKey($module, hkey, /)\n--\n\nCloses a previously opened registry key.\n\n  hkey\n    A previously opened key.\n\nNote that if the key is not closed using this method, it will be\nclosed when the hkey object is destroyed by Python.
Cl~O
Cm2P
CoDoEoHoIoJoLoNoOoPoQoRoSoToUoVoWoYoZo[o]o_o`oaocodoeogohoiojokolooopoqosouovowoyo{o}o~o
Codec
Codec details when looking up the codec registry
Codec.decode
Codec.encode
CodecInfo
CodecInfo.__new__
CodecInfo.__repr__
Collection
Collection.__subclasshook__
Common base class for all exceptions
Common base class for all non-exit exceptions.
Common operations on Posix pathnames.\n\nInstead of importing this module directly, import os and refer to\nthis module as os.path.  The "os.path" name is an alias for this\nmodule on Posix systems; on other systems (e.g. Windows),\nos.path provides the same operations in a manner specific to that\nplatform, and is an alias to another module (e.g. ntpath).\n\nSome of this can actually be useful on non-Posix systems too, e.g.\nfor manipulation of the pathname component of URLs.\n
Common pathname manipulations, WindowsNT/95 version.\n\nInstead of importing this module directly, import os and refer to this\nmodule as os.path.\n
Compare
Compare field "comparators" changed size during iteration
Compare field "comparators" must be a list, not a %.200s
Compare field "ops" changed size during iteration
Compare field "ops" must be a list, not a %.200s
Compare has a different number of comparators and operands
Compare with no comparators
Compare(expr left, cmpop* ops, expr* comparators)
CompareStringOrdinal
Comparison between bytearray and string
Comparison between bytes and int
Comparison between bytes and string
Compile bytecode as found in a pyc.
Compiled regular expression object.
Compute the hash value of a set.\n\n        Note that we don't define __hash__: not all sets are hashable.\n        But if you define a hashable set type, its __hash__ should\n        call this function.\n\n        This must be compatible __eq__.\n\n        All sets ought to compare equal if they contain the same\n        elements, regardless of how they are implemented, and\n        regardless of the order of the elements; so there's not much\n        freedom for __eq__ or __hash__.  We match the algorithm used\n        by the built-in frozenset type.\n        
Concrete implementation of InspectLoader.get_code.\n\n        Reading of bytecode requires path_stats to be implemented. To write\n        bytecode, set_data must also be implemented.\n\n        
Concrete implementation of InspectLoader.get_source.
Concrete implementation of InspectLoader.is_package by checking if\n        the path returned by get_filename has a filename of '__init__.py'.
Concrete implementation of SourceLoader using the file system.
ConnectNamedPipe
ConnectNamedPipe($module, /, handle, overlapped=False)\n--\n\n
ConnectRegistry
ConnectRegistry($module, computer_name, key, /)\n--\n\nEstablishes a connection to the registry on another computer.\n\n  computer_name\n    The name of the remote computer, of the form r"\\computername".  If\n    None, the local computer is used.\n  key\n    The predefined key to connect to.\n\nThe return value is the handle of the opened key.\nIf the function fails, an OSError exception is raised.
Connection aborted.
Connection error.
Connection refused.
Connection reset.
ConnectionAbortedError
ConnectionError
ConnectionRefusedError
ConnectionResetError
Console buffer does not support %s
Constant
Constant(constant value, string? kind)
Constants/functions for interpreting results of os.stat() and os.lstat().\n\nSuggested usage: from stat import *\n
Construct a callable which returns the eager loader made lazy.
Construct a naive UTC datetime from a POSIX timestamp.
Construct an instance of the class from any iterable input.\n\n        Must override this method if the class constructor signature\n        does not accept an iterable for an input.\n        
Container
Container.__contains__
Container.__subclasshook__
Context Variables
Context manager for the import lock.
Context() does not accept any arguments
Continue
Conversion between binary data and ASCII
Convert 2 bytes in little-endian to an integer.
Convert 4 bytes in little-endian to an integer.
Convert a 32-bit integer to little-endian.
Convert a bytecode file path to a source path (if possible).\n\n    This function exists purely for backwards-compatibility for\n    PyImport_ExecCodeModuleWithFilenames() in the C API.\n\n    
Convert a cmp= function into a key= function.
Convert a file's mode to a string of the form '-rwxrwxrwx'
Convert a file's mode to a string of the form '-rwxrwxrwx'.
Copyright (c) 2001-2023 Python Software Foundation.\nAll Rights Reserved.\n\nCopyright (c) 2000 BeOpen.com.\nAll Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\nAll Rights Reserved.
Core implementation of import.\n\nThis module is NOT meant to be directly imported! It has been designed such\nthat it can be bootstrapped into Python as the implementation of import. As\nsuch it requires the injection of specific modules and attributes in order to\nwork. One should use importlib as the public-facing version of this module.\n\n
Core implementation of path-based import.\n\nThis module is NOT meant to be directly imported! It has been designed such\nthat it can be bootstrapped into Python as the implementation of import. As\nsuch it requires the injection of specific modules and attributes in order to\nwork. One should use importlib as the public-facing version of this module.\n\n
Coroutine
Coroutine.__subclasshook__
Coroutine.close
Coroutine.send
Coroutine.throw
Could not access runpy._run_module_as_main\n
Could not convert module name to unicode\n
Could not convert the data to the specified type.
Could not create arguments for runpy._run_module_as_main\n
Could not import runpy module\n
Could not open PYTHONSTARTUP\n
Couldn't create autoTSSkey mapping
Couldn't get thread-state dictionary
CpVL
Cq_n
CrIrPrVrx
Create a ModuleSpec for the specified module.\n\n        Returns None if the module cannot be found.\n        
Create a built-in module
Create a cached callable that wraps another function.\n\nuser_function:      the function being cached\n\nmaxsize:  0         for no caching\n          None      for unlimited cache size\n          n         for a bounded cache\n\ntyped:    False     cache f(3) and f(3.0) as identical calls\n          True      cache f(3) and f(3.0) as distinct calls\n\ncache_info_type:    namedtuple class with the fields:\n                        hits misses currsize maxsize\n
Create a mapping from a string name to a dialect class.\n    dialect = csv.register_dialect(name[, dialect[, **fmtparams]])
Create a module based on the provided spec.
Create an uninitialized extension module
CreateDirectoryW
CreateEventA
CreateFile
CreateFile($module, file_name, desired_access, share_mode,\n           security_attributes, creation_disposition,\n           flags_and_attributes, template_file, /)\n--\n\n
CreateFileA
CreateFileMapping
CreateFileMapping($module, file_handle, security_attributes, protect,\n                  max_size_high, max_size_low, name, /)\n--\n\n
CreateFileMappingA
CreateFileMappingW
CreateFileW
CreateHardLinkW
CreateJunction
CreateJunction($module, src_path, dst_path, /)\n--\n\n
CreateKey
CreateKey($module, key, sub_key, /)\n--\n\nCreates or opens the specified key.\n\n  key\n    An already open key, or one of the predefined HKEY_* constants.\n  sub_key\n    The name of the key this method opens or creates.\n\nIf key is one of the predefined keys, sub_key may be None. In that case,\nthe handle returned is the same key handle passed in to the function.\n\nIf the key already exists, this function opens the existing key.\n\nThe return value is the handle of the opened key.\nIf the function fails, an OSError exception is raised.
CreateKeyEx
CreateKeyEx($module, /, key, sub_key, reserved=0,\n            access=winreg.KEY_WRITE)\n--\n\nCreates or opens the specified key.\n\n  key\n    An already open key, or one of the predefined HKEY_* constants.\n  sub_key\n    The name of the key this method opens or creates.\n  reserved\n    A reserved integer, and must be zero.  Default is zero.\n  access\n    An integer that specifies an access mask that describes the\n    desired security access for the key. Default is KEY_WRITE.\n\nIf key is one of the predefined keys, sub_key may be None. In that case,\nthe handle returned is the same key handle passed in to the function.\n\nIf the key already exists, this function opens the existing key\n\nThe return value is the handle of the opened key.\nIf the function fails, an OSError exception is raised.
CreateNamedPipe
CreateNamedPipe($module, name, open_mode, pipe_mode, max_instances,\n                out_buffer_size, in_buffer_size, default_timeout,\n                security_attributes, /)\n--\n\n
CreateNamedPipeA
CreatePipe
CreatePipe($module, pipe_attrs, size, /)\n--\n\nCreate an anonymous pipe.\n\n  pipe_attrs\n    Ignored internally, can be None.\n\nReturns a 2-tuple of handles, to the read and write ends of the pipe.
CreateProcess
CreateProcess($module, application_name, command_line, proc_attrs,\n              thread_attrs, inherit_handles, creation_flags,\n              env_mapping, current_directory, startup_info, /)\n--\n\nCreate a new process and its primary thread.\n\n  command_line\n    Can be str or None\n  proc_attrs\n    Ignored internally, can be None.\n  thread_attrs\n    Ignored internally, can be None.\n\nThe return value is a tuple of the process handle, thread handle,\nprocess ID, and thread ID.
CreateProcess() argument 2 must be str or None, not %s
CreateProcessW
CreateSemaphoreA
CreateSymbolicLinkW
CreateToolhelp32Snapshot
CreateWaitableTimerExW
Ct9H_
CtT`
Ctrl-D (i.e. EOF)
Ctrl-Z plus Return
CuXi
Current date or datetime:  same as self.__class__.fromtimestamp(time.time()).
Current thread 0x
CxDx
CzWe
C|O:array
D"hPn<
D&mQm
D*T*%*0*]*c*'*3*&*2*G*W*(*4*
D,7{K
D.__reversed__() -- return a reverse iterator over the deque
D.__reversed__() -> reverse iterator
D.__sizeof__() -- size of D in memory, in bytes
D.__sizeof__() -> size of D in memory, in bytes
D.clear() -> None.  Remove all items from D.
D.copy() -> a shallow copy of D
D.copy() -> a shallow copy of D.
D.count(value) -- return number of occurrences of value
D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
D.index(value, [start, [stop]]) -- return first index of value.\nRaises ValueError if the value is not present.
D.insert(index, object) -- insert object before index
D.items() -> a set-like object providing a view on D's items
D.keys() -> a set-like object providing a view on D's keys
D.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n          If key is not found, d is returned if given, otherwise KeyError is raised.\n        
D.popitem() -> (k, v), remove and return some (key, value) pair\n           as a 2-tuple; but raise KeyError if D is empty.\n        
D.remove(value) -- remove first occurrence of value.
D.reverse() -- reverse *IN PLACE*
D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
D.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\nIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\nIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\nIn either case, this is followed by: for k in F:  D[k] = F[k]
D.values() -> an object providing a view on D's values
D2E2
D3E3Z
D3jRj
D8E8F8
D9;V
D:\a\1\b\bin\amd64\python311.pdb
D:\a\1\s\Modules\_sha3\sha3module.c
D:\a\1\s\Modules\arraymodule.c
D:\a\1\s\Modules\gcmodule.c
D:\a\1\s\Objects\bytearrayobject.c
D:\a\1\s\Objects\bytesobject.c
D:\a\1\s\Objects\cellobject.c
D:\a\1\s\Objects\classobject.c
D:\a\1\s\Objects\codeobject.c
D:\a\1\s\Objects\dictobject.c
D:\a\1\s\Objects\fileobject.c
D:\a\1\s\Objects\frameobject.c
D:\a\1\s\Objects\funcobject.c
D:\a\1\s\Objects\iterobject.c
D:\a\1\s\Objects\listobject.c
D:\a\1\s\Objects\longobject.c
D:\a\1\s\Objects\memoryobject.c
D:\a\1\s\Objects\methodobject.c
D:\a\1\s\Objects\moduleobject.c
D:\a\1\s\Objects\object.c
D:\a\1\s\Objects\setobject.c
D:\a\1\s\Objects\structseq.c
D:\a\1\s\Objects\tupleobject.c
D:\a\1\s\Objects\typeobject.c
D:\a\1\s\Objects\unicodeobject.c
D:\a\1\s\Objects\weakrefobject.c
D:\a\1\s\Parser\string_parser.c
D:\a\1\s\Python\ceval.c
D:\a\1\s\Python\getargs.c
D:\a\1\s\Python\import.c
D:\a\1\s\Python\pystrtod.c
D:\a\1\s\Python\traceback.c
D<zR\C\?x
D=lU`2HGk?-YA
DA{A0Vwqw
DBL_DIG -- maximum number of decimal digits that can be faithfully represented in a float
DBL_EPSILON -- Difference between 1 and the next representable float
DBL_MANT_DIG -- mantissa digits
DBL_MAX -- maximum representable finite float
DBL_MAX_10_EXP -- maximum int e such that 10**e is representable
DBL_MAX_EXP -- maximum int e such that radix**(e-1) is representable
DBL_MIN -- Minimum positive normalized float
DBL_MIN_10_EXP -- minimum int e such that 10**e is a normalized float
DBL_MIN_EXP -- minimum int e such that radix**(e-1) is a normalized float
DBpe
DCBfo
DDED
DE3MC9=?
DEBUG_BUILD
DEBUG_BYTECODE_SUFFIXES
DEBUG_COLLECTABLE
DEBUG_LEAK
DEBUG_SAVEALL
DEBUG_STATS
DEBUG_UNCOLLECTABLE
DEDENT
DEFAULT_BUFFER_SIZE
DEFAULT_PROGRAM_NAME
DEFG
DEFLATED
DEF_ANNOT
DEF_BOUND
DEF_BUF_SIZE
DEF_FREE
DEF_FREE_CLASS
DEF_GLOBAL
DEF_IMPORT
DEF_LOCAL
DEF_MEM_LEVEL
DEF_NONLOCAL
DEF_PARAM
DELIM
DETACHED_PROCESS
DFEFFFN
DGEGT
DHEHV
DJ[o+3$
DK7g
DLL directory cookie
DLL load failed while importing %s: 
DLL load failed with error code %u while importing %s
DLLs
DMOd
DOUBLESLASH
DOUBLESLASHEQUAL
DOUBLESTAR
DOUBLESTAREQUAL
DPK0V
DP`bX1dR
DRd?P<a6
DU@w|pJmyQ
DUPLICATE_CLOSE_SOURCE
DUPLICATE_SAME_ACCESS
DWA7|
DWmO~gp
DXVB292X5?
DXeH
DXy_vD
DY61
DY|i
D\7\N
D\V\tH`?r
D`aP
DaFLFC
DamFCa=
DcG@
Dd-5M
DeIeKe
Debug helper to print the ABC registry.
Debug memory block at address p=%p:
Debug module to trace memory blocks allocated by Python.
Decode bytes representing source code and return the string.\n\n    Universal newline support is used in the decoding.\n    
Decode filename (an os.PathLike, bytes, or str) from the filesystem\n        encoding with 'surrogateescape' error handler, return str unchanged. On\n        Windows, use 'strict' error handler if the file system encoding is\n        'mbcs' (which is the default encoding).\n        
Decorator to handle selecting the proper module for loaders.\n\n    The decorated function is passed the module to use instead of the module\n    name. The module passed in to the function is either from sys.modules if\n    it already exists or is a new module. If the module is new, then __name__\n    is set the first argument to the method, __loader__ is set to self, and\n    __package__ is set accordingly (if self.is_package() is defined) will be set\n    before it is passed to the decorated function (if self.is_package() does\n    not work for the module it will be set post-load).\n\n    If an exception is raised and the decorator created the module it is\n    subsequently removed from sys.modules.\n\n    The decorator assumes that the decorated function takes the module name as\n    the second argument.\n\n    
Decorator to verify that the module being requested matches the one the\n    loader can handle.\n\n    The first argument (self) must define _name which the second argument is\n    compared against. If the comparison fails then ImportError is raised.\n\n    
Decorator to verify the named module is built-in.
Decorator to verify the named module is frozen.
Define new builtins 'quit' and 'exit'.\n\n    These are objects which make the interpreter exit when called.\n    The repr of each object contains a hint at how it works.\n\n    
Define the builtin 'help'.\n\n    This is a wrapper around pydoc.help that provides a helpful message\n    when 'help' is typed at the Python interactive prompt.\n\n    Calling help() at the Python prompt starts an interactive help session.\n    Calling help(thing) prints help for the python object 'thing'.\n    
Delete
Delete field "targets" changed size during iteration
Delete field "targets" must be a list, not a %.200s
Delete(expr* targets)
DeleteCriticalSection
DeleteFileW
DeleteKey
DeleteKey($module, key, sub_key, /)\n--\n\nDeletes the specified key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that must be the name of a subkey of the key identified by\n    the key parameter. This value must not be None, and the key may not\n    have subkeys.\n\nThis method can not delete keys with subkeys.\n\nIf the function succeeds, the entire key, including all of its values,\nis removed.  If the function fails, an OSError exception is raised.
DeleteKeyEx
DeleteKeyEx($module, /, key, sub_key, access=winreg.KEY_WOW64_64KEY,\n            reserved=0)\n--\n\nDeletes the specified key (intended for 64-bit OS).\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that must be the name of a subkey of the key identified by\n    the key parameter. This value must not be None, and the key may not\n    have subkeys.\n  access\n    An integer that specifies an access mask that describes the\n    desired security access for the key. Default is KEY_WOW64_64KEY.\n  reserved\n    A reserved integer, and must be zero.  Default is zero.\n\nWhile this function is intended to be used for 64-bit OS, it is also\n available on 32-bit systems.\n\nThis method can not delete keys with subkeys.\n\nIf the function succeeds, the entire key, including all of its values,\nis removed.  If the function fails, an OSError exception is raised.\nOn unsupported Windows versions, NotImplementedError is raised.
DeleteProcThreadAttributeList
DeleteValue
DeleteValue($module, key, value, /)\n--\n\nRemoves a named value from a registry key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  value\n    A string that identifies the value to remove.
DeprecationWarning
Descriptor to obtain a copy of the property with a different deleter.
Descriptor to obtain a copy of the property with a different getter.
Descriptor to obtain a copy of the property with a different setter.
Detach
Detach($self, /)\n--\n\nDetaches the Windows handle from the handle object.\n\nThe result is the value of the handle before it is detached.  If the\nhandle is already detached, this will return zero.\n\nAfter calling this function, the handle is effectively invalidated,\nbut the handle is not closed.  You would call this function when you\nneed the underlying win32 handle to exist beyond the lifetime of the\nhandle object.
DeviceIoControl
DgCgFg]
Dh:F
DiFi
Diagnostic version number
Dialect
Dict
Dict doesn't have the same number of keys as values
Dict field "keys" changed size during iteration
Dict field "keys" must be a list, not a %.200s
Dict field "values" changed size during iteration
Dict field "values" must be a list, not a %.200s
Dict(expr* keys, expr* values)
DictComp
DictComp field "generators" changed size during iteration
DictComp field "generators" must be a list, not a %.200s
DictComp(expr key, expr value, comprehension* generators)
Dictionary that remembers insertion order
Difference between two datetime values.\n\ntimedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)\n\nAll arguments are optional and default to 0.\nArguments may be integers or floats, and may be positive or negative.
DirEntry
Directory tree generator.\n\n        This behaves exactly like walk(), except that it yields a 4-tuple\n\n            dirpath, dirnames, filenames, dirfd\n\n        `dirpath`, `dirnames` and `filenames` are identical to walk() output,\n        and `dirfd` is a file descriptor referring to the directory `dirpath`.\n\n        The advantage of fwalk() over walk() is that it's safe against symlink\n        races (when follow_symlinks is False).\n\n        If dir_fd is not None, it should be a file descriptor open to a directory,\n          and top should be relative; top will then be relative to that directory.\n          (dir_fd is always supported for fwalk.)\n\n        Caution:\n        Since fwalk() yields file descriptors, those are only valid until the\n        next iteration step, so you should dup() them if you want to keep them\n        for a longer period.\n\n        Example:\n\n        import os\n        for root, dirs, files, rootfd in os.fwalk('python/Lib/email'):\n            print(root, "consumes", end="")\n            print(sum(os.stat(name, dir_fd=rootfd).st_size for name in files),\n                  end="")\n            print("bytes in", len(files), "non-directory files")\n            if 'CVS' in dirs:\n                dirs.remove('CVS')  # don't visit CVS directories\n        
Directory tree generator.\n\n    For each directory in the directory tree rooted at top (including top\n    itself, but excluding '.' and '..'), yields a 3-tuple\n\n        dirpath, dirnames, filenames\n\n    dirpath is a string, the path to the directory.  dirnames is a list of\n    the names of the subdirectories in dirpath (including symlinks to directories,\n    and excluding '.' and '..').\n    filenames is a list of the names of the non-directory files in dirpath.\n    Note that the names in the lists are just names, with no path components.\n    To get a full path (which begins with top) to a file or directory in\n    dirpath, do os.path.join(dirpath, name).\n\n    If optional arg 'topdown' is true or not specified, the triple for a\n    directory is generated before the triples for any of its subdirectories\n    (directories are generated top down).  If topdown is false, the triple\n    for a directory is generated after the triples for all of its\n    subdirectories (directories are generated bottom up).\n\n    When topdown is true, the caller can modify the dirnames list in-place\n    (e.g., via del or slice assignment), and walk will only recurse into the\n    subdirectories whose names remain in dirnames; this can be used to prune the\n    search, or to impose a specific order of visiting.  Modifying dirnames when\n    topdown is false has no effect on the behavior of os.walk(), since the\n    directories in dirnames have already been generated by the time dirnames\n    itself is generated. No matter the value of topdown, the list of\n    subdirectories is retrieved before the tuples for the directory and its\n    subdirectories are generated.\n\n    By default errors from the os.scandir() call are ignored.  If\n    optional arg 'onerror' is specified, it should be a function; it\n    will be called with one argument, an OSError instance.  It can\n    report the error to continue with the walk, or raise the exception\n    to abort the walk.  Note that the filename is available as the\n    filename attribute of the exception object.\n\n    By default, os.walk does not follow symbolic links to subdirectories on\n    systems that support them.  In order to get this functionality, set the\n    optional argument 'followlinks' to true.\n\n    Caution:  if you pass a relative pathname for top, don't change the\n    current working directory between resumptions of walk.  walk never\n    changes the current directory, and assumes that the client doesn't\n    either.\n\n    Example:\n\n    import os\n    from os.path import join, getsize\n    for root, dirs, files in os.walk('python/Lib/email'):\n        print(root, "consumes ")\n        print(sum(getsize(join(root, name)) for name in files), end=" ")\n        print("bytes in", len(files), "non-directory files")\n        if 'CVS' in dirs:\n            dirs.remove('CVS')  # don't visit CVS directories\n\n    
DisableReflectionKey
DisableReflectionKey($module, key, /)\n--\n\nDisables registry reflection for 32bit processes running on a 64bit OS.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n\nWill generally raise NotImplementedError if executed on a 32bit OS.\n\nIf the key is not on the reflection list, the function succeeds but has\nno effect.  Disabling reflection for a key does not affect reflection\nof any subkeys.
Discontinuous padding not allowed
DjGjFjj
Dkw.
Dl(Uc5
Dl1X
DmStS
DnEnFnkU$6HnGnInJn%GKnLn
DoBo
Do\oN=top
DqMqZqOr
DrK`
Ds\top
DuplicateHandle
DuplicateHandle($module, source_process_handle, source_handle,\n                target_process_handle, desired_access, inherit_handle,\n                options=0, /)\n--\n\nReturn a duplicate handle object.\n\nThe duplicate handle refers to the same object as the original\nhandle. Therefore, any changes to the object are reflected\nthrough both handles.
During handling of the above exception, another exception occurred:\n
Dw-u
E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)
E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(e"f"g"h"i"j"k"l"m"n"
E+wS
E0F0
E1F1
E2BIG
E3vH
E5d2
E743
E7F7
E7~U
E:CM
E<F<Y
E@m@L
EACCES
EADDRINUSE
EADDRNOTAVAIL
EAFNOSUPPORT
EAGAIN
EALREADY
EBADF
EBADMSG
EBUSY
ECANCELED
ECEcAIFc\
ECHILD
ECONNABORTED
ECONNREFUSED
ECONNRESET
EDEADLK
EDEADLOCK
EDESTADDRREQ
EDOM
EDQUOT
EDn]}
EEXIST
EFAULT
EFBIG
EHOSTDOWN
EHOSTUNREACH
EIDRM
EILSEQ
EINPROGRESS
EINTR
EINVAL
EIQI
EISCONN
EISDIR
EJQ3YKlTRej7B
EJkL
EJ}o!p~o"p
EK4j
EKZ1b0
EL$D%Ox
EL1I
ELLIPSIS
ELOOP
ELPl;K
EMFILE
EMLINK
EMSGSIZE
ENABLE_USER_SITE
ENABLE_USER_SITE: 
ENAMETOOLONG
ENDMARKER
END_CENTRAL_DIR_SIZE
ENETDOWN
ENETRESET
ENETUNREACH
ENFILE
ENOBUFS
ENODATA
ENODEV
ENOENT
ENOEXEC
ENOLCK
ENOLINK
ENOMEM
ENOMSG
ENOPROTOOPT
ENOSPC
ENOSR
ENOSTR
ENOSYS
ENOTCONN
ENOTDIR
ENOTEMPTY
ENOTRECOVERABLE
ENOTSOCK
ENOTSUP
ENOTTY
ENV_PATH
ENV_PYTHONEXECUTABLE
ENV_PYTHONHOME
ENV_PYTHONPATHr$
ENV___PYVENV_LAUNCHER__
ENXIO
ENxp]NR
EOF read where not expected
EOF read where object expected
EOF when reading a line
EOFError
EOPNOTSUPP
EOVERFLOW
EOWNERDEAD
EP.t
EPERM
EPFNOSUPPORT
EPIPE
EPROTO
EPROTONOSUPPORT
EPROTOTYPE
EQEQUAL
EQUAL
ERANGE
ERD$
EREMOTE
EROFS
ERQ{@g%k
ERROR_ALREADY_EXISTS
ERROR_BROKEN_PIPE
ERROR_IO_PENDING
ERROR_MORE_DATA
ERROR_NETNAME_DELETED
ERROR_NO_DATA
ERROR_NO_SYSTEM_RESOURCES
ERROR_OPERATION_ABORTED
ERROR_PIPE_BUSY
ERROR_PIPE_CONNECTED
ERROR_SEM_TIMEOUT
ER\eb
ESHUTDOWN
ESOCKTNOSUPPORT
ESPIPE
ESRCH
ESTALE
ESl|[RkT
ETIME
ETIMEDOUT
ETOOMANYREFS
ETXTBSY
EUBU
EUSERS
EWFWLWMW
EWOULDBLOCK
EWbk
EWvU
EXDEV
EXEC_PREFIX
EXE_SUFFIX
EXT specifies code <= 0
EXTENSION_SUFFIXES
EX_OK
EYk>
EZDZTGGZ56
E\XL
EaFa
Ecxk
EfUo
Eg@gX
EhGh
EiaG
Ejsj
Ek}SW
Elf>?LZE<>
Ellipsis
EllipsisType
EllipsisType takes no arguments
EmVs
Empty attribute in format string
Empty keyword parameter name
Empty module name
Empty parameter name after $
Enable default readline configuration on interactive prompts, by\n    registering a sys.__interactivehook__.\n\n    If the readline module can be imported, the hook will set the Tab key\n    as completion key and register ~/.python_history as history file.\n    This can be overridden in the sitecustomize or usercustomize module,\n    or in a PYTHONSTARTUP file.\n    
Enable tracemalloc to get the memory block allocation traceback\n\n
EnableReflectionKey
EnableReflectionKey($module, key, /)\n--\n\nRestores registry reflection for the specified disabled key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n\nWill generally raise NotImplementedError if executed on a 32bit OS.\nRestoring reflection for a key does not affect reflection of any\nsubkeys.
Encode filename (an os.PathLike, bytes, or str) to the filesystem\n        encoding with 'surrogateescape' error handler, return bytes unchanged.\n        On Windows, use 'strict' error handler if the file system encoding is\n        'mbcs' (which is the default encoding).\n        
EncodedFile
Encoding changed twice while reading the configuration
Encoding of the file
Encoding of the text stream.\n\nSubclasses should override.\n
EncodingMap
EncodingWarning
EnterCriticalSection
EnumKey
EnumKey($module, key, index, /)\n--\n\nEnumerates subkeys of an open registry key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  index\n    An integer that identifies the index of the key to retrieve.\n\nThe function retrieves the name of one subkey each time it is called.\nIt is typically called repeatedly until an OSError exception is\nraised, indicating no more values are available.
EnumValue
EnumValue($module, key, index, /)\n--\n\nEnumerates values of an open registry key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  index\n    An integer that identifies the index of the value to retrieve.\n\nThe function retrieves the name of one subkey each time it is called.\nIt is typically called repeatedly, until an OSError exception\nis raised, indicating no more values.\n\nThe result is a tuple of 3 items:\n  value_name\n    A string that identifies the value.\n  value_data\n    An object that holds the value data, and whose type depends\n    on the underlying registry type.\n  data_type\n    An integer that identifies the type of the value data.
Environment variables that change behavior:\nPYTHONSTARTUP: file executed on interactive startup (no default)\nPYTHONPATH   : '%lc'-separated list of directories prefixed to the\n               default module search path.  The result is sys.path.\nPYTHONHOME   : alternate <prefix> directory (or <prefix>%lc<exec_prefix>).\n               The default module search path uses %s.\nPYTHONPLATLIBDIR : override sys.platlibdir.\nPYTHONCASEOK : ignore case in 'import' statements (Windows).\nPYTHONUTF8: if set to 1, enable the UTF-8 mode.\nPYTHONIOENCODING: Encoding[:errors] used for stdin/stdout/stderr.\nPYTHONFAULTHANDLER: dump the Python traceback on fatal errors.\nPYTHONHASHSEED: if this variable is set to 'random', a random value is used\n   to seed the hashes of str and bytes objects.  It can also be set to an\n   integer in the range [0,4294967295] to get hash values with a\n   predictable seed.\nPYTHONINTMAXSTRDIGITS: limits the maximum digit characters in an int value\n   when converting from a string and when converting an int back to a str.\n   A value of 0 disables the limit.  Conversions to or from bases 2, 4, 8,\n   16, and 32 are never limited.\nPYTHONMALLOC: set the Python memory allocators and/or install debug hooks\n   on Python memory allocators. Use PYTHONMALLOC=debug to install debug\n   hooks.\nPYTHONCOERCECLOCALE: if this variable is set to 0, it disables the locale\n   coercion behavior. Use PYTHONCOERCECLOCALE=warn to request display of\n   locale coercion and locale compatibility warnings on stderr.\nPYTHONBREAKPOINT: if this variable is set to 0, it disables the default\n   debugger. It can be set to the callable of your debugger of choice.\nPYTHONDEVMODE: enable the development mode.\nPYTHONPYCACHEPREFIX: root directory for bytecode cache (pyc) files.\nPYTHONWARNDEFAULTENCODING: enable opt-in EncodingWarning for 'encoding=None'.\nPYTHONNODEBUGRANGES: If this variable is set, it disables the inclusion of the \n   tables mapping extra location information (end line, start column offset \n   and end column offset) to every instruction in code objects. This is useful \n   when smaller code objects and pyc files are desired as well as suppressing the \n   extra visual location indicators when the interpreter displays tracebacks.\nThese variables have equivalent command-line parameters (see --help for details):\nPYTHONDEBUG             : enable parser debug mode (-d)\nPYTHONDONTWRITEBYTECODE : don't write .pyc files (-B)\nPYTHONINSPECT           : inspect interactively after running script (-i)\nPYTHONINTMAXSTRDIGITS   : limit max digit characters in an int value\n                          (-X int_max_str_digits=number)\nPYTHONNOUSERSITE        : disable user site directory (-s)\nPYTHONOPTIMIZE          : enable level 1 optimizations (-O)\nPYTHONSAFEPATH          : don't prepend a potentially unsafe path to sys.path (-P)\nPYTHONUNBUFFERED        : disable stdout/stderr buffering (-u)\nPYTHONVERBOSE           : trace import statements (-v)\nPYTHONWARNINGS=arg      : warning control (-W arg)\n
EnvironmentError
EpAcL|M|
EpqX
Eq@tFq
Error
Error %d %s
Error %d %s: %.200s
Error calling __set_name__ on '%.100s' instance %R in '%.100s'
Error in sitecustomize; set PYTHONVERBOSE for traceback:\n
Error in sys.excepthook:\n
Error in usercustomize; set PYTHONVERBOSE for traceback:\n
Error message
Error processing line {:d} of {}:\n
Error that _run_module_as_main() should report without a traceback
Error while finding module specification for {!r} ({}: {})
Ets=d
EuFuA
Eu`n
EwFwr
ExEgrwM
Exceeds the limit (%d digits) for integer string conversion: value has %zd digits; use sys.set_int_max_str_digits() to increase the limit
Exceeds the limit (%d digits) for integer string conversion; use sys.set_int_max_str_digits() to increase the limit
ExceptHandler
ExceptHandler field "body" changed size during iteration
ExceptHandler field "body" must be a list, not a %.200s
ExceptHandler(expr? type, identifier? name, stmt* body)
ExceptHookArgs\n\nType used to pass arguments to threading.excepthook.
Exception
Exception Group Traceback (most recent call last):\n
Exception groups are
Exception ignored %s
Exception ignored in audit hook
Exception ignored in m_clear of module%s%V\n
Exception ignored in sys.unraisablehook
Exception ignored in: 
Exception ignored on building sys.unraisablehook arguments
Exception ignored when trying to send to the signal wakeup fd:\n
Exception ignored when trying to write to the signal wakeup fd:\n
Exception in thread 
Exception traceback
Exception type
Exception value
Exception.add_note(note) --\n    add a note to the exception
Exception.with_traceback(tb) --\n    set self.__traceback__ to tb and return self.
ExceptionGroup
Excess data after padding
Excluded frozen object named %R
Exec a built-in module
Execute the module.
Execute the spec's specified module in an existing module's namespace.
Existing exports of data: object cannot be re-sized
ExitProcess
ExitProcess($module, ExitCode, /)\n--\n\n
Expand shell variables of form $var and ${var}.  Unknown variables\n    are left unchanged.
Expand shell variables of the forms $var, ${var} and %var%.\n\n    Unknown variables are left unchanged.
Expand ~ and ~user constructions.  If user or $HOME is unknown,\n    do nothing.
Expand ~ and ~user constructs.\n\n    If user or $HOME is unknown, do nothing.
ExpandEnvironmentStrings
ExpandEnvironmentStrings($module, string, /)\n--\n\nExpand environment vars.
ExpandEnvironmentStringsW
Expected a list of types, an ellipsis, ParamSpec, or Concatenate. Got 
Expected an int as second argument to ldexp.
Expected int as r
Expecting ',' delimiter
Expecting ':' delimiter
Expecting property name enclosed in double quotes
Expecting value
Expr
Expr(expr value)
Expression
Expression(expr body)
Extend the left side of the deque with elements from the iterable
Extend the right side of the deque with elements from the iterable
ExtensionFileLoader
ExtensionFileLoader.__eq__
ExtensionFileLoader.__hash__
ExtensionFileLoader.__init__
ExtensionFileLoader.create_module
ExtensionFileLoader.exec_module
ExtensionFileLoader.get_code
ExtensionFileLoader.get_filename
ExtensionFileLoader.get_source
ExtensionFileLoader.is_package
ExtensionFileLoader.is_package.<locals>.<genexpr>
EyFyN
E|BK
F#k%rTZc
F(D:9
F.__sizeof__() -> size of F in memory, in bytes
F.clear(): clear most references held by the frame
F2kT
F4:SBv{3i
F4G4l
F4VL
F4WH9bR
F5R;
F8PnQnRn[6.3SVFD51V8SnTn?TUG{>YN39VnUnXnWn%EYnZn.G[n/G\n'2]n^n_n`nanjWbncnX<dnKSzL,2eAen&G-C
F8`H
F;E;>B?PUIg@E
F;ge
F?kCo
F@Eib
FA4G
FArK
FB=X3
FDGDHD
FE9k
FEGE
FFEdDd
FFl|A
FILE_ATTRIBUTE_ARCHIVE
FILE_ATTRIBUTE_COMPRESSED
FILE_ATTRIBUTE_DEVICE
FILE_ATTRIBUTE_DIRECTORY
FILE_ATTRIBUTE_ENCRYPTED
FILE_ATTRIBUTE_HIDDEN
FILE_ATTRIBUTE_INTEGRITY_STREAM
FILE_ATTRIBUTE_NORMAL
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED
FILE_ATTRIBUTE_NO_SCRUB_DATA
FILE_ATTRIBUTE_OFFLINE
FILE_ATTRIBUTE_READONLY
FILE_ATTRIBUTE_REPARSE_POINT
FILE_ATTRIBUTE_SPARSE_FILE
FILE_ATTRIBUTE_SYSTEM
FILE_ATTRIBUTE_TEMPORARY
FILE_ATTRIBUTE_VIRTUAL
FILE_FLAG_FIRST_PIPE_INSTANCE
FILE_FLAG_OVERLAPPED
FILE_GENERIC_READ
FILE_GENERIC_WRITE
FILE_MAP_ALL_ACCESS
FILE_MAP_COPY
FILE_MAP_EXECUTE
FILE_MAP_READ
FILE_MAP_WRITE
FILE_TYPE_CHAR
FILE_TYPE_DISK
FILE_TYPE_PIPE
FILE_TYPE_REMOTE
FILE_TYPE_UNKNOWN
FIrC
FK$Y
FK>l?l
FLT_RADIX -- radix of exponent
FLT_ROUNDS -- rounding mode used for arithmetic operations
FM6r
FORBIDDENBYTE, as expected.\n
FQF:s
FRAME length exceeds system's maximum of %zd bytes
FREE
FT%;AXeN.>
FUGU
FV"K/H2IL4L?o
FXIXAXEX
FY4H
FY;Y_D
FZ4xD
F[qP
F]Qz
F^ozac
F_OK
Factory for default value called by __missing__().
Failed calling sys.__interactivehook__\n
Failed checking if argv[0] is an import path entry\n
Failed to encode latin1 string when unpickling a date object. pickle.load(data, encoding='latin1') is assumed.
Failed to encode latin1 string when unpickling a datetime object. pickle.load(data, encoding='latin1') is assumed.
Failed to encode latin1 string when unpickling a time object. pickle.load(data, encoding='latin1') is assumed.
Failed to import the site module
Failed to initialize __main__.__annotations__
Failed to initialize __main__.__builtins__
Failed to initialize __main__.__loader__
Failed to load the builtin codecs: %s
Failed to retrieve BuiltinImporter
Failed to retrieve builtins module
Failed to test __main__.__builtins__
Failed to test __main__.__loader__
False
Fast implementation of the datetime type.
Fast profiler
Fatal Python error from unexpected signum: 
Fatal Python error: 
FbZO]9Gb!@
FeDeHe
FfEf
Fh(KLh`0H
Figure out what __import__ should return.\n\n    The import_ parameter is a callable which takes the name of module to\n    import. It is required to decouple the function from assuming importlib's\n    import implementation is desired.\n\n    
File already exists.
File not found.
File not open for %s
File or stream is not readable.
File or stream is not seekable.
File or stream is not writable.
File-based finder.\n\n    Interactions with the file system are cached for performance, being\n    refreshed when the directory the finder is handling has been modified.\n\n    
FileExistsError
FileFinder
FileFinder({!r})
FileFinder.__init__
FileFinder.__init__.<locals>.<genexpr>
FileFinder.__repr__
FileFinder._fill_cache
FileFinder._fill_cache.<locals>.<setcomp>
FileFinder._get_spec
FileFinder.find_loader
FileFinder.find_loader() is deprecated and slated for removal in Python 3.12; use find_spec() instead
FileFinder.find_spec
FileFinder.invalidate_caches
FileFinder.path_hook
FileFinder.path_hook.<locals>.path_hook_for_FileFinder
FileIO
FileIO(file, mode='r', closefd=True, opener=None)\n--\n\nOpen a file.\n\nThe mode can be 'r' (default), 'w', 'x' or 'a' for reading,\nwriting, exclusive creation or appending.  The file will be created if it\ndoesn't exist when opened for writing or appending; it will be truncated\nwhen opened for writing.  A FileExistsError will be raised if it already\nexists when opened for creating. Opening a file for creating implies\nwriting so this mode behaves in a similar way to 'w'.Add a '+' to the mode\nto allow simultaneous reading and writing. A custom opener can be used by\npassing a callable as *opener*. The underlying file descriptor for the file\nobject is then obtained by calling opener with (*name*, *flags*).\n*opener* must return an open file descriptor (passing os.open as *opener*\nresults in functionality similar to passing None).
FileLoader
FileLoader.__eq__
FileLoader.__hash__
FileLoader.__init__
FileLoader.get_data
FileLoader.get_filename
FileLoader.get_resource_reader
FileLoader.load_module
FileNotFoundError
FileReader
Fill the cache of potential modules and packages for this directory.
Find a frozen module.\n\n        This method is deprecated.  Use find_spec() instead.\n\n        
Find a module's spec.
Find and load the module.
Find module named in the registry.\n\n        This method is deprecated.  Use find_spec() instead.\n\n        
Find the built-in module.\n\n        If 'path' is ever specified then the search is considered a failure.\n\n        This method is deprecated.  Use find_spec() instead.\n\n        
Find the loader or namespace_path for this module/package name.
FindClose
FindFirstFileW
FindNextFileW
First sample should be longer
Fixed offset from UTC implementation of tzinfo.
Floating point exception
Floating point operation failed.
FloatingPointError
FloorDiv
Flooring an Integral returns itself.
Flt|nQ
FlushKey
FlushKey($module, key, /)\n--\n\nWrites all the attributes of a key to the registry.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n\nIt is not necessary to call FlushKey to change a key.  Registry changes\nare flushed to disk by the registry using its lazy flusher.  Registry\nchanges are also flushed to disk at system shutdown.  Unlike\nCloseKey(), the FlushKey() method returns only when all the data has\nbeen written to the registry.\n\nAn application should only call FlushKey() if it requires absolute\ncertainty that registry changes are on disk.  If you don't know whether\na FlushKey() call is required, it probably isn't.
FlushViewOfFile
FmEmZ7Hme
FmNmhUb
For field "body" changed size during iteration
For field "body" must be a list, not a %.200s
For field "orelse" changed size during iteration
For field "orelse" must be a list, not a %.200s
For(expr target, expr iter, stmt* body, stmt* orelse, string? type_comment)
Format specifier missing precision
Format specifier must be a string, not %.200s
Format string contains positional fields
Format strings are only supported in Python 3.6 and greater
FormatMessageW
Formats self with strftime.
FormattedValue
FormattedValue(expr value, int conversion, expr? format_spec)
FrGr
FreeLibrary
Frozen modules are disabled and the frozen object named %R is not essential
Frozen object named %R is invalid
FrozenImporter
FrozenImporter._fix_up_module
FrozenImporter._resolve_filename
FrozenImporter.create_module
FrozenImporter.exec_module
FrozenImporter.find_module
FrozenImporter.find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
FrozenImporter.find_spec
FrozenImporter.get_code
FrozenImporter.get_source
FrozenImporter.is_package
FrozenImporter.load_module
FrozenImporter.module_repr
FrozenImporter.module_repr() is deprecated and slated for removal in Python 3.12
FsGs
Fs[M
Ft_PGtr
Function parameters cannot be parenthesized
FunctionDef
FunctionDef field "body" changed size during iteration
FunctionDef field "body" must be a list, not a %.200s
FunctionDef field "decorator_list" changed size during iteration
FunctionDef field "decorator_list" must be a list, not a %.200s
FunctionDef(identifier name, arguments args, stmt* body, expr* decorator_list, expr? returns, string? type_comment)
FunctionType
FunctionType field "argtypes" changed size during iteration
FunctionType field "argtypes" must be a list, not a %.200s
FunctionType(expr* argtypes, expr returns)
Functional tools for creating and using iterators.\n\nInfinite iterators:\ncount(start=0, step=1) --> start, start+step, start+2*step, ...\ncycle(p) --> p0, p1, ... plast, p0, p1, ...\nrepeat(elem [,n]) --> elem, elem, elem, ... endlessly or up to n times\n\nIterators terminating on the shortest input sequence:\naccumulate(p[, func]) --> p0, p0+p1, p0+p1+p2\nchain(p, q, ...) --> p0, p1, ... plast, q0, q1, ...\nchain.from_iterable([p, q, ...]) --> p0, p1, ... plast, q0, q1, ...\ncompress(data, selectors) --> (d[0] if s[0]), (d[1] if s[1]), ...\ndropwhile(pred, seq) --> seq[n], seq[n+1], starting when pred fails\ngroupby(iterable[, keyfunc]) --> sub-iterators grouped by value of keyfunc(v)\nfilterfalse(pred, seq) --> elements of seq where pred(elem) is False\nislice(seq, [start,] stop [, step]) --> elements from\n       seq[start:stop:step]\npairwise(s) --> (s[0],s[1]), (s[1],s[2]), (s[2], s[3]), ...\nstarmap(fun, seq) --> fun(*seq[0]), fun(*seq[1]), ...\ntee(it, n=2) --> (it1, it2 , ... itn) splits one iterator into n\ntakewhile(pred, seq) --> seq[0], seq[1], until pred fails\nzip_longest(p, q, ...) --> (p[0], q[0]), (p[1], q[1]), ...\n\nCombinatoric generators:\nproduct(p, q, ... [repeat=1]) --> cartesian product\npermutations(p[, r])\ncombinations(p, r)\ncombinations_with_replacement(p, r)\n
Functions to convert between Python values and C structs.\nPython bytes objects are used to hold the data representing the C struct\nand also as format strings (explained below) to describe the layout of data\nin the C struct.\n\nThe optional first format char indicates byte order, size and alignment:\n  @: native order, size & alignment (default)\n  =: native order, std. size & alignment\n  <: little-endian, std. size & alignment\n  >: big-endian, std. size & alignment\n  !: same as >\n\nThe remaining chars indicate types of args and must match exactly;\nthese can be preceded by a decimal repeat count:\n  x: pad byte (no data); c:char; b:signed byte; B:unsigned byte;\n  ?: _Bool (requires C99; if not available, char is used instead)\n  h:short; H:unsigned short; i:int; I:unsigned int;\n  l:long; L:unsigned long; f:float; d:double; e:half-float.\nSpecial cases (preceding decimal count indicates length):\n  s:string (array of char); p: pascal string (with count byte).\nSpecial cases (only available in native format):\n  n:ssize_t; N:size_t;\n  P:an integer type that is wide enough to hold a pointer.\nSpecial case (not in native mode unless 'long long' in platform C):\n  q:long long; Q:unsigned long long\nWhitespace between formats is ignored.\n\nThe variable struct.error is an exception raised on errors.\n
FutureWarning
Fv[r|d
FxGx
FyZ|
F{3O}n
G%GyQ
G2?U
G2H2I2
G3o[
G4)8
G4Y1f
G6H6Q
G6X8@kN8P
G7H7I7
G8A5LEG
G?pCZ>U
GABKw:V
GCd"
GENERIC_READ
GENERIC_WRITE
GFZ]fH
GGHG
GHJP
GKl2Ll(OBDEO,
GLOBAL_EXPLICIT
GLOBAL_IMPLICIT
GM%rI
GNp:
GOCoAoBoDo'6|<b>LCEoFoA
GONO2Q
GP3S]
GP<z
GPEd
GQ)P
GQ.i
GQ}:r
GREATER
GREATEREQUAL
GRoXGC
GS1A
GWNW>WPWOW;W
GWb2
G^pkVq
Gag3
GbHbm
GbUfU
GdAdL
GenerateConsoleCtrlEvent
Generator
Generator expression must be parenthesized
Generator.__next__
Generator.__subclasshook__
Generator.close
Generator.send
Generator.throw
GeneratorExit
GeneratorExp
GeneratorExp field "generators" changed size during iteration
GeneratorExp field "generators" must be a list, not a %.200s
GeneratorExp(expr elt, comprehension* generators)
GenericAlias
Gerf($module, x, /)\n--\n\nError function at x.
Get an environment variable, return None if it doesn't exist.\n        The optional second argument can specify an alternate default.\n        key, default and the result are bytes.
Get an environment variable, return None if it doesn't exist.\n    The optional second argument can specify an alternate default.\n    key, default and the result are str.
Get or create the module lock for a given module name.\n\n    Acquire/release internally the global import lock to protect\n    _module_locks.
Get the finder for the path entry from sys.path_importer_cache.\n\n        If the path entry is not in the cache, find the appropriate finder\n        and cache it. If no finder is available, store None.\n\n        
GetACP
GetACP($module, /)\n--\n\nGet the current Windows ANSI code page identifier.
GetActiveProcessorCount
GetConsoleCP
GetConsoleMode
GetConsoleOutputCP
GetConsoleScreenBufferInfo
GetCurrentDirectoryW
GetCurrentProcess
GetCurrentProcess($module, /)\n--\n\nReturn a handle object for the current process.
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDiskFreeSpaceExW
GetErrorMode
GetErrorMode($module, /)\n--\n\nWrapper around GetErrorMode.
GetExitCodeProcess
GetExitCodeProcess($module, process, /)\n--\n\nReturn the termination status of the specified process.
GetFileAttributesExW
GetFileAttributesW
GetFileInformationByHandle
GetFileInformationByHandleEx
GetFileSize
GetFileType
GetFileType($module, /, handle)\n--\n\n
GetFileVersionInfoSizeW
GetFileVersionInfoW
GetFinalPathNameByHandleW
GetFullPathNameW
GetHandleInformation
GetLastError
GetLastError($module, /)\n--\n\n
GetLocaleInfoA
GetModuleFileName
GetModuleFileName($module, module_handle, /)\n--\n\nReturn the fully-qualified path for the file that contains module.\n\nThe module must have been loaded by the current process.\n\nThe module parameter should be a handle to the loaded module\nwhose path is being requested. If this parameter is 0,\nGetModuleFileName retrieves the path of the executable file\nof the current process.
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleW
GetNumberOfConsoleInputEvents
GetOverlappedResult
GetOverlappedResult($self, wait, /)\n--\n\n
GetProcAddress
GetProcessHeap
GetProcessTimes
GetProcessTimes()
GetStdHandle
GetStdHandle($module, std_handle, /)\n--\n\nReturn a handle to the specified standard device.\n\n  std_handle\n    One of STD_INPUT_HANDLE, STD_OUTPUT_HANDLE, or STD_ERROR_HANDLE.\n\nThe integer associated with the handle object is returned.
GetStringTypeW
GetSystemInfo
GetSystemTimeAdjustment
GetSystemTimeAsFileTime
GetSystemTimeAsFileTime()
GetThreadTimes
GetThreadTimes()
GetTickCount64
GetTickCount64()
GetTimeZoneInformation
GetUserNameW
GetVersion
GetVersion($module, /)\n--\n\nReturn the version number of the current operating system.
GetVersionExW
GetVolumePathNameW
Gf1O
GgHg`
Gi*f
Given a list of pathnames, returns the longest common leading component
Given a sequence of path names, returns the longest common sub-path.
Given the path to a .py file, return the path to its .pyc file.\n\n    The .py file does not need to exist; this simply returns the path to the\n    .pyc file calculated as if the .py file were imported.\n\n    The 'optimization' parameter controls the presumed optimization level of\n    the bytecode file. If 'optimization' is not None, the string representation\n    of the argument is taken and verified to be alphanumeric (else ValueError\n    is raised).\n\n    The debug_override parameter is deprecated. If debug_override is not None,\n    a True value is the same as setting 'optimization' to the empty string\n    while a False value is equivalent to setting 'optimization' to '1'.\n\n    If sys.implementation.cache_tag is None then NotImplementedError is raised.\n\n    
Given the path to a .pyc. file, return the path to its .py file.\n\n    The .pyc file does not need to exist; this simply returns the path to\n    the .py file calculated to correspond to the .pyc file.  If path does\n    not conform to PEP 3147/488 format, ValueError will be raised. If\n    sys.implementation.cache_tag is None then NotImplementedError is raised.\n\n    
Gk90O?V
GkCkIkPkYkTk[k_kakxkyk
GlHl.5
Global
Global field "names" changed size during iteration
Global field "names" must be a list, not a %.200s
Global(identifier* names)
Gm,n
Gm>me
GoOoHoIoJoBGqoM6KoB
GptEe
GrDrFrg
GuKuC
Guido van Rossum <guido@python.org>, Mike Verdone <mike.verdone@gmail.com>, Mark Russell <mark.russell@zen.co.uk>, Antoine Pitrou <solipsis@pitrou.net>, Amaury Forgeot d'Arc <amauryfa@gmail.com>, Benjamin Peterson <benjamin@python.org>
G{HU
H!a7
H0I0
H2YWs
H4sc
H?T_E
HAVE_FACCESSAT
HAVE_FCHDIR
HAVE_FCHMOD
HAVE_FCHMODAT
HAVE_FCHOWN
HAVE_FCHOWNAT
HAVE_FDOPENDIR
HAVE_FEXECVE
HAVE_FPATHCONF
HAVE_FSTATAT
HAVE_FSTATVFS
HAVE_FTRUNCATE
HAVE_FUTIMENS
HAVE_FUTIMES
HAVE_FUTIMESAT
HAVE_LCHFLAGS
HAVE_LCHMOD
HAVE_LCHOWN
HAVE_LINKAT
HAVE_LSTAT
HAVE_LUTIMES
HAVE_MKDIRAT
HAVE_MKFIFOAT
HAVE_MKNODAT
HAVE_OPENAT
HAVE_READLINKAT
HAVE_RENAMEAT
HAVE_SYMLINKAT
HAVE_UNLINKAT
HAVE_UTIMENSAT
HCE0xZR
HEIEJE
HEXd
HF96
HIGH_PRIORITY_CLASS
HIhlil
HJC`
HJnyl[
HKEYType
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_DYN_DATA
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HLr:PR
HM94=
HN7j
HOF[u?
HOME
HOMEDRIVE
HOMEPATH
HOb9
HQIQ
HQkZl&
HQnfIQAKJQ
HR,1u0m4@
HSM^
HT$X
HYWS7u
H]hd
Ha7[c_
Hashable
Hashable.__hash__
Hashable.__subclasshook__
Hbv2@
HcGc4
Heap queue algorithm (a.k.a. priority queue).\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nUsage:\n\nheap = []            # creates an empty heap\nheappush(heap, item) # pushes a new item on the heap\nitem = heappop(heap) # pops the smallest item from the heap\nitem = heap[0]       # smallest item on the heap without popping it\nheapify(x)           # transforms list into a heap, in-place, in linear time\nitem = heapreplace(heap, item) # pops and returns smallest item, and adds\n                               # new item; the heap size is unchanged\n\nOur API differs from textbook heap algorithms as follows:\n\n- We use 0-based indexing.  This makes the relationship between the\n  index for a node and the indexes for its children slightly less\n  obvious, but is more suitable since Python uses 0-based indexing.\n\n- Our heappop() method returns the smallest item, not the largest.\n\nThese two make it possible to view the heap as a regular Python list\nwithout surprises: heap[0] is the smallest item, and heap.sort()\nmaintains the heap invariant!\n
Heap queues\n\n[explanation by Fran
HeapAlloc
HeapFree
Hello world!
Helper class that provides a standard way to create an ABC using\n    inheritance.\n    
Helper to run code in new namespace with sys modified
Helper to run code in nominated namespace
HiW8
High performance data structures.\n- deque:        ordered collection accessible from endpoints only\n- defaultdict:  dict subclass with a default value factory\n
Hit Return for more, or q (and Return) to quit: 
Hj8n,q%qNi
Hook to intercept finalization
Hook to intercept first iteration
Hp!Q"Q
HrF905v
HsIs
Htjhsu
HxFN
HzWV
I/O operation on closed file
I/O operation on closed file.
I/O operation on uninitialized object
I/O operation would block.
I/O operations still in flight while destroying Overlapped object, the process may crash
I00\n
I01\n
I05s
I1J1
I2jU
I4J4n
I5F3
I73Jz
I8=FjD
I8J8
I:ExitProcess
I<J<k
I<LH
I?ESB
I?cm-
IAJAW
IAl'
IAo4{
IBJBU
IBuG?8Wg%Az
IDJDA
IDLE_PRIORITY_CLASS
IEEE, big-endian
IEEE, little-endian
IEdE9HMD
IHCQJ
IHc`
II s!
II[rs0`r7
IJir
IKe0
ILUz
ILw[}4}
IM7yhqrYu[5JFY
IMPORT_MAPPING
IMlY
INDENT
INFINITE
INVALID_HANDLE_VALUE
IOBase
IOError
IO_REPARSE_TAG_APPEXECLINK
IO_REPARSE_TAG_MOUNT_POINT
IO_REPARSE_TAG_SYMLINK
IO|bzo
IP'olb
IPmV(C,bk
IQ8:`
IRH=?BlTkLg
IRZpG
ISO calendar component out of range
IU,xYg
IUHU
IXLXgX
IZHZP
I[WPS
I_Z_6N
IaHa%I
IazJ
Ic>d@w
IdxIn
Ieq1>\U
If field "body" changed size during iteration
If field "body" must be a list, not a %.200s
If field "orelse" changed size during iteration
If field "orelse" must be a list, not a %.200s
If name is specified when timezone is created, returns the name.  Otherwise returns offset as 'UTC(+|-)HH:MM'.
If(expr test, stmt* body, stmt* orelse)
IfExp
IfExp(expr test, expr body, expr orelse)
IgWN
Ignoring unimportable $PYTHONBREAKPOINT: "%s"
Igq\ R}qk
Igx2JgKgLgMgNgOgPg'SuKQgRgSgTgIIUgVgWgXgYgI=Zg>s
Ih~t
Ii*Ph>+P524
IiGM>nw
Illegal char
Illegal instruction
Immortal interned string died
Implements the 'backslashreplace' error handling, which replaces malformed data with a backslashed escape sequence.
Implements the 'ignore' error handling, which ignores malformed data and continues.
Implements the 'namereplace' error handling, which replaces an unencodable character with a \N{...} escape sequence.
Implements the 'replace' error handling, which replaces malformed data with a replacement marker.
Implements the 'strict' error handling, which raises a UnicodeError on coding errors.
Implements the 'xmlcharrefreplace' error handling, which replaces an unencodable character with the appropriate XML character reference.
Import
Import a module.\n\n    The 'globals' argument is used to infer where the import is occurring from\n    to handle relative imports. The 'locals' argument is ignored. The\n    'fromlist' argument specifies what should exist as attributes on the module\n    being imported (e.g. ``from module import <fromlist>``).  The 'level'\n    argument represents the package location to import from in a relative\n    import (e.g. ``from ..pkg import mod`` would have a 'level' of 2).\n\n    
Import and return the module based on its name, the package the call is\n    being made from, and the level adjustment.\n\n    This function represents the greatest common denominator of functionality\n    between import_module and __import__. This includes setting __package__ if\n    the loader did not.\n\n    
Import can't find module, or can't find name in module.
Import field "names" changed size during iteration
Import field "names" must be a list, not a %.200s
Import(alias* names)
ImportError
ImportFrom
ImportFrom field "names" changed size during iteration
ImportFrom field "names" must be a list, not a %.200s
ImportFrom(identifier? module, alias* names, int? level)
ImportWarning
Improper indentation.
Improper mixture of spaces and tabs.
In structseq_repr(), member %zd name is NULL for type %.500s
Inappropriate argument type.
Inappropriate argument value (of correct type).
Incomplete
Inconsistent stream state
Incorrect padding
IncrementalDecoder
IncrementalDecoder.__init__
IncrementalDecoder.decode
IncrementalDecoder.getstate
IncrementalDecoder.reset
IncrementalDecoder.setstate
IncrementalEncoder
IncrementalEncoder.__init__
IncrementalEncoder.encode
IncrementalEncoder.getstate
IncrementalEncoder.reset
IncrementalEncoder.setstate
IncrementalNewlineDecoder
IncrementalNewlineDecoder(decoder, translate, errors='strict')\n--\n\nCodec used when reading a file in universal newlines mode.\n\nIt wraps another incremental decoder, translating \r\n and \r into \n.\nIt also records the types of newlines encountered.  When used with\ntranslate=False, it ensures that the newline sequence is returned in\none piece. When used with decoder=None, it expects unicode strings as\ndecode input and translates newlines without first invoking an external\ndecoder.
IncrementalNewlineDecoder.__init__() not called
IndentationError
Index out of range
IndexError
Indices for islice() must be None or an integer: 0 <= x <= sys.maxsize.
Infinity
Initialization arguments are not supported
Initialize an extension module
Initialize with the path to search on and a variable number of\n        2-tuples containing the loader and the file suffixes the loader\n        recognizes.
InitializeCriticalSection
InitializeProcThreadAttributeList
InitializeSListHead
InoM
Input sample should be longer
Install importers for builtin and frozen modules
Install importers that require external filesystem access
Install the path-based import components.
Interactive
Interactive field "body" changed size during iteration
Interactive field "body" must be a list, not a %.200s
Interactive(stmt* body)
Internal error in the Python interpreter.\n\nPlease report this to the Python maintainer, along with the traceback,\nthe Python version, and the hardware/OS platform and version.
Internal error: failed to get value of a constant
Internal lock count overflowed
Internal state held by ABC machinery.
InterpreterID
Interpreters module-list not accessible.
Interrupt
Interrupted by signal.
InterruptedError
Inv. counter: 
Invalid \escape
Invalid \uXXXX escape
Invalid arguments
Invalid base64-encoded string: number of data characters (%zd) cannot be 1 more than a multiple of 4
Invalid control character at
Invalid day: %d (range is [1, 7])
Invalid dictionary
Invalid format specifier '%U' for object of type '%.200s'
Invalid format string
Invalid format string ($ before |)
Invalid format string ($ specified twice)
Invalid format string (| specified twice)
Invalid initialization option
Invalid isoformat string: %R
Invalid syntax.
Invalid value NaN (not a number)
Invalid week: %d
Invalid whence (%i, should be 0, 1 or 2)
Invalidate the directory mtime.
Invert
IpJp
IsADirectoryError
IsDebuggerPresent
IsJsKsLsNsOsQsSsTsUsVsXsYsZs[s\s]s^s_sasbscsdsesfsgshsisjsksnspsqsrssstsusvswsxsyszs{s|s}s
IsNot
IsProcessorFeaturePresent
IsoCalendarDate
IsqK
It is not possible to set the encoding or newline of stream after the first read
ItJt~
Item
Item %d of second argument (exceptions) is not an exception
Item in 
ItemsView
ItemsView.__contains__
ItemsView.__iter__
ItemsView._from_iterable
Iterable
Iterable.__iter__
Iterable.__subclasshook__
Iterator
Iterator.__iter__
Iterator.__next__
Iterator.__subclasshook__
IuJu
IvUv
I|I:_raise_exception
J"K"A"@"i"j"
J(8F
J1Hs
J2CI
J2K2
J2k1
J3K3
J3O:
J4Q4K4
J5K5
J6H199*[
J6K<s
J80_uI\
J8aV&LCGbV
J<UeF
JCKCJ
JFKFX
JI9D
JL(s
JM'Z
JM]q
JOQa
JSON scanner object
JSONDecodeError
JUMP_IF_FALSE_OR_POP
JUMP_IF_TRUE_OR_POP
JUbW/b
JVYK
JW}1,@IWHWB7TB
JXCO
J[yKTT
J^Fr
J^zW
Jack
JbKb
JbMbz
Jcp0
JeGeO5HF
JgKg11k
Ji#j\vm
Ji]Q;
JjQ=
JkKkLkMkVk@fYkp
JlcG_B*
JmSWzX
Join two or more pathname components, inserting '/' as needed.\n    If any component is an absolute path, all previous path components\n    will be discarded.  An empty last part will result in a path that\n    ends with a separator.
JoinedStr
JoinedStr field "values" changed size during iteration
JoinedStr field "values" must be a list, not a %.200s
JoinedStr(expr* values)
Jp=wj
Jp>P
JrBr@ri
JtzT
Ju6i
JupA[
JwLwKwr
Jx\feY
Jython is maintained by the Jython developers (www.jython.org).
JzD)
K0+9yAbY
K0L0
K0fpx
K2C]
K2tZvZ
K3RR]
K8L8M8N8
K:CloseHandle
K:GetExitCodeProcess
K:GetFileType
K:GetModuleFileName
K:UnmapViewOfFile
K:VirtualQuerySize
K<L<M<l
KBD@PB
KC4R,
KEH<z
KERNEL32
KERNEL32.dll
KEY_ALL_ACCESS
KEY_CREATE_LINK
KEY_CREATE_SUB_KEY
KEY_ENUMERATE_SUB_KEYS
KEY_EXECUTE
KEY_NOTIFY
KEY_QUERY_VALUE
KEY_READ
KEY_SET_VALUE
KEY_WOW64_32KEY
KEY_WOW64_64KEY
KEY_WRITE
KFG0r4SHB
KFs\
KG%2i4
KGLG
KHiX
KI:TerminateProcess
KIvXWBwX
KK,F"
KKKki|k:DuplicateHandle
KKU|
KKkkkO&:CreateFileMapping
KMMKJJSLLeKefD
KMxG
KN1n
KOJO
KOOO:SetNamedPipeHandleState
KO|i:WriteFile
KQ;RJT
KQLQi>t
KQdV
KR72A
KVHV
KW'Ne8*
KY'0d
KY+F
K[5Z
K\Ei
K\v\tr\r0n
K^8v
K^kY@
KcT2N7LcF9r9
KdUWBdj
KeyError
KeyboardInterrupt
KeysView
KeysView.__contains__
KeysView.__iter__
KeysView._from_iterable
KfU5
Ki:open_osfhandle
KiLi
Kk:WaitForSingleObject
KkkkO&:MapViewOfFile
Kk|i:ReadFile
Kk|q
KmdO
KnJn`
KpLpMpk
Ks1X
KvLv
Kw._uh
KyLy
K|i:ConnectNamedPipe
K|i:PeekNamedPipe
L0cD;=4:$Ml
L3M3
L5t\
L9M9
L:7I&DKIEW
L:get_handle_inheritable
L;PS
L;array item must be integer
L@pK
LBRACE
LBX1n6
LCMAP_FULLWIDTH
LCMAP_HALFWIDTH
LCMAP_HIRAGANA
LCMAP_KATAKANA
LCMAP_LINGUISTIC_CASING
LCMAP_LOWERCASE
LCMAP_SIMPLIFIED_CHINESE
LCMAP_TITLECASE
LCMAP_TRADITIONAL_CHINESE
LCMAP_UPPERCASE
LCMapStringEx
LCMapStringEx($module, /, locale, flags, src)\n--\n\n
LC_ALL
LC_COLLATE
LC_CTYPE
LC_MONETARY
LC_NUMERIC
LC_TIME
LEFTSHIFT
LEFTSHIFTEQUAL
LESS
LESSEQUAL
LFMFNFY
LFz1P=
LICENSE
LICENSE.txt
LJTc
LK_LOCK
LK_NBLCK
LK_NBRLCK
LK_RLCK
LK_UNLCK
LL}=HHI
LNal
LOCAL
LOCALE_NAME_INVARIANT
LOCALE_NAME_MAX_LENGTH
LOCALE_NAME_SYSTEM_DEFAULT
LOCALE_NAME_USER_DEFAULT
LONG pickle has negative byte count
LPAR
LQ|J
LR0p
LSQB
LShift
LSmZ
LV[:ipc
LXRXYXD7MXW
LXqy
LZMZ
L[J[4
L`yk
LaJa
Lambda
Lambda expression parameters cannot be parenthesized
Lambda(arguments args, expr body)
Latest Service Pack installed on the system
LazyLoader
LazyLoader.__check_eager_loader
LazyLoader.__init__
LazyLoader.create_module
LazyLoader.exec_module
LazyLoader.factory
LazyLoader.factory.<locals>.<lambda>
LcRb
LdDQ
Leading padding not allowed
LeaveCriticalSection
Lengths should be the same
Lf\nN
LgMgTg]g
LgSg^gHgig
Li:waitpid
Library
Libz
Line endings translated so far.\n\nOnly line endings translated during reading are considered.\n\nSubclasses should override.\n
List
List field "elts" changed size during iteration
List field "elts" must be a list, not a %.200s
List(expr* elts, expr_context ctx)
ListComp
ListComp field "generators" changed size during iteration
ListComp field "generators" must be a list, not a %.200s
ListComp(expr elt, comprehension* generators)
LlfQMl|
LmNmeJKmk
LoMoF6>CNoC
Load
Load a frozen module.\n\n        This method is deprecated.  Use exec_module() instead.\n\n        
Load a module from a file.\n\n        This method is deprecated.  Use exec_module() instead.\n\n        
Load a namespace module.\n\n        This method is deprecated.  Use exec_module() instead.\n\n        
Load the specified module into sys.modules and return it.\n\n    This method is deprecated.  Use loader.exec_module() instead.\n\n    
LoadKey
LoadKey($module, key, sub_key, file_name, /)\n--\n\nInsert data into the registry from a file.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that identifies the sub-key to load.\n  file_name\n    The name of the file to load registry data from.  This file must\n    have been created with the SaveKey() function.  Under the file\n    allocation table (FAT) file system, the filename may not have an\n    extension.\n\nCreates a subkey under the specified key and stores registration\ninformation from a specified file into that subkey.\n\nA call to LoadKey() fails if the calling process does not have the\nSE_RESTORE_PRIVILEGE privilege.\n\nIf key is a handle returned by ConnectRegistry(), then the path\nspecified in fileName is relative to the remote computer.\n\nThe MSDN docs imply key must be in the HKEY_USER or HKEY_LOCAL_MACHINE\ntree.
LoadLibraryExW
LoadLibraryW
Loaded module 
Loaded module %R not found in sys.modules
Loader
Loader for extension modules.\n\n    The constructor is designed to work with FileFinder.\n\n    
Loader which handles sourceless file imports.
Local name referenced but not bound to a value.
LocalFree
LockType
LookupError
LookupPrivilegeValueA
Low-level interface to warnings functionality.
Lp:set_handle_inheritable
LrIrHrJrw
LsJs<O
Ltm{]
Lt|Z
Lu7u7
Lvxb
L}M}R
M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(!&,&"&-&
M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)
M0N0O0P0
M1N1
M2H[N[T[
M2N2
M5CO:3\>
M6,7I
M9NfT<MfH
M<qU->rUsUS0:BR?i
MAGIC
MAGIC_NUMBER
MASK
MAXGROUPS
MAXLINES
MAXREPEAT
MAXYEAR
MAX_COMMENT_LEN
MAX_DIGEST_SIZE
MAX_KEY_SIZE
MAX_WBITS
MAks1
MBNBg
MCB2'b&bd
MD5Type
MDNDM
MEM_COMMIT
MEM_FREE
MEM_IMAGE
MEM_MAPPED
MEM_PRIVATE
MEM_RESERVE
MENEq
MGiI
MH.i
MINEQUAL
MINUS
MINYEAR
MISSING
MJVK
MK%Q
MMjK
MN+F|o&N
MN1j
MO-n
MOIP
MOMkLk'A
MPm[
MQ=LNQ
MR\oc
MS_WINDOWS
MT*LL
MVYd\dzB^d
MW@d}O?d
MX?Uusv
M]QLN
M^sl
M_TFO_0
Major release number
Major version number
Make the module load lazily.
MapViewOfFile
MapViewOfFile($module, file_map, desired_access, file_offset_high,\n              file_offset_low, number_bytes, /)\n--\n\n
Mapping
Mapping key not found.
Mapping.__contains__
Mapping.__eq__
Mapping.__getitem__
Mapping.get
Mapping.items
Mapping.keys
Mapping.values
MappingView
MappingView.__init__
MappingView.__len__
MappingView.__repr__
MatMult
Match
Match field "cases" changed size during iteration
Match field "cases" must be a list, not a %.200s
Match(expr subject, match_case* cases)
MatchAs
MatchAs must specify a target name if a pattern is given
MatchAs(pattern? pattern, identifier? name)
MatchClass
MatchClass cls field can only contain Name or Attribute nodes.
MatchClass doesn't have the same number of keyword attributes as patterns
MatchClass field "kwd_attrs" changed size during iteration
MatchClass field "kwd_attrs" must be a list, not a %.200s
MatchClass field "kwd_patterns" changed size during iteration
MatchClass field "kwd_patterns" must be a list, not a %.200s
MatchClass field "patterns" changed size during iteration
MatchClass field "patterns" must be a list, not a %.200s
MatchClass(expr cls, pattern* patterns, identifier* kwd_attrs, pattern* kwd_patterns)
MatchMapping
MatchMapping doesn't have the same number of keys as patterns
MatchMapping field "keys" changed size during iteration
MatchMapping field "keys" must be a list, not a %.200s
MatchMapping field "patterns" changed size during iteration
MatchMapping field "patterns" must be a list, not a %.200s
MatchMapping(expr* keys, pattern* patterns, identifier? rest)
MatchOr
MatchOr field "patterns" changed size during iteration
MatchOr field "patterns" must be a list, not a %.200s
MatchOr requires at least 2 patterns
MatchOr(pattern* patterns)
MatchSequence
MatchSequence field "patterns" changed size during iteration
MatchSequence field "patterns" must be a list, not a %.200s
MatchSequence(pattern* patterns)
MatchSingleton
MatchSingleton can only contain True, False and None
MatchSingleton(constant value)
MatchStar
MatchStar(identifier? name)
MatchValue
MatchValue(expr value)
Max string recursion exceeded
MbPA
Memo value not found at index %ld
Memory block allocated at (most recent call first):\n
MemoryError
Meta path finder for modules declared in the Windows registry.
Meta path finder for sys.path and package __path__ attributes.
Meta path import for built-in modules.\n\n    All methods are either class or static methods to avoid the need to\n    instantiate the class.\n\n    
Meta path import for frozen modules.\n\n    All methods are either class or static methods to avoid the need to\n    instantiate the class.\n\n    
Metaclass for defining Abstract Base Classes (ABCs).\n\n        Use this metaclass to create an ABC.  An ABC can be subclassed\n        directly, and then acts as a mix-in class.  You can also register\n        unrelated concrete classes (even built-in classes) and unrelated\n        ABCs as 'virtual subclasses' -- these and their descendants will\n        be considered subclasses of the registering ABC by the built-in\n        issubclass() function, but the registering ABC won't show up in\n        their MRO (Method Resolution Order) nor will method\n        implementations defined by the registering ABC be callable (not\n        even via super()).\n        
MetadataPathFinder
Method or function hasn't been implemented yet.
Method to set name of a property.
MgNgn
Minor release number
Minor version number
Missed attribute '%U' of type %s
Missing ']' in format string
Missing parentheses in call to '%U'. Did you mean %U(...)?
MmRd
Mn.a
Module
Module contains faster C implementation of abc.ABCMeta
Module field "body" changed size during iteration
Module field "body" must be a list, not a %.200s
Module field "type_ignores" changed size during iteration
Module field "type_ignores" must be a list, not a %.200s
Module implements the Mersenne Twister random number generator.
Module index out of bounds.
Module not found.
Module use of %.150s conflicts with this version of Python.
Module(stmt* body, type_ignore* type_ignores)
ModuleNotFoundError
ModuleSpec
ModuleSpec.__eq__
ModuleSpec.__init__
ModuleSpec.__repr__
ModuleSpec.cached
ModuleSpec.has_location
ModuleSpec.parent
ModuleType
Modules/Setup.local
More keyword list entries (%d) than format specifiers (%d)
MoveFileExW
MpOp/
MqOqc?Pqf
MuJugunu
Mult
MultiByteToWideChar
Must have exactly one of create/read/write/append mode and at most one plus
Must have exactly one of read or write mode
MutableMapping
MutableMapping.__delitem__
MutableMapping.__setitem__
MutableMapping.clear
MutableMapping.pop
MutableMapping.popitem
MutableMapping.setdefault
MutableMapping.update
MutableSequence
MutableSequence.__delitem__
MutableSequence.__iadd__
MutableSequence.__setitem__
MutableSequence.append
MutableSequence.clear
MutableSequence.extend
MutableSequence.insert
MutableSequence.pop
MutableSequence.remove
MutableSequence.reverse
MutableSet
MutableSet.__iand__
MutableSet.__ior__
MutableSet.__isub__
MutableSet.__ixor__
MutableSet.add
MutableSet.clear
MutableSet.discard
MutableSet.pop
MutableSet.remove
M{LvM
N N!N#N&N)N.N/N1N3N5N7N<N@NANBNDNFNJNQNUNWNZN[NbNcNdNeNgNhNjNkNlNmNnNoNrNtNuNvNwNxNyNzN{N|N}N
N S4X
N"OdO
N#N$N(N+N.N/N0N5N@NANDNGNQNZN\NcNhNiNtNuNyN
N%O'O\tO+O^OgO8eZO]O_OWO2O=OvOtO
N(N)O
N(N)l
N(O)n
N(ON)
N(OO)
N(Os)
N)N+N.N@NGNHN
N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)
N*N1N6N<N?NBNVNXN
N*ja
N,4.4
N,p]u/f
N5O5L
N6)7cd
N7O7
N7OL4
N9P&PeP|Q8RcR
N:O<O
N;NMNONNN
N=lXOeO
N?QeQkQ
NAME
NAME_MAPPING
NAOAp
NASs
NAwp
NBcHS
NCN]N
NCOCV
NCQAQgQmQnQlQ
NC`Nf@t
NEN]N
NEQDQ
NEWLINE
NEWOBJ
NEWOBJ_EX
NFKC
NGkN
NHQCS`S
NISMS
NJAx4R
NJSISaS`SoSnS
NKX{
NKjM`
NM!l[17S
NM0^
NMOOOGOWO^O4O[OUO0OPOQO=O:O8OCOTO<OFOcO\O`O/ONO6OYO]OHOZOLQKQMQuQ
NMPWAIT_WAIT_FOREVER
NMS)Z
NN"L.PSD25X^uU7<S;
NNNK
NNO\PuPCR
NN\vP
NNkk
NOOEQAS
NORMAL_PRIORITY_CLASS
NOTEQUAL
NQOvP*Q
NRNSNiN
NSBt
NSIG
NSLSx
NULL
NULL interpreter
NULL object in marshal data for code object
NULL object in marshal data for list
NULL object in marshal data for object
NULL object in marshal data for set
NULL object in marshal data for tuple
NULL object passed to Py_BuildValue
NUMBER
NUO=O
NVSUA94UXQq
NW?Q
NWLW)
NXOXPX
NZO~O
N\=9HDdAL\
N\PuPHT
N\fN@Q
N\fNGN
N\fP\rP#P
N\nN+N8N
N\nOMO
N\rN-N0N9NKN9\
N\rOHSIT>T/Z
N\tOZO0O[O]OWOGOvO
N\u]y
N]O]G
Name
Name not found globally.
Name(identifier id, expr_context ctx)
NameError
NamedExpr
NamedExpr target must be a Name
NamedExpr(expr target, expr value)
NamespaceLoader
NamespaceLoader.__init__
NamespaceLoader.create_module
NamespaceLoader.exec_module
NamespaceLoader.get_code
NamespaceLoader.get_resource_reader
NamespaceLoader.get_source
NamespaceLoader.is_package
NamespaceLoader.load_module
NamespaceLoader.module_repr
NamespaceLoader.module_repr() is deprecated and slated for removal in Python 3.12
NamespaceReader
NbSK"
Nct9,
NdKdW
NeP0
Negative ImportFrom level
Negative seek position %zd
Negative size passed to PyByteArray_FromStringAndSize
Negative size passed to PyBytes_FromStringAndSize
Negative size passed to PyUnicode_FromStringAndSize
Negative size passed to PyUnicode_New
Negative size passed to _PyUnicode_New
Negative size value %zd
Negative zero coercion (z) not allowed in integer format specifier
Negative zero coercion (z) not allowed in string format specifier
NiRU[
NkX7
No active exception to reraise
No code object available for %s
No mapping for the Unicode character exists in the target code page.
No module named 
No module named %s
No module specified for execution
No such frozen object named %R
Non-UTF-8 code starting with '\x%.2x' in file %U on line %i, but no encoding declared; see https://peps.python.org/pep-0263/ for details
Non-code object in {!r}
Non-hexadecimal digit found
None
None disallowed in expression list
None disallowed in statement list
None is not a valid HKEY in this context
NoneType
NoneType takes no arguments
Nonlocal
Nonlocal field "names" changed size during iteration
Nonlocal field "names" must be a list, not a %.200s
Nonlocal(identifier* names)
Normalize case of pathname.  Has no effect under Posix
Normalize case of pathname.\n\n        Makes all characters lowercase and all slashes into backslashes.\n        
Normalize path, eliminating double slashes, etc.
Not enough permissions.
Not importing directory {}: missing __init__
NotADirectoryError
NotEq
NotImplemented
NotImplemented should not be used in a boolean context
NotImplementedError
NotImplementedType
NotImplementedType takes no arguments
NotIn
NpPjPaP^P`PSPKP]PrPHPMPAP[PJPbP
Nqdr
Nq|Q
Nr4[
NryB
NsJsZ5
Ns~G
Nt#A
NtOtPtQtRtStTtVtXt]t`tatbtctdtetftgthtitjtktltntotqtrtstttutxtytzt{t|t}t
Ntws
NuOuQ@Xc^s^\n_
NuOuQue6RuR
NullImporter
Number of days.
Number of microseconds (>= 0 and less than 1 second).
Number of seconds (>= 0 and less than 1 day).
Nw5\r[
Nxpym`3c3t
NyUiQc
O!0!2!.!a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#P!C!Q!
O!O!|O:combine
O!O#O(O)O,O-O.O1O3O5O7O9O;O>O?O@OAOBODOEOGOHOIOJOKOLOROTOVOaObOfOhOjOkOmOnOqOrOuOwOxOyOzO}O
O!P)P,P
O!P\vP
O!X1X
O!Xq
O!|U:timezone
O&$p:channel_list_interpreters
O&:channel_destroy
O&O&OkO:SetValueEx
O&O&kU:SetValue
O&O&|ii:CreateKeyEx
O&O&|ii:DeleteKeyEx
O&O&|ii:OpenKey
O&O&|ii:OpenKeyEx
O&O:channel_send
O&OOOikOO&O:CreateProcess
O&P%P
O&|$p:InterpreterID.__init__
O&|$ppp:channel_close
O&|$ppp:channel_release
O&|$pppp:ChannelID.__new__
O&|O:channel_recv
O()NN
O(CO)O
O(NO)O
O(NiO)
O(Nn)n
O(O)(OOOO)
O(O)n
O(OCiN)O
O(ONO)
O(OO)
O(OO)(OOO)
O(OO)O
O(OO)l
O(OOO)
O(OiiOii)
O(On)
O(On)(NN)
O(On)N
O(OnNn)n
O)PLP
O+P\tP|Q
O-P*P
O.O1O`O3O5O7O9O;O>O@OBOHOIOKOLOROTOVOXO_OcOjOlOnOqOwOxOyOzO}O~O
O/TQY\fxhV
O0x5
O2P2
O3P3
O3P7P,P
O4P4
O4s<T
O8M2
O8P8
O9OVO
O9P9
O9i0
O:PickleBuffer
O:cmp_to_key
O:destroy
O:is_running
O:is_shareable
O:log
O:make_scanner
O:utcfromtimestamp
O?cQ2
O@4d
O@P"P
OA\nz
ODRIR
OD^Y
OF02
OGGqHq
OGPG
OIQ!S
OI_2NHElS4U@DlIlyCcL
OJ5XqC
OJU2
OJe~
OK;illegal decoder state
OK;setstate(): illegal state argument
OKm7hIC7w>$V,Z-Z@FgW6J
OLx\k\{
OMV^P>>WU^PU]0
OMg^
ON)V@
ON\v
OO!0"0A
OO"FsIQ
OO:log
OO;illegal decoder state
OOOO
OOOOO
OOOOUUppp:make_encoder
OOOOi
OOOO|OO
OOOi
OOOiiiiii
OOOsOO
OOPAbGr
OOUi|OOOO:warn_explicit
OOii
OOpO:lru_cache
OO{p
OPEN_EXISTING
OPQRS
OPQW[
OPTIMIZED_BYTECODE_SUFFIXES
OPs8z
OQVhZ
ORQ^U%Z
OS routines for NT or Posix depending on what system we're on.\n\nThis exports:\n  - all functions from posix or nt, e.g. unlink, stat, etc.\n  - os.path is either posixpath or ntpath\n  - os.name is either 'posix' or 'nt'\n  - os.curdir is a string representing the current directory (always '.')\n  - os.pardir is a string representing the parent directory (always '..')\n  - os.sep is the (or a most common) pathname separator ('/' or '\\')\n  - os.extsep is the extension separator (always '.')\n  - os.altsep is the alternate pathname separator (None or '/')\n  - os.pathsep is the component separator used in $PATH etc\n  - os.linesep is the line separator in text files ('\r' or '\n' or '\r\n')\n  - os.defpath is the default search path for executables\n  - os.devnull is the file path of the null device ('/dev/null', etc.)\n\nPrograms that import and use 'os' stand a better chance of being\nportable between different platforms.  Of course, they must then\nonly use functions that are defined by all platforms (e.g., unlink\nand opendir), and leave all pathname manipulation to os.path\n(e.g., split and join).\n
OSError
OSU:XQYc[F\
OSztuGCWdE|t}t{tC
OTS>Y
OTXI
OUxP
OU|O:run_string
OU|i
OV:t
OVERLAPPED structure wrapper
OVQtQ
OWjkk}
OX6RE:>K>L
OY"4PY
OY";i9
OZP<\
O\aW
O\nOc
O\nti
O\rgnm
O\vOIQGQFQHQhQqQ
O\vO\fO
O\vO`OHOIOVO_OjOlO~O
O^W\nb
O_APPEND
O_BINARY
O_CREAT
O_EXCL
O_NOINHERIT
O_RANDOM
O_RDONLY
O_RDWR
O_SEQUENTIAL
O_SHORT_LIVED
O_TEMPORARY
O_TEXT
O_TRUNC
O_WRONLY
O`vC-G1
Object causing the exception
Object is not writable.
Objects of type '%s' can not be used as binary registry values
OceQh
Oct  2 2023
OczcWS!
OdO7O>OTOXO
Odd-length string
Of)<K
OhThVh
Oi;illegal decoder state
OiBG
OiO{O
Oi|k:WaitForMultipleObjects
OjVj
Ok:CreatePipe
OkOnO
Ol%iUV
Ol?;r;4
OlQqQ
Ol\_g
OmyBR
On:_iterencode
On:scan_once
On;encoding error handler must return (str/bytes, int) tuple
OnWw
Only '.' or '[' may follow ']' in format field specifier
Only base64 data is allowed
Onns
On|i:scanstring
Op>s,b
OpOuO
OpW:p
Opcode support module.
OpenFileMapping
OpenFileMapping($module, desired_access, inherit_handle, name, /)\n--\n\n
OpenFileMappingA
OpenFileMappingW
OpenKey
OpenKey($module, /, key, sub_key, reserved=0, access=winreg.KEY_READ)\n--\n\nOpens the specified key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that identifies the sub_key to open.\n  reserved\n    A reserved integer that must be zero.  Default is zero.\n  access\n    An integer that specifies an access mask that describes the desired\n    security access for the key.  Default is KEY_READ.\n\nThe result is a new handle to the specified key.\nIf the function fails, an OSError exception is raised.
OpenKeyEx
OpenKeyEx($module, /, key, sub_key, reserved=0, access=winreg.KEY_READ)\n--\n\nOpens the specified key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that identifies the sub_key to open.\n  reserved\n    A reserved integer that must be zero.  Default is zero.\n  access\n    An integer that specifies an access mask that describes the desired\n    security access for the key.  Default is KEY_READ.\n\nThe result is a new handle to the specified key.\nIf the function fails, an OSError exception is raised.
OpenProcess
OpenProcess($module, desired_access, inherit_handle, process_id, /)\n--\n\n
OpenProcessToken
OpenWrapper
OpenWrapper is deprecated, use open instead
Operating system platform
Operation doesn't work on directories.
Operation only works on directories.
Operator interface.\n\nThis module exports a set of functions implemented in C corresponding\nto the intrinsic operators of Python.  For example, operator.add(x, y)\nis equivalent to the expression x+y.  The function names are those\nused for special methods; variants without leading and trailing\n'__' are also provided for convenience.
Optimized C implementation for the Python pickle module.
Optional method returning a metadata dict for the specified\n        path (a str).\n\n        Possible keys:\n        - 'mtime' (mandatory) is the numeric timestamp of last source\n          code modification;\n        - 'size' (optional) is the size in bytes of the source code.\n\n        Implementing this method allows the loader to read bytecode files.\n        Raises OSError when the path cannot be handled.\n        
Optional method that returns the modification time (an int) for the\n        specified path (a str).\n\n        Raises OSError when the path cannot be handled.\n        
Optional method which writes data (bytes) to a file path (a str).\n\n        Implementing this method allows for the writing of bytecode files.\n        
Optional method which writes data (bytes) to a file path (a str).\n\n        Implementing this method allows for the writing of bytecode files.\n\n        The source path is needed in order to correctly transfer permissions\n        
Options (and corresponding environment variables):\n-b     : issue warnings about str(bytes_instance), str(bytearray_instance)\n         and comparing bytes/bytearray with str. (-bb: issue errors)\n-B     : don't write .pyc files on import; also PYTHONDONTWRITEBYTECODE=x\n-c cmd : program passed in as string (terminates option list)\n-d     : turn on parser debugging output (for experts only, only works on\n         debug builds); also PYTHONDEBUG=x\n-E     : ignore PYTHON* environment variables (such as PYTHONPATH)\n-h     : print this help message and exit (also -? or --help)\n-i     : inspect interactively after running script; forces a prompt even\n         if stdin does not appear to be a terminal; also PYTHONINSPECT=x\n-I     : isolate Python from the user's environment (implies -E and -s)\n-m mod : run library module as a script (terminates option list)\n-O     : remove assert and __debug__-dependent statements; add .opt-1 before\n         .pyc extension; also PYTHONOPTIMIZE=x\n-OO    : do -O changes and also discard docstrings; add .opt-2 before\n         .pyc extension\n-P     : don't prepend a potentially unsafe path to sys.path; also PYTHONSAFEPATH\n-q     : don't print version and copyright messages on interactive startup\n-s     : don't add user site directory to sys.path; also PYTHONNOUSERSITE\n-S     : don't imply 'import site' on initialization\n-u     : force the stdout and stderr streams to be unbuffered;\n         this option has no effect on stdin; also PYTHONUNBUFFERED=x\n-v     : verbose (trace import statements); also PYTHONVERBOSE=x\n         can be supplied multiple times to increase verbosity\n-V     : print the Python version number and exit (also --version)\n         when given twice, print more information about the build\n-W arg : warning control; arg is action:message:category:module:lineno\n         also PYTHONWARNINGS=arg\n-x     : skip first line of source, allowing use of non-Unix forms of #!cmd\n-X opt : set implementation-specific option\n--check-hash-based-pycs always|default|never:\n         control how Python invalidates hash-based .pyc files\n--help-env      : print help about Python environment variables and exit\n--help-xoptions : print help about implementation-specific -X options and exit\n--help-all      : print complete help information and exit\nArguments:\nfile   : program read from script file\n-      : program read from stdin (default; interactive mode if a tty)\narg ...: arguments passed to program in sys.argv[1:]\n
OqPq
OrderedDict changed size during iteration
OrderedDict mutated during iteration
Os+W,a
OsOO
OsQs
OsssO
OtPGRsSo`Ic_g,n
Out of memory and PyExc_MemoryError is not initialized yet
Out of memory interning an attribute name
Out of memory while compressing data
Out of memory while decompressing data
Out of memory.
Out of range float values are not JSON compliant
OutputDebugStringW
OuuOi
OvOtO
OverflowError
Override for isinstance(instance, cls).
Override for issubclass(subclass, cls).
OwOLO
OxSi`)nOz
Oxox
OyZkAJ
OzOTQRQUQiQwQvQxQ
O{OiOpO
O{T Z
O|$O:ContextVar
O|$p:set_wakeup_fd
O|O&O&:index
O|O:fromtimestamp
O|O:getsizeof
O|OO:
O|iOi:dump_traceback_later
O|n:repeat
O|s:StreamReader
O|s:StreamWriter
O}Rj_SaSg
O~O{O
P P"P#P$P'P+P/P0P1P2P3P4P5P6P7P8P9P;P=P?P@PAPBPDPEPFPIPJPKPMPPPQPRPSPTPVPWPXPYP[P]P^P_P`PaPbPcPdPfPgPhPiPjPkPmPnPoPpPqPrPsPtPuPxPyPzP|P}P
P P'P5P/P1P
P kzlTotzP}@
P!Y"Z"["\"]"^"_"`"a"b"
P"P'P.P0P2P3P5P@PAPBPEPFPJPLPNPQPRPSPWPYP_P`PbPcPfPgPjPmPpPqP;P
P"P0P
P"Ph4BPFPNPSPWPcPfPjPpP
P%@Fpg`
P'P.P@P;PAP
P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(
P*P%P
P*Rq\ceUl
P.P-P
P0rT
P41h<h
P4b&^
P7MSp
P83c
P9#=z
P:rN}
P?DW
PAGESIZE
PAGE_EXECUTE
PAGE_EXECUTE_READ
PAGE_EXECUTE_READWRITE
PAGE_EXECUTE_WRITECOPY
PAGE_GUARD
PAGE_NOACCESS
PAGE_NOCACHE
PAGE_READONLY
PAGE_READWRITE
PAGE_WRITECOMBINE
PAGE_WRITECOPY
PATH
PA\l
PBw<uIl@
PCPGP
PDi5j
PEP_PiPkPcPdPFP@PnPsPWPQP
PERCENT
PERCENTEQUAL
PERSON_SIZE
PFP]
PFPpPBP
PFQFd
PFum
PHS:a<Xn
PHS>T3T
PIPE
PIPE_ACCESS_DUPLEX
PIPE_ACCESS_INBOUND
PIPE_READMODE_MESSAGE
PIPE_TYPE_MESSAGE
PIPE_UNLIMITED_INSTANCES
PIPE_WAIT
PIQlQ
PJ+zkkxgeY
PJQdQ
PJtPg
PKVKgKOMhM-N{O"P8PPP]PTQUQXQ[Q\Q]Q^Q_Q`QbQcQdQeQfQhQiQjQkQmQoQpQrQvQzQ|Q}Q~Q"R#R'R(R)R*R+R-R2R>RBRCRDRFRGRHRIRJRKRMRNRORPRQRRRSRTRURVRWRYRZR^R_RaRbRdReRfRgRhRiRjRkRpRqRrRsRtRuRwRxRfT|T%U+U.U8VMVKWdWE[d[%\%]U]t]|^~^3_a_h_q`-amauc!d)d.e1e2e9e;e<eDeNePeReVeze{e|e~e!f$f'f-f/f0f1f3f7f8f<fDfFfGfJfRfVfYf\f_fafdfefffhfjfkflfofqfrfufvfwfyf!g&g)g*g,g-g0g?gAgFgGgKgMgOgPgSg_gdgfgwgghhhphqhwhyh{h~h'i,iLiwiAjejtjwj|j~j$k'k)k*k:k;k=kAkBkFkGkLkOkPkQkRkXk&l'l*l/l0l1l2l5l8l:l@lAlElFlIlJlUl]l^laldlglhlwlxlzl!m"m#mnm[n=rzr1s'tnttvvv8wHwSw[xpx!z"zfz)|!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#,!]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#&"
PLATLIBDIR
PLATSTDLIB_LANDMARK
PLUS
PLUSEQUAL
PLwgX2}3{g_
PMp_
PNo=
POPW
POSIX exception code
POv[
PP\Qb
PREFIX
PREFIXES
PROCESS_ALL_ACCESS
PROCESS_DUP_HANDLE
PROR
PUYe
PVRJW
PVRoR&T
PYDEBUGEXT
PYTHONBREAKPOINT
PYTHONCASEOK
PYTHONCOERCECLOCALE
PYTHONDEBUG
PYTHONDEVMODE
PYTHONDONTWRITEBYTECODE
PYTHONDUMPREFS
PYTHONFAULTHANDLER
PYTHONHASHSEED
PYTHONHASHSEED must be "random" or an integer in range [0; 4294967295]
PYTHONINSPECT
PYTHONINTMAXSTRDIGITS
PYTHONINTMAXSTRDIGITS: invalid limit; must be >= 640 or 0 for unlimited.
PYTHONIOENCODING
PYTHONLEGACYWINDOWSFSENCODING
PYTHONLEGACYWINDOWSSTDIO
PYTHONMALLOC
PYTHONMALLOC: unknown allocator
PYTHONMALLOCSTATS
PYTHONNODEBUGRANGES
PYTHONNOUSERSITE
PYTHONOPTIMIZE
PYTHONPATH
PYTHONPROFILEIMPORTTIME
PYTHONSAFEPATH
PYTHONTRACEMALLOC
PYTHONTRACEMALLOC: invalid number of frames
PYTHONUNBUFFERED
PYTHONUSERBASE
PYTHONUTF8
PYTHONVERBOSE
PYTHONWARNDEFAULTENCODING
PYWINVER
PY_SSIZE_T_CLEAN macro must be defined for '#' formats
P[.L2?5;xWS?f
P\fP%P(P~PCPUPHPNPlP{P
P\nP\fP
P\tP\nP
P\vQ\fQ
P]Yp3K
P^0N
P^rE
P_3l
P_DETACH
P_NOWAIT
P_NOWAITO
P_OVERLAY
P_WAIT
P_a_4e
P`N<B
PaRaR
ParamSpec
Parenthesized context managers are
Pass
Patch release number
Path hook for importlib.machinery.FileFinder.
PathCchCombineEx
PathCchFindExtension
PathCchSkipRoot
PathFinder
PathFinder._get_spec
PathFinder._legacy_get_spec
PathFinder._path_hooks
PathFinder._path_importer_cache
PathFinder.find_distributions
PathFinder.find_module
PathFinder.find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
PathFinder.find_spec
PathFinder.invalidate_caches
PathLike
PathLike.__fspath__
PathLike.__subclasshook__
Paths don't have the same drive
Pattern matching is
PbOb+
Pbwt
Pc;c
PcKQQcRcScTcVQUc{2;@Vc_
PeU^q[{Rf
PeekNamedPipe
PeekNamedPipe($module, handle, size=0, /)\n--\n\n
PendingDeprecationWarning
Perform basic validity checking of a pyc header and return the flags field,\n    which determines how the pyc should be further validated against the source.\n\n    *data* is the contents of the pyc file. (Only the first 16 bytes are\n    required, though.)\n\n    *name* is the name of the module being imported. It is used for logging.\n\n    *exc_details* is a dictionary passed to ImportError if it raised for\n    improved debugging.\n\n    ImportError is raised when the magic number is incorrect or when the flags\n    field is invalid. EOFError is raised when the data is found to be truncated.\n\n    
PermissionError
Pg=6*ZQg
PgMb"
PhQxQMRjRaX|X`Y
Pi=L=
PiQi[i
PickleBuffer can not be pickled when pointing to a non-contiguous buffer
PickleBuffer can only pickled with protocol >= 5
PickleError
Pickler
Pickler(file, protocol=None, fix_imports=True, buffer_callback=None)\n--\n\nThis takes a binary file for writing a pickle data stream.\n\nThe optional *protocol* argument tells the pickler to use the given\nprotocol; supported protocols are 0, 1, 2, 3, 4 and 5.  The default\nprotocol is 4. It was introduced in Python 3.4, and is incompatible\nwith previous versions.\n\nSpecifying a negative protocol version selects the highest protocol\nversion supported.  The higher the protocol used, the more recent the\nversion of Python needed to read the pickle produced.\n\nThe *file* argument must have a write() method that accepts a single\nbytes argument. It can thus be a file object opened for binary\nwriting, an io.BytesIO instance, or any other custom object that meets\nthis interface.\n\nIf *fix_imports* is True and protocol is less than 3, pickle will try\nto map the new Python 3 names to the old module names used in Python\n2, so that the pickle data stream is readable with Python 2.\n\nIf *buffer_callback* is None (the default), buffer views are\nserialized into *file* as part of the pickle stream.\n\nIf *buffer_callback* is not None, then it can be called any number\nof times with a buffer view.  If the callback returns a false value\n(such as None), the given buffer is out-of-band; otherwise the\nbuffer is serialized in-band, i.e. inside the pickle stream.\n\nIt is an error if *buffer_callback* is not None and *protocol*\nis None or smaller than 5.
Pickler.__init__() was not called by %s.__init__()
PicklingError
Pm!M
PoPmP\Q
PoQoRorUD
Popen
Positional-only parameters are
PpQpRpSpTpUpVpXpq
Ppg@h\tQ
PqS\rW
PrOrNr|
Precision not allowed in integer format specifier
Print the message to stderr if -v/PYTHONVERBOSE is turned on.
Private method returning an estimate of len(list(it)).
Process a .pth file within the site-packages directory:\n       For each line in the file, either combine it with sitedir to a path\n       and add that to known_paths, or execute it if it starts with 'import '.\n    
Process not found.
Process32First
Process32Next
ProcessLookupError
Processing .pth file: 
Processing global site-packages
Processing user site-packages
Produce the data for a hash-based pyc.
Produce the data for a timestamp-based pyc.
Profiler(timer=None, timeunit=None, subcalls=True, builtins=True)\n\n    Builds a profiler object using the specified timer function.\n    The default timer is a fast built-in one based on real time.\n    For custom timer functions returning integers, timeunit can\n    be a float specifying a scale (i.e. how long each integer unit\n    is, in seconds).\n
Program interrupted by user.
Provided cookie was not returned from os.add_dll_directory
ProxyType
Psfs|s
Psm9MLcKwV
PtOtQtZK
PtsN
PuQ[\w^
PuSuG
PvfkyZ
Px^OgG
PyAIter_Check
PyArg_Parse
PyArg_ParseTuple
PyArg_ParseTupleAndKeywords
PyArg_UnpackTuple
PyArg_UnpackTuple() argument list is not a tuple
PyArg_VaParse
PyArg_VaParseTupleAndKeywords
PyArg_ValidateKeywordArguments
PyAsyncGen_New
PyAsyncGen_Type
PyBaseObject_Type
PyBool_FromLong
PyBool_Type
PyBuffer_FillContiguousStrides
PyBuffer_FillInfo
PyBuffer_FillInfo: view==NULL argument is obsolete
PyBuffer_FromContiguous
PyBuffer_GetPointer
PyBuffer_IsContiguous
PyBuffer_Release
PyBuffer_SizeFromFormat
PyBuffer_ToContiguous
PyBuffer_ToContiguous: len != view->len
PyByteArrayIter_Type
PyByteArray_AsString
PyByteArray_Concat
PyByteArray_FromObject
PyByteArray_FromStringAndSize
PyByteArray_Resize
PyByteArray_Size
PyByteArray_Type
PyBytesIter_Type
PyBytes_AsString
PyBytes_AsStringAndSize
PyBytes_Concat
PyBytes_ConcatAndDel
PyBytes_DecodeEscape
PyBytes_FromFormat
PyBytes_FromFormatV
PyBytes_FromFormatV(): %c format expects an integer in range [0; 255]
PyBytes_FromObject
PyBytes_FromString
PyBytes_FromStringAndSize
PyBytes_Repr
PyBytes_Size
PyBytes_Type
PyCF_ALLOW_TOP_LEVEL_AWAIT
PyCF_ONLY_AST
PyCF_TYPE_COMMENTS
PyCFunction_Call
PyCFunction_GetFlags
PyCFunction_GetFunction
PyCFunction_GetSelf
PyCFunction_New
PyCFunction_NewEx
PyCFunction_Type
PyCMethod_New
PyCMethod_Type
PyCOND_FINI(gil->cond) failed
PyCOND_FINI(gil->switch_cond) failed
PyCOND_INIT(gil->cond) failed
PyCOND_INIT(gil->switch_cond) failed
PyCOND_SIGNAL(gil->cond) failed
PyCOND_SIGNAL(gil->switch_cond) failed
PyCOND_WAIT(gil->cond) failed
PyCOND_WAIT(gil->switch_cond) failed
PyCallIter_New
PyCallIter_Type
PyCallable_Check
PyCapsule
PyCapsule_GetContext
PyCapsule_GetContext called with invalid PyCapsule object
PyCapsule_GetDestructor
PyCapsule_GetDestructor called with invalid PyCapsule object
PyCapsule_GetName
PyCapsule_GetName called with invalid PyCapsule object
PyCapsule_GetPointer
PyCapsule_GetPointer called with incorrect name
PyCapsule_GetPointer called with invalid PyCapsule object
PyCapsule_Import
PyCapsule_Import "%s" is not valid
PyCapsule_Import could not import module "%s"
PyCapsule_IsValid
PyCapsule_New
PyCapsule_New called with null pointer
PyCapsule_SetContext
PyCapsule_SetContext called with invalid PyCapsule object
PyCapsule_SetDestructor
PyCapsule_SetDestructor called with invalid PyCapsule object
PyCapsule_SetName
PyCapsule_SetName called with invalid PyCapsule object
PyCapsule_SetPointer
PyCapsule_SetPointer called with invalid PyCapsule object
PyCapsule_SetPointer called with null pointer
PyCapsule_Type
PyCell_Get
PyCell_New
PyCell_Set
PyCell_Type
PyClassMethodDescr_Type
PyClassMethod_New
PyClassMethod_Type
PyCode_Addr2Line
PyCode_Addr2Location
PyCode_GetCellvars
PyCode_GetCode
PyCode_GetFreevars
PyCode_GetVarnames
PyCode_New
PyCode_NewEmpty
PyCode_NewWithPosOnlyArgs
PyCode_Optimize
PyCode_Type
PyCodec_BackslashReplaceErrors
PyCodec_Decode
PyCodec_Decoder
PyCodec_Encode
PyCodec_Encoder
PyCodec_IgnoreErrors
PyCodec_IncrementalDecoder
PyCodec_IncrementalEncoder
PyCodec_KnownEncoding
PyCodec_LookupError
PyCodec_NameReplaceErrors
PyCodec_Register
PyCodec_RegisterError
PyCodec_ReplaceErrors
PyCodec_StreamReader
PyCodec_StreamWriter
PyCodec_StrictErrors
PyCodec_Unregister
PyCodec_XMLCharRefReplaceErrors
PyCompile_OpcodeStackEffect
PyCompile_OpcodeStackEffectWithJump
PyComplex_AsCComplex
PyComplex_FromCComplex
PyComplex_FromDoubles
PyComplex_ImagAsDouble
PyComplex_RealAsDouble
PyComplex_Type
PyConfig_Clear
PyConfig_InitIsolatedConfig
PyConfig_InitPythonConfig
PyConfig_Read
PyConfig_SetArgv
PyConfig_SetBytesArgv
PyConfig_SetBytesString
PyConfig_SetString
PyConfig_SetWideStringList
PyContextToken_Type
PyContextVar_Get
PyContextVar_New
PyContextVar_Reset
PyContextVar_Set
PyContextVar_Type
PyContext_Copy
PyContext_CopyCurrent
PyContext_Enter
PyContext_Exit
PyContext_New
PyContext_Type
PyCoro_New
PyCoro_Type
PyDescr_IsData
PyDescr_NewClassMethod
PyDescr_NewGetSet
PyDescr_NewMember
PyDescr_NewMethod
PyDescr_NewWrapper
PyDictItems_Type
PyDictIterItem_Type
PyDictIterKey_Type
PyDictIterValue_Type
PyDictKeys_Type
PyDictProxy_New
PyDictProxy_Type
PyDictRevIterItem_Type
PyDictRevIterKey_Type
PyDictRevIterValue_Type
PyDictValues_Type
PyDict_Clear
PyDict_Contains
PyDict_Contains(type->tp_dict, &(_PyRuntime.global_objects.singletons.strings.identifiers.___new__._ascii.ob_base)) == 0
PyDict_Copy
PyDict_DelItem
PyDict_DelItemString
PyDict_GetItem
PyDict_GetItemString
PyDict_GetItemWithError
PyDict_Items
PyDict_Keys
PyDict_Merge
PyDict_MergeFromSeq2
PyDict_New
PyDict_Next
PyDict_SetDefault
PyDict_SetItem
PyDict_SetItemString
PyDict_Size
PyDict_Type
PyDict_Update
PyDict_Values
PyEllipsis_Type
PyEnum_Type
PyErr_BadArgument
PyErr_BadInternalCall
PyErr_CheckSignals
PyErr_Clear
PyErr_Display
PyErr_ExceptionMatches
PyErr_Fetch
PyErr_Format
PyErr_FormatV
PyErr_GetExcInfo
PyErr_GetHandledException
PyErr_GivenExceptionMatches
PyErr_NewException
PyErr_NewException: name must be module.class
PyErr_NewExceptionWithDoc
PyErr_NoMemory
PyErr_NormalizeException
PyErr_Occurred
PyErr_Print
PyErr_PrintEx
PyErr_ProgramText
PyErr_ProgramTextObject
PyErr_RangedSyntaxLocationObject
PyErr_ResourceWarning
PyErr_Restore
PyErr_SetExcFromWindowsErr
PyErr_SetExcFromWindowsErrWithFilename
PyErr_SetExcFromWindowsErrWithFilenameObject
PyErr_SetExcFromWindowsErrWithFilenameObjects
PyErr_SetExcInfo
PyErr_SetFromErrno
PyErr_SetFromErrnoWithFilename
PyErr_SetFromErrnoWithFilenameObject
PyErr_SetFromErrnoWithFilenameObjects
PyErr_SetFromWindowsErr
PyErr_SetFromWindowsErrWithFilename
PyErr_SetHandledException
PyErr_SetImportError
PyErr_SetImportErrorSubclass
PyErr_SetInterrupt
PyErr_SetInterruptEx
PyErr_SetNone
PyErr_SetObject
PyErr_SetString
PyErr_SyntaxLocation
PyErr_SyntaxLocationEx
PyErr_SyntaxLocationObject
PyErr_WarnEx
PyErr_WarnExplicit
PyErr_WarnExplicitFormat
PyErr_WarnExplicitObject
PyErr_WarnFormat
PyErr_WriteUnraisable
PyEval_AcquireLock
PyEval_AcquireThread
PyEval_CallFunction
PyEval_CallMethod
PyEval_CallObjectWithKeywords
PyEval_EvalCode
PyEval_EvalCodeEx
PyEval_EvalFrame
PyEval_EvalFrameEx
PyEval_GetBuiltins
PyEval_GetFrame
PyEval_GetFuncDesc
PyEval_GetFuncName
PyEval_GetGlobals
PyEval_GetLocals
PyEval_InitThreads
PyEval_MergeCompilerFlags
PyEval_ReleaseLock
PyEval_ReleaseThread
PyEval_RestoreThread
PyEval_SaveThread
PyEval_SetProfile
PyEval_SetTrace
PyEval_ThreadsInitialized
PyExc_ArithmeticError
PyExc_AssertionError
PyExc_AttributeError
PyExc_BaseException
PyExc_BaseExceptionGroup
PyExc_BlockingIOError
PyExc_BrokenPipeError
PyExc_BufferError
PyExc_BytesWarning
PyExc_ChildProcessError
PyExc_ConnectionAbortedError
PyExc_ConnectionError
PyExc_ConnectionRefusedError
PyExc_ConnectionResetError
PyExc_DeprecationWarning
PyExc_EOFError
PyExc_EncodingWarning
PyExc_EnvironmentError
PyExc_Exception
PyExc_FileExistsError
PyExc_FileNotFoundError
PyExc_FloatingPointError
PyExc_FutureWarning
PyExc_GeneratorExit
PyExc_IOError
PyExc_ImportError
PyExc_ImportWarning
PyExc_IndentationError
PyExc_IndexError
PyExc_InterruptedError
PyExc_IsADirectoryError
PyExc_KeyError
PyExc_KeyboardInterrupt
PyExc_LookupError
PyExc_MemoryError
PyExc_ModuleNotFoundError
PyExc_NameError
PyExc_NotADirectoryError
PyExc_NotImplementedError
PyExc_OSError
PyExc_OverflowError
PyExc_PendingDeprecationWarning
PyExc_PermissionError
PyExc_ProcessLookupError
PyExc_RecursionError
PyExc_ReferenceError
PyExc_ResourceWarning
PyExc_RuntimeError
PyExc_RuntimeWarning
PyExc_StopAsyncIteration
PyExc_StopIteration
PyExc_SyntaxError
PyExc_SyntaxWarning
PyExc_SystemError
PyExc_SystemExit
PyExc_TabError
PyExc_TimeoutError
PyExc_TypeError
PyExc_UnboundLocalError
PyExc_UnicodeDecodeError
PyExc_UnicodeEncodeError
PyExc_UnicodeError
PyExc_UnicodeTranslateError
PyExc_UnicodeWarning
PyExc_UserWarning
PyExc_ValueError
PyExc_Warning
PyExc_WindowsError
PyExc_ZeroDivisionError
PyExceptionClass_Name
PyException_GetCause
PyException_GetContext
PyException_GetTraceback
PyException_SetCause
PyException_SetContext
PyException_SetTraceback
PyFile_FromFd
PyFile_GetLine
PyFile_NewStdPrinter
PyFile_OpenCode
PyFile_OpenCodeObject
PyFile_SetOpenCodeHook
PyFile_WriteObject
PyFile_WriteString
PyFilter_Type
PyFloat_AsDouble
PyFloat_FromDouble
PyFloat_FromString
PyFloat_GetInfo
PyFloat_GetMax
PyFloat_GetMin
PyFloat_Pack2
PyFloat_Pack4
PyFloat_Pack8
PyFloat_Type
PyFloat_Unpack2
PyFloat_Unpack4
PyFloat_Unpack8
PyFrame_FastToLocals
PyFrame_FastToLocalsWithError
PyFrame_GetBack
PyFrame_GetBuiltins
PyFrame_GetCode
PyFrame_GetGenerator
PyFrame_GetGlobals
PyFrame_GetLasti
PyFrame_GetLineNumber
PyFrame_GetLocals
PyFrame_LocalsToFast
PyFrame_New
PyFrame_Type
PyFrozenSet_New
PyFrozenSet_Type
PyFunction_GetAnnotations
PyFunction_GetClosure
PyFunction_GetCode
PyFunction_GetDefaults
PyFunction_GetGlobals
PyFunction_GetKwDefaults
PyFunction_GetModule
PyFunction_New
PyFunction_NewWithQualName
PyFunction_SetAnnotations
PyFunction_SetClosure
PyFunction_SetDefaults
PyFunction_SetKwDefaults
PyFunction_Type
PyGC_Collect
PyGC_Disable
PyGC_Enable
PyGC_IsEnabled
PyGILState_Check
PyGILState_Ensure
PyGILState_GetThisThreadState
PyGILState_Release
PyGen_New
PyGen_NewWithQualName
PyGen_Type
PyGetSetDescr_Type
PyHKEY
PyHKEY Object - A Python object, representing a win32 registry key.\n\nThis object wraps a Windows HKEY object, automatically closing it when\nthe object is destroyed.  To guarantee cleanup, you can call either\nthe Close() method on the PyHKEY, or the CloseKey() method.\n\nAll functions which accept a handle object also accept an integer --\nhowever, use of the handle object is encouraged.\n\nFunctions:\nClose() - Closes the underlying handle.\nDetach() - Returns the integer Win32 handle, detaching it from the object\n\nProperties:\nhandle - The integer Win32 handle.\n\nOperations:\n__bool__ - Handles with an open object return true, otherwise false.\n__int__ - Converting a handle to an integer returns the Win32 handle.\nrich comparison - Handle objects are compared using the handle value.
PyHash_GetFuncDef
PyImport_AddModule
PyImport_AddModuleObject
PyImport_AppendInittab
PyImport_ExecCodeModule
PyImport_ExecCodeModuleEx
PyImport_ExecCodeModuleObject
PyImport_ExecCodeModuleWithPathnames
PyImport_ExtendInittab
PyImport_FrozenModules
PyImport_GetImporter
PyImport_GetMagicNumber
PyImport_GetMagicTag
PyImport_GetModule
PyImport_GetModuleDict
PyImport_Import
PyImport_ImportFrozenModule
PyImport_ImportFrozenModuleObject
PyImport_ImportModule
PyImport_ImportModuleLevel
PyImport_ImportModuleLevelObject
PyImport_ImportModuleNoBlock
PyImport_Inittab
PyImport_ReloadModule
PyIndex_Check
PyInit
PyInitU
PyInstanceMethod_Function
PyInstanceMethod_New
PyInstanceMethod_Type
PyInterpreterState_Clear
PyInterpreterState_Delete
PyInterpreterState_Get
PyInterpreterState_GetDict
PyInterpreterState_GetID
PyInterpreterState_Head
PyInterpreterState_Main
PyInterpreterState_New
PyInterpreterState_Next
PyInterpreterState_ThreadHead
PyIter_Check
PyIter_Next
PyIter_Send
PyListIter_Type
PyListRevIter_Type
PyList_Append
PyList_AsTuple
PyList_GetItem
PyList_GetSlice
PyList_Insert
PyList_New
PyList_Reverse
PyList_SetItem
PyList_SetSlice
PyList_Size
PyList_Sort
PyList_Type
PyLongRangeIter_Type
PyLong_AsDouble
PyLong_AsLong
PyLong_AsLongAndOverflow
PyLong_AsLongLong
PyLong_AsLongLongAndOverflow
PyLong_AsSize_t
PyLong_AsSsize_t
PyLong_AsUnsignedLong
PyLong_AsUnsignedLongLong
PyLong_AsUnsignedLongLongMask
PyLong_AsUnsignedLongMask
PyLong_AsVoidPtr
PyLong_FromDouble
PyLong_FromLong
PyLong_FromLongLong
PyLong_FromSize_t
PyLong_FromSsize_t
PyLong_FromString
PyLong_FromUnicodeObject
PyLong_FromUnsignedLong
PyLong_FromUnsignedLongLong
PyLong_FromVoidPtr
PyLong_GetInfo
PyLong_Type
PyMap_Type
PyMapping_Check
PyMapping_GetItemString
PyMapping_HasKey
PyMapping_HasKeyString
PyMapping_Items
PyMapping_Keys
PyMapping_Length
PyMapping_SetItemString
PyMapping_Size
PyMapping_Values
PyMarshal_ReadLastObjectFromFile
PyMarshal_ReadLongFromFile
PyMarshal_ReadObjectFromFile
PyMarshal_ReadObjectFromString
PyMarshal_ReadShortFromFile
PyMarshal_WriteLongToFile
PyMarshal_WriteObjectToFile
PyMarshal_WriteObjectToString
PyMem_Calloc
PyMem_Free
PyMem_GetAllocator
PyMem_Malloc
PyMem_RawCalloc
PyMem_RawFree
PyMem_RawMalloc
PyMem_RawRealloc
PyMem_Realloc
PyMem_SetAllocator
PyMem_SetupDebugHooks
PyMemberDescr_Type
PyMember_GetOne
PyMember_SetOne
PyMemoryView_FromBuffer
PyMemoryView_FromBuffer(): info->buf must not be NULL
PyMemoryView_FromMemory
PyMemoryView_FromObject
PyMemoryView_GetContiguous
PyMemoryView_Type
PyMethodDescr_Type
PyMethod_Function
PyMethod_New
PyMethod_Self
PyMethod_Type
PyModuleDef_Init
PyModuleDef_Type
PyModule_AddFunctions
PyModule_AddIntConstant
PyModule_AddObject
PyModule_AddObjectRef
PyModule_AddObjectRef() first argument must be a module
PyModule_AddObjectRef() must be called with an exception raised if value is NULL
PyModule_AddStringConstant
PyModule_AddType
PyModule_Create2
PyModule_ExecDef
PyModule_FromDefAndSpec2
PyModule_GetDef
PyModule_GetDict
PyModule_GetFilename
PyModule_GetFilenameObject
PyModule_GetName
PyModule_GetNameObject
PyModule_GetState
PyModule_New
PyModule_NewObject
PyModule_SetDocString
PyModule_Type
PyNumber_Absolute
PyNumber_Add
PyNumber_And
PyNumber_AsSsize_t
PyNumber_Check
PyNumber_Divmod
PyNumber_Float
PyNumber_FloorDivide
PyNumber_InPlaceAdd
PyNumber_InPlaceAnd
PyNumber_InPlaceFloorDivide
PyNumber_InPlaceLshift
PyNumber_InPlaceMatrixMultiply
PyNumber_InPlaceMultiply
PyNumber_InPlaceOr
PyNumber_InPlacePower
PyNumber_InPlaceRemainder
PyNumber_InPlaceRshift
PyNumber_InPlaceSubtract
PyNumber_InPlaceTrueDivide
PyNumber_InPlaceXor
PyNumber_Index
PyNumber_Invert
PyNumber_Long
PyNumber_Lshift
PyNumber_MatrixMultiply
PyNumber_Multiply
PyNumber_Negative
PyNumber_Or
PyNumber_Positive
PyNumber_Power
PyNumber_Remainder
PyNumber_Rshift
PyNumber_Subtract
PyNumber_ToBase
PyNumber_ToBase: base must be 2, 8, 10 or 16
PyNumber_TrueDivide
PyNumber_Xor
PyODictItems_Type
PyODictIter_Type
PyODictKeys_Type
PyODictValues_Type
PyODict_DelItem
PyODict_New
PyODict_SetItem
PyODict_Type
PyOS_AfterFork
PyOS_FSPath
PyOS_InputHook
PyOS_InterruptOccurred
PyOS_Readline
PyOS_ReadlineFunctionPointer
PyOS_double_to_string
PyOS_getsig
PyOS_mystricmp
PyOS_mystrnicmp
PyOS_setsig
PyOS_snprintf
PyOS_string_to_double
PyOS_strtol
PyOS_strtoul
PyOS_vsnprintf
PyObject_ASCII
PyObject_AsCharBuffer
PyObject_AsFileDescriptor
PyObject_AsReadBuffer
PyObject_AsWriteBuffer
PyObject_Bytes
PyObject_Call
PyObject_CallFinalizer
PyObject_CallFinalizerFromDealloc
PyObject_CallFinalizerFromDealloc called on object with a non-zero refcount
PyObject_CallFunction
PyObject_CallFunctionObjArgs
PyObject_CallMethod
PyObject_CallMethodObjArgs
PyObject_CallNoArgs
PyObject_CallObject
PyObject_CallOneArg
PyObject_Calloc
PyObject_CheckBuffer
PyObject_CheckReadBuffer
PyObject_ClearWeakRefs
PyObject_CopyData
PyObject_DelItem
PyObject_DelItemString
PyObject_Dir
PyObject_Format
PyObject_Free
PyObject_GC_Del
PyObject_GC_IsFinalized
PyObject_GC_IsTracked
PyObject_GC_Track
PyObject_GC_UnTrack
PyObject_GET_WEAKREFS_LISTPTR
PyObject_GenericGetAttr
PyObject_GenericGetDict
PyObject_GenericSetAttr
PyObject_GenericSetDict
PyObject_GetAIter
PyObject_GetArenaAllocator
PyObject_GetAttr
PyObject_GetAttrString
PyObject_GetBuffer
PyObject_GetItem
PyObject_GetIter
PyObject_HasAttr
PyObject_HasAttrString
PyObject_Hash
PyObject_HashNotImplemented
PyObject_IS_GC
PyObject_Init
PyObject_InitVar
PyObject_IsInstance
PyObject_IsSubclass
PyObject_IsTrue
PyObject_Length
PyObject_LengthHint
PyObject_Malloc
PyObject_Not
PyObject_Print
PyObject_Realloc
PyObject_Repr
PyObject_RichCompare
PyObject_RichCompareBool
PyObject_SelfIter
PyObject_SetArenaAllocator
PyObject_SetAttr
PyObject_SetAttrString
PyObject_SetItem
PyObject_Size
PyObject_Str
PyObject_Type
PyObject_Vectorcall
PyObject_VectorcallDict
PyObject_VectorcallMethod
PyPickleBuffer_FromObject
PyPickleBuffer_GetBuffer
PyPickleBuffer_Release
PyPickleBuffer_Type
PyPreConfig_InitIsolatedConfig
PyPreConfig_InitPythonConfig
PyProperty_Type
PyRangeIter_Type
PyRange_Type
PyReversed_Type
PyRun_AnyFile
PyRun_AnyFileEx
PyRun_AnyFileExFlags
PyRun_AnyFileFlags
PyRun_File
PyRun_FileEx
PyRun_FileExFlags
PyRun_FileFlags
PyRun_InteractiveLoop
PyRun_InteractiveLoopFlags
PyRun_InteractiveOne
PyRun_InteractiveOneFlags
PyRun_InteractiveOneObject
PyRun_SimpleFile
PyRun_SimpleFileEx
PyRun_SimpleFileExFlags
PyRun_SimpleString
PyRun_SimpleStringFlags
PyRun_String
PyRun_StringFlags
PyRuntime
PySeqIter_New
PySeqIter_Type
PySequence_Check
PySequence_Concat
PySequence_Contains
PySequence_Count
PySequence_DelItem
PySequence_DelSlice
PySequence_Fast
PySequence_GetItem
PySequence_GetSlice
PySequence_In
PySequence_InPlaceConcat
PySequence_InPlaceRepeat
PySequence_Index
PySequence_Length
PySequence_List
PySequence_Repeat
PySequence_SetItem
PySequence_SetSlice
PySequence_Size
PySequence_Tuple
PySetIter_Type
PySet_Add
PySet_Clear
PySet_Contains
PySet_Discard
PySet_New
PySet_Pop
PySet_Size
PySet_Type
PySlice_AdjustIndices
PySlice_GetIndices
PySlice_GetIndicesEx
PySlice_New
PySlice_Type
PySlice_Unpack
PyState_AddModule
PyState_AddModule called on module with slots
PyState_FindModule
PyState_RemoveModule
PyState_RemoveModule called on module with slots
PyStaticMethod_New
PyStaticMethod_Type
PyStatus_Error
PyStatus_Exception
PyStatus_Exit
PyStatus_IsError
PyStatus_IsExit
PyStatus_NoMemory
PyStatus_Ok
PyStdPrinter_Type
PyStructSequence_GetItem
PyStructSequence_InitType
PyStructSequence_InitType2
PyStructSequence_New
PyStructSequence_NewType
PyStructSequence_SetItem
PyStructSequence_UnnamedField
PySuper_Type
PySymtable_Lookup
PySys_AddAuditHook
PySys_AddWarnOption
PySys_AddWarnOptionUnicode
PySys_AddXOption
PySys_Audit
PySys_FormatStderr
PySys_FormatStdout
PySys_GetObject
PySys_GetXOptions
PySys_HasWarnOptions
PySys_ResetWarnOptions
PySys_SetArgv
PySys_SetArgvEx
PySys_SetObject
PySys_SetPath
PySys_WriteStderr
PySys_WriteStdout
PyThreadState_Clear
PyThreadState_Clear: warning: thread still has a frame\n
PyThreadState_Clear: warning: thread still has a generator\n
PyThreadState_Delete
PyThreadState_DeleteCurrent
PyThreadState_EnterTracing
PyThreadState_Get
PyThreadState_GetDict
PyThreadState_GetFrame
PyThreadState_GetID
PyThreadState_GetInterpreter
PyThreadState_LeaveTracing
PyThreadState_New
PyThreadState_Next
PyThreadState_SetAsyncExc
PyThreadState_Swap
PyThread_GetInfo
PyThread_ReInitTLS
PyThread_acquire_lock
PyThread_acquire_lock_timed
PyThread_allocate_lock
PyThread_create_key
PyThread_delete_key
PyThread_delete_key_value
PyThread_exit_thread
PyThread_free_lock
PyThread_get_key_value
PyThread_get_stacksize
PyThread_get_thread_ident
PyThread_get_thread_native_id
PyThread_init_thread
PyThread_release_lock
PyThread_set_key_value
PyThread_set_stacksize
PyThread_start_new_thread
PyThread_tss_alloc
PyThread_tss_create
PyThread_tss_delete
PyThread_tss_free
PyThread_tss_get
PyThread_tss_is_created
PyThread_tss_set
PyToken_OneChar
PyToken_ThreeChars
PyToken_TwoChars
PyTraceBack_Here
PyTraceBack_Print
PyTraceBack_Type
PyTraceMalloc_Track
PyTraceMalloc_Untrack
PyTupleIter_Type
PyTuple_GetItem
PyTuple_GetSlice
PyTuple_New
PyTuple_Pack
PyTuple_SetItem
PyTuple_Size
PyTuple_Type
PyType_Check(((PyObject*)((type))))
PyType_ClearCache
PyType_FromModuleAndSpec
PyType_FromSpec
PyType_FromSpecWithBases
PyType_GenericAlloc
PyType_GenericNew
PyType_GetFlags
PyType_GetModule
PyType_GetModule: Type '%s' has no associated module
PyType_GetModule: Type '%s' is not a heap type
PyType_GetModuleByDef
PyType_GetModuleByDef: No superclass of '%s' has the given module
PyType_GetModuleState
PyType_GetName
PyType_GetQualName
PyType_GetSlot
PyType_HasFeature(Py_TYPE(((PyObject*)((op)))), (1UL << 28))
PyType_HasFeature(Py_TYPE(((PyObject*)((op)))), (1UL << 29))
PyType_IsSubtype
PyType_Modified
PyType_Ready
PyType_SUPPORTS_WEAKREFS
PyType_Type
PyUnicodeDecodeError_Create
PyUnicodeDecodeError_GetEncoding
PyUnicodeDecodeError_GetEnd
PyUnicodeDecodeError_GetObject
PyUnicodeDecodeError_GetReason
PyUnicodeDecodeError_GetStart
PyUnicodeDecodeError_SetEnd
PyUnicodeDecodeError_SetReason
PyUnicodeDecodeError_SetStart
PyUnicodeEncodeError_GetEncoding
PyUnicodeEncodeError_GetEnd
PyUnicodeEncodeError_GetObject
PyUnicodeEncodeError_GetReason
PyUnicodeEncodeError_GetStart
PyUnicodeEncodeError_SetEnd
PyUnicodeEncodeError_SetReason
PyUnicodeEncodeError_SetStart
PyUnicodeIter_Type
PyUnicodeTranslateError_GetEnd
PyUnicodeTranslateError_GetObject
PyUnicodeTranslateError_GetReason
PyUnicodeTranslateError_GetStart
PyUnicodeTranslateError_SetEnd
PyUnicodeTranslateError_SetReason
PyUnicodeTranslateError_SetStart
PyUnicode_Append
PyUnicode_AppendAndDel
PyUnicode_AsASCIIString
PyUnicode_AsCharmapString
PyUnicode_AsDecodedObject
PyUnicode_AsDecodedObject() is deprecated; use PyCodec_Decode() to decode from str
PyUnicode_AsDecodedUnicode
PyUnicode_AsDecodedUnicode() is deprecated; use PyCodec_Decode() to decode from str to str
PyUnicode_AsEncodedObject
PyUnicode_AsEncodedObject() is deprecated; use PyUnicode_AsEncodedString() to encode from str to bytes or PyCodec_Encode() for generic encoding
PyUnicode_AsEncodedString
PyUnicode_AsEncodedUnicode
PyUnicode_AsEncodedUnicode() is deprecated; use PyCodec_Encode() to encode from str to str
PyUnicode_AsLatin1String
PyUnicode_AsMBCSString
PyUnicode_AsRawUnicodeEscapeString
PyUnicode_AsUCS4
PyUnicode_AsUCS4Copy
PyUnicode_AsUTF16String
PyUnicode_AsUTF32String
PyUnicode_AsUTF8
PyUnicode_AsUTF8AndSize
PyUnicode_AsUTF8String
PyUnicode_AsUnicode
PyUnicode_AsUnicodeAndSize
PyUnicode_AsUnicodeEscapeString
PyUnicode_AsWideChar
PyUnicode_AsWideCharString
PyUnicode_BuildEncodingMap
PyUnicode_Compare
PyUnicode_CompareWithASCIIString
PyUnicode_Concat
PyUnicode_Contains
PyUnicode_CopyCharacters
PyUnicode_Count
PyUnicode_Decode
PyUnicode_DecodeASCII
PyUnicode_DecodeCharmap
PyUnicode_DecodeCodePageStateful
PyUnicode_DecodeFSDefault
PyUnicode_DecodeFSDefaultAndSize
PyUnicode_DecodeLatin1
PyUnicode_DecodeLocale
PyUnicode_DecodeLocaleAndSize
PyUnicode_DecodeMBCS
PyUnicode_DecodeMBCSStateful
PyUnicode_DecodeRawUnicodeEscape
PyUnicode_DecodeUTF16
PyUnicode_DecodeUTF16Stateful
PyUnicode_DecodeUTF32
PyUnicode_DecodeUTF32Stateful
PyUnicode_DecodeUTF7
PyUnicode_DecodeUTF7Stateful
PyUnicode_DecodeUTF8
PyUnicode_DecodeUTF8Stateful
PyUnicode_DecodeUnicodeEscape
PyUnicode_EncodeCodePage
PyUnicode_EncodeFSDefault
PyUnicode_EncodeLocale
PyUnicode_FSConverter
PyUnicode_FSDecoder
PyUnicode_Fill
PyUnicode_Find
PyUnicode_FindChar
PyUnicode_Format
PyUnicode_FromEncodedObject
PyUnicode_FromFormat
PyUnicode_FromFormatV
PyUnicode_FromFormatV() expects an ASCII-encoded format string, got a non-ASCII byte: 0x%02x
PyUnicode_FromKindAndData
PyUnicode_FromObject
PyUnicode_FromOrdinal
PyUnicode_FromString
PyUnicode_FromStringAndSize
PyUnicode_FromStringAndSize(NULL, size) is deprecated; use PyUnicode_New() instead
PyUnicode_FromUnicode
PyUnicode_FromUnicode(NULL, size) is deprecated; use PyUnicode_New() instead
PyUnicode_FromWideChar
PyUnicode_GetDefaultEncoding
PyUnicode_GetLength
PyUnicode_GetSize
PyUnicode_InternFromString
PyUnicode_InternImmortal
PyUnicode_InternImmortal() is deprecated; use PyUnicode_InternInPlace() instead
PyUnicode_InternInPlace
PyUnicode_IsIdentifier
PyUnicode_Join
PyUnicode_New
PyUnicode_Partition
PyUnicode_READ(((int)(kind)), ((const void*)(data)), (ascii->length)) == 0
PyUnicode_RPartition
PyUnicode_RSplit
PyUnicode_ReadChar
PyUnicode_Replace
PyUnicode_Resize
PyUnicode_RichCompare
PyUnicode_Split
PyUnicode_Splitlines
PyUnicode_Substring
PyUnicode_Tailmatch
PyUnicode_Translate
PyUnicode_Type
PyUnicode_WriteChar
PyVectorcall_Call
PyVectorcall_Function
PyWeakref_GetObject
PyWeakref_NewProxy
PyWeakref_NewRef
PyWideStringList_Append
PyWideStringList_Insert
PyWideStringList_Insert index must be >= 0
PyWrapperDescr_Type
PyWrapper_New
PyZip_Type
Py_AddPendingCall
Py_AtExit
Py_BuildValue
Py_BytesMain
Py_BytesWarningFlag
Py_CompileString
Py_CompileStringExFlags
Py_CompileStringFlags
Py_CompileStringObject
Py_DebugFlag
Py_DecRef
Py_DecodeLocale
Py_DontWriteBytecodeFlag
Py_EncodeLocale
Py_EndInterpreter
Py_EnterRecursiveCall
Py_Exit
Py_ExitStatusException
Py_ExitStatusException() must not be called on success
Py_FatalError
Py_FdIsInteractive
Py_FileSystemDefaultEncodeErrors
Py_FileSystemDefaultEncoding
Py_Finalize
Py_FinalizeEx
Py_FrozenFlag
Py_GETENV
Py_GenericAlias
Py_GenericAliasType
Py_GetArgcArgv
Py_GetBuildInfo
Py_GetCompiler
Py_GetCopyright
Py_GetExecPrefix
Py_GetPath
Py_GetPlatform
Py_GetPrefix
Py_GetProgramFullPath
Py_GetProgramName
Py_GetPythonHome
Py_GetRecursionLimit
Py_GetVersion
Py_HasFileSystemDefaultEncoding
Py_HashRandomizationFlag
Py_IS_TYPE(((PyObject*)((key))), &PyUnicode_Type)
Py_IgnoreEnvironmentFlag
Py_IncRef
Py_Initialize
Py_Initialize must be called first
Py_InitializeEx
Py_InitializeFromConfig
Py_InspectFlag
Py_InteractiveFlag
Py_Is
Py_IsFalse
Py_IsInitialized
Py_IsNone
Py_IsTrue
Py_IsolatedFlag
Py_LeaveRecursiveCall
Py_LegacyWindowsFSEncodingFlag
Py_LegacyWindowsStdioFlag
Py_Main
Py_MakePendingCalls
Py_NewInterpreter
Py_NewRef
Py_NoSiteFlag
Py_NoUserSiteDirectory
Py_OptimizeFlag
Py_PreInitialize
Py_PreInitializeFromArgs
Py_PreInitializeFromBytesArgs
Py_QuietFlag
Py_REFCNT(((PyObject*)((op)))) >= 1
Py_REFCNT(((PyObject*)((type)))) >= 1
Py_Repr
Py_ReprEnter
Py_ReprLeave
Py_RunMain
Py_SetPath
Py_SetProgramName
Py_SetPythonHome
Py_SetRecursionLimit
Py_SetStandardStreamEncoding
Py_UTF8Mode
Py_UnbufferedStdioFlag
Py_UniversalNewlineFgets
Py_VaBuildValue
Py_VerboseFlag
Py_Version
Py_XNewRef
Py_hexdigits
Py_tp_bases is not a tuple
Python
Python %s on %s\n
Python %s\n
Python C API version mismatch for module %.100s: This Python has API version %d, module %.100s has version %d.
Python import machinery not initialized
Python int too large for C unsigned short
Python int too large to convert to C int
Python int too large to convert to C long
Python int too large to convert to C size_t
Python int too large to convert to C ssize_t
Python int too large to convert to C unsigned long
Python memory allocator called without holding the GIL
Python path configuration:\n
Python runtime state: 
Q B `$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$`!a!b!c!d!e!f!g!h!i!j!I3
Q Q"Q#Q$Q%Q&Q'Q(Q)Q*Q+Q,Q-Q.Q/Q0Q1Q2Q3Q4Q5Q6Q7Q8Q9Q:Q;Q<Q=Q>QBQGQJQLQNQOQPQRQSQWQXQYQ[Q]Q^Q_Q`QaQcQdQfQgQiQjQoQrQzQ~Q
Q!Q2Q
Q!Q:Q7Q<Q;Q?Q@QRQLQTQbQ
Q!R!g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(
Q#Q'Q(Q,Q-Q/Q1Q3Q4Q5Q8Q9QBQJQOQSQUQWQXQ_QdQfQ~Q
Q%R$R)R*R(R
Q.YeY
Q/X-Y
Q01$
Q0R0S0T0
Q1R1
Q3R3
Q5QJQ2
Q5R2R3RFR1R
Q6R6
Q73B9enA~
Q:vu
Q;R8R7R:R0R.R6RAR
Q>jd
Q@O1:2,0
QBW*
QC)Hh
QEJh
QENHN_N^N
QHRH
QI6BI
QIaEp
QIjMxp)
QJjTa
QKmB\m
QM9s
QMek
QNRCRJRMRLRKRGR
QOX7a>aha9e
QP?K
QQQr
QTS!S
QTmi
QUOTE_ALL
QUOTE_MINIMAL
QUOTE_NONE
QUOTE_NONNUMERIC
QV3`
QVAWA@A
QVR\RTR[R]R*S
QVhEA
QY50]"a2
QY5I
QZB;GC`
Q[O&T+Ywe
Q[tz@
Q\rT}T
Q\vQ\fQ\rQ
Q^SiSnS
Q_Nu
Q`n1
QaMa
QaRZRRR^R_RURbR
QcRcw>
QdTdl
Qe:6
QfLp
Qg,R
QgX[
Qha\nR*X
Qi)s`PRi
QjRoR
Qjt_
QkOkq
QkRmRlRnR
Qk_ENk$JUk{0k
Qkkbal
QlRlX9Pl>
QmOm15n
QpSsLL7
QqRq
QrRtRuRiR
QtRt
QuRu
Qu`ukQb
QueryInfoKey
QueryInfoKey($module, key, /)\n--\n\nReturns information about a key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n\nThe result is a tuple of 3 items:\nAn integer that identifies the number of sub keys this key has.\nAn integer that identifies the number of values this key has.\nAn integer that identifies when the key was last modified (if available)\nas 100's of nanoseconds since Jan 1, 1600.
QueryPerformanceCounter
QueryPerformanceCounter()
QueryPerformanceFrequency
QueryPerformanceFrequency is too large
QueryReflectionKey
QueryReflectionKey($module, key, /)\n--\n\nReturns the reflection state for the specified key as a bool.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n\nWill generally raise NotImplementedError if executed on a 32bit OS.
QueryValue
QueryValue($module, key, sub_key, /)\n--\n\nRetrieves the unnamed value for a key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that holds the name of the subkey with which the value\n    is associated.  If this parameter is None or empty, the function\n    retrieves the value set by the SetValue() method for the key\n    identified by key.\n\nValues in the registry have name, type, and data components. This method\nretrieves the data for a key's first value that has a NULL name.\nBut since the underlying API call doesn't return the type, you'll\nprobably be happier using QueryValueEx; this function is just here for\ncompleteness.
QueryValueEx
QueryValueEx($module, key, name, /)\n--\n\nRetrieves the type and value of a specified sub-key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  name\n    A string indicating the value to query.\n\nBehaves mostly like QueryValue(), but also returns the type of the\nspecified value name associated with the given open registry key.\n\nThe return value is a tuple of the value and the type_id.
Quitter
Quitter.__call__
Quitter.__init__
Quitter.__repr__
Qupu
QvRvSvTv
Qxw22
QzRxR{R|R
QzRzI
Q{OO
R SGS
R!R"R#R%R&R'R*R,R/R1R2R4R5R<R>RDRERFRGRHRIRKRNRORRRSRURWRXR
R!xNxdxzx0y
R"R(R1R2R5R<RERIRURWRXRZR\R_R`RaRfRnRwRxRyR
R"Y!q_r
R#SsSuS
R$vAm
R%S%T%U%V%W%X%
R&S&T&U&V&W&X&''
R&S&T&U&V&W&X&u
R'R*R.R3R9RORDRKRLR^RTRjRtRiRsR
R)TtV
R-R3R?R@RLR^RaR\R
R1PJ<2
R2wD!J
R3#Y
R5S5X
R5k@<<(MaU
R7S7
R8"I
R8SiS
R9S9F
R:\Sg|p5rL
R:e$ts
R;SNS
R;SU=
R;TOU
R;TtV
R=S|S
R?Wqq
RARROW
RASAx
RBRACE
RBSBn
RDQSU-W
REALTIME_PRIORITY_CLASS
REGISTRY_KEY
REGISTRY_KEY_DEBUG
REG_BINARY
REG_CREATED_NEW_KEY
REG_DWORD
REG_DWORD_BIG_ENDIAN
REG_DWORD_LITTLE_ENDIAN
REG_EXPAND_SZ
REG_FULL_RESOURCE_DESCRIPTOR
REG_LEGAL_CHANGE_FILTER
REG_LEGAL_OPTION
REG_LINK
REG_MULTI_SZ
REG_NONE
REG_NOTIFY_CHANGE_ATTRIBUTES
REG_NOTIFY_CHANGE_LAST_SET
REG_NOTIFY_CHANGE_NAME
REG_NOTIFY_CHANGE_SECURITY
REG_NO_LAZY_FLUSH
REG_OPENED_EXISTING_KEY
REG_OPTION_BACKUP_RESTORE
REG_OPTION_CREATE_LINK
REG_OPTION_NON_VOLATILE
REG_OPTION_OPEN_LINK
REG_OPTION_RESERVED
REG_OPTION_VOLATILE
REG_QWORD
REG_QWORD_LITTLE_ENDIAN
REG_REFRESH_HIVE
REG_RESOURCE_LIST
REG_RESOURCE_REQUIREMENTS_LIST
REG_SZ
REG_WHOLE_HIVE_VOLATILE
RESE
REVERSE_IMPORT_MAPPING
REVERSE_NAME_MAPPING
REtL
RFt[
RGWGu`{
RHVBVLV5VAVJVIVFVXVZV@V3V=V,V>V8V*V:V
RIGHTSHIFT
RIGHTSHIFTEQUAL
RIRWRaR
RM8p:p9p;p<pa
RNW*XL]
RNW\rx\vw
RNjW
RPAR
RRSTSSSQSfSwSxSyS
RSQB
RSTUVWXYZ[\]^_`abcdefghijklmnop
RShift
RT#Y(}YWNw>z
RUP3<<Z
RUa(g
RVgb
RWOLxk
RWf8/
RXVy
RXdD^
RYKSwX)Zxu
RYVkVyViVdVxVjVhVeVqVoVlVbVvV
RYeu
R\nS\vS$S5S>SBS
R\nS\vS<S
R\rSWS{S
R\tR\vR\fR
R\tScSrS
R]Fe
R]tw\g%d
R^Y?UB@Gl
R_OK
Raise
Raise GeneratorExit inside coroutine.\n        
Raise GeneratorExit inside generator.\n        
Raise an exception in the asynchronous generator.\n        Return next yielded value or raise StopAsyncIteration.\n        
Raise an exception in the coroutine.\n        Return next yielded value or raise StopIteration.\n        
Raise an exception in the generator.\n        Return next yielded value or raise StopIteration.\n        
Raise with cause but no exception
Raise(expr? exc, expr? cause)
RaiseException
Ran out of input
Random
Random() -> create a random number generator with its own internal state.
Random() requires 0 or 1 argument
Raw stream returned invalid position %lld
RawIOBase
RccH
ReXeQe
Read and return up to n bytes, with at most one read() call\nto the underlying raw stream. A short result does not imply\nthat EOF is imminent.\n\nReturns an empty bytes object on EOF.\n
Read and return up to n bytes.\n\nIf the argument is omitted, None, or negative, reads and\nreturns all data until EOF.\n\nIf the argument is positive, and the underlying raw stream is\nnot 'interactive', multiple raw reads may be issued to satisfy\nthe byte count (unless EOF is reached first).  But for\ninteractive raw streams (as well as sockets and pipes), at most\none raw read will be issued, and a short result does not imply\nthat EOF is imminent.\n\nReturns an empty bytes object on EOF.\n\nReturns None if the underlying raw stream was open in non-blocking\nmode and no data is available at the moment.\n
Read at most n characters from stream.\n\nRead from underlying buffer until we have n characters or we hit EOF.\nIf n is negative or omitted, read until EOF.\n
Read beyond end of file.
Read until newline or EOF.\n\nReturns an empty string if EOF is hit immediately.\n
ReadConsoleW
ReadFile
ReadFile($module, /, handle, size, overlapped=False)\n--\n\n
Reader
Reader.__next__
Recalculate the set of abstract methods of an abstract class.\n\n    If a class has had one of its abstract methods implemented after the\n    class was created, the method will not be considered implemented until\n    this function is called. Alternatively, if a new abstract method has been\n    added to the class, it will only be considered an abstract method of the\n    class after this function is called.\n\n    This function should be called before any use is made of the class,\n    usually in class decorators that add methods to the subject class.\n\n    Returns cls, to allow usage as a class decorator.\n\n    If cls is not an instance of ABCMeta, does nothing.\n    
Recursion limit exceeded.
RecursionError
RecvChannel
ReferenceError
ReferenceType
Refusing to create an inheritance cycle
RegCloseKey
RegConnectRegistryW
RegCreateKeyExW
RegCreateKeyW
RegDeleteKeyExW
RegDeleteKeyW
RegDeleteValueW
RegDisableReflectionKey
RegEnableReflectionKey
RegEnumKeyExW
RegEnumValueW
RegFlushKey
RegLoadKeyW
RegOpenKeyExW
RegQueryInfoKeyW
RegQueryReflectionKey
RegQueryValueExW
RegQueryValueW
RegSaveKeyW
RegSetValueExW
RegSetValueW
Register a virtual subclass of an ABC.\n\n            Returns the subclass, to allow usage as a class decorator.\n            
Relative module names not supported
Release the import lock regardless of any raised exceptions.
ReleaseSemaphore
Reload the file data of the archive path.
Remove all elements from the deque.
Remove all elements from this set.
Remove all elements of another set from this set.
Remove an element from a set if it is a member.\n\nUnlike set.remove(), the discard() method does not raise\nan exception when an element is missing from the set.
Remove an element from a set; it must be a member.\n\nIf the element is not a member, raise a KeyError.
Remove an element.  Do not raise an exception if absent.
Remove an element. If not a member, raise a KeyError.
Remove and return an arbitrary set element.\nRaises KeyError if the set is empty.
Remove and return the leftmost element.
Remove and return the rightmost element.
RemoveDirectoryW
RemoveDllDirectory
RemoveVectoredExceptionHandler
Replacement for os.path.isabs.
Replacement for os.path.isdir.
Replacement for os.path.isfile.
Replacement for os.path.join().
Replacement for os.path.split().
Replacement index %zd out of range for positional args tuple
Report whether another set contains this set.
Report whether this set contains another set.
Represent a PEP 585 generic type\n\nE.g. for t = list[int], t.__origin__ is list and t.__args__ is (int,).
Represent a PEP 604 union type\n\nE.g. for int | str
Represents a namespace package's path.  It uses the module name\n    to find its parent module, and from there it looks up the parent's\n    __path__.  When this changes, the module's own path is recomputed,\n    using path_finder.  For top-level modules, the parent module's path\n    is sys.path.
Request that a generator exit.
Request to exit from the interpreter.
ResetEvent
Resolve a relative module name to an absolute one.
ResourceWarning
Result too large to be represented.
Return
Return False as built-in modules are never packages.
Return None as an extension module cannot create a code object.
Return None as built-in modules do not have code objects.
Return None as built-in modules do not have source code.
Return None as extension modules have no source code.
Return None as frozen modules do not have source code.
Return None as there is no source code.
Return None.
Return POSIX timestamp as float.
Return True if mode is from a FIFO (named pipe).
Return True if mode is from a block special device file.
Return True if mode is from a character special device file.
Return True if mode is from a directory.
Return True if mode is from a door.
Return True if mode is from a regular file.
Return True if mode is from a socket.
Return True if mode is from a symbolic link.
Return True if mode is from a whiteout.
Return True if mode is from an event port.
Return True if the extension module is a package.
Return True if the frozen module is a package.
Return True if the view and the given iterable have a null intersection.
Return True if two sets have a null intersection.
Return UTC time tuple, compatible with time.localtime().
Return a module spec based on a file location.\n\n    To indicate that the module is a package, set\n    submodule_search_locations to a list of directory paths.  An\n    empty list is sufficient, though its not otherwise useful to the\n    import system.\n\n    The loader must take a spec as its only __init__() arg.\n\n    
Return a module spec based on various loader methods.
Return a named tuple containing ISO year, week number, and weekday.
Return a new datetime representing UTC day and time.
Return a new module object, loaded by the spec's loader.\n\n    The module is not added to its parent.\n\n    If a module is already in sys.modules, that existing module gets\n    clobbered.\n\n    
Return a relative version of a path
Return a reverse iterator over the dict items.
Return a reverse iterator over the dict keys.
Return a reverse iterator over the dict values.
Return a reverse iterator.
Return a set containing all existing file system items from sys.path.
Return a shallow copy of a deque.
Return a shallow copy of a set.
Return an absolute path.
Return ctime() style string.
Return date object with same year, month and day.
Return date with new specified fields.
Return datetime with new specified fields.
Return fixed offset.
Return proleptic Gregorian ordinal.  January 1 of year 1 is day 1.
Return repr for the module.\n\n        The method is deprecated.  The import machinery does the job itself.\n\n        
Return self.tzinfo.dst(self).
Return self.tzinfo.tzname(self).
Return self.tzinfo.utcoffset(self).
Return state information for pickling
Return state information for pickling.
Return string in ISO 8601 format, YYYY-MM-DD.
Return string in ISO 8601 format, [HH[:MM[:SS[.mmm[uuu]]]]][+HH:MM].\n\nThe optional argument timespec specifies the number of additional terms\nof the time to include. Valid options are 'auto', 'hours', 'minutes',\n'seconds', 'milliseconds' and 'microseconds'.\n
Return the ResourceReader for a package in a zip file.\n\n        If 'fullname' is a package within the zip file, return the\n        'ResourceReader' object for the package.  Otherwise return None.\n        
Return the absolute version of a path as a fallback function in case\n    `nt._getfullpathname` is not available or raises OSError. See bpo-31047 for\n    more.\n\n    
Return the absolute version of a path.
Return the canonical path of the specified filename, eliminating any\nsymbolic links encountered in the path.
Return the code object compiled from source.\n\n        The 'data' argument can be any object type that compile() supports.\n        
Return the code object for the frozen module.
Return the data from path as raw bytes.
Return the day of the week represented by the date.\nMonday == 0 ... Sunday == 6
Return the day of the week represented by the date.\nMonday == 1 ... Sunday == 7
Return the difference of two or more sets as a new set.\n\n(i.e. all elements that are in this set but not the others.)
Return the file system path representation of the object.
Return the hash of *source_bytes* as used in hash-based pyc files.
Return the intersection of two sets as a new set.\n\n(i.e. all elements that are in both sets.)
Return the last access time of a file, reported by os.stat().
Return the last modification time of a file, reported by os.stat().
Return the metadata change time of a file, reported by os.stat().
Return the metadata for the path.
Return the next item from the asynchronous generator.\n        When exhausted, raise StopAsyncIteration.\n        
Return the next item from the generator.\n        When exhausted, raise StopIteration.\n        
Return the next item from the iterator. When exhausted, raise StopIteration
Return the next item or raise StopAsyncIteration when exhausted.
Return the path representation of a path-like object.\n\n    If str or bytes is passed in, it is returned unchanged. Otherwise the\n    os.PathLike interface is used to get the path representation. If the\n    path representation is not str or bytes, TypeError is raised. If the\n    provided path is not str, bytes, or os.PathLike, TypeError is raised.\n    
Return the path to the source file as found by the finder.
Return the popped value.  Raise KeyError if empty.
Return the portion of the file's mode that can be set by os.chmod().
Return the portion of the file's mode that can be set by\n    os.chmod().\n    
Return the portion of the file's mode that describes the file type.
Return the portion of the file's mode that describes the\n    file type.\n    
Return the repr to use for the module.
Return the repr() of an object, special-casing types (internal helper).\n\n    Copied from :mod:`typing` since collections.abc\n    shouldn't depend on that module.\n    
Return the size of a file, reported by os.stat().
Return the spec for the specified module.\n\n    First, sys.modules is checked to see if the module was already imported. If\n    so, then sys.modules[name].__spec__ is returned. If that happens to be\n    set to None, then ValueError is raised. If the module is not in\n    sys.modules, then sys.meta_path is searched for a suitable spec with the\n    value of 'path' given to the finders. None is returned if no spec could\n    be found.\n\n    Dotted names do not have their parent packages implicitly imported. You will\n    most likely need to explicitly import all parent packages in the proper\n    order for a submodule to get the correct spec.\n\n    
Return the spec for the specified module.\n\n    First, sys.modules is checked to see if the module was already imported. If\n    so, then sys.modules[name].__spec__ is returned. If that happens to be\n    set to None, then ValueError is raised. If the module is not in\n    sys.modules, then sys.meta_path is searched for a suitable spec with the\n    value of 'path' given to the finders. None is returned if no spec could\n    be found.\n\n    If the name is for submodule (contains a dot), the parent module is\n    automatically imported.\n\n    The name and package arguments work the same as importlib.import_module().\n    In other words, relative module names (with leading dots) work.\n\n    
Return the symmetric difference of two sets as a new set.\n\n(i.e. all elements that are in exactly one of the sets.)
Return the union of sets as a new set.\n\n(i.e. all elements that are in either set.)
Return time object with same time and tzinfo.
Return time object with same time but with tzinfo=None.
Return time tuple, compatible with time.localtime().
Return time with new specified fields.
Return true if the pathname refers to an existing directory.
Return(expr? value)
Returns a list containing all global site-packages directories.\n\n    For each directory present in ``prefixes`` (or the global ``PREFIXES``),\n    this function will find its `site-packages` subdirectory depending on the\n    system environment, and will return a list of full paths.\n    
Returns a list of all recognized module suffixes for this process
Returns a list of file-based module loaders.\n\n    Each item is a tuple (loader, suffixes).\n    
Returns a tuple of (parent-module-name, parent-path-attr-name)
Returns an independent iterator.
Returns self, the complex conjugate of any int.
Returns size in memory, in bytes.
Returns the `user base` directory path.\n\n    The `user base` directory can be used to store data. If the global\n    variable ``USER_BASE`` is not initialized yet, this function will also set\n    it.\n    
Returns the directory component of a pathname
Returns the final component of a pathname
Returns the sequence of directories that will be searched for the\n    named executable (similar to a shell) when launching a process.\n\n    *env* must be an environment variable dict or None.  If *env* is None,\n    os.environ will be used.\n    
Returns the user-specific site-packages directory path.\n\n    If the global variable ``USER_SITE`` is not initialized yet, this\n    function will also set it.\n    
Reversible
Reversible.__reversed__
Reversible.__subclasshook__
RgCWpv^h
RgWVP
RlNl
RmrA2SKm7H
RnPns
RoWoZo`oho
Rotate the deque n steps to the right (default n=1).  If n is negative, rotates left.
Rp$j
RqLRKO
Rq\q`qhq
RrTr
Rt>z6
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
Ruim
Run custom site specific code, if available.
Run custom user specific code, if available.
RunFailedError
RunFailedError: script raised an uncaught exception
Runs the designated module in the __main__ namespace\n\n       Note that the executed module will have full access to the\n       __main__ namespace. If this is not desirable, the run_module()\n       function should be used to run the module code in a fresh namespace.\n\n       At the very least, these variables in __main__ will be overwritten:\n           __name__\n           __file__\n           __cached__\n           __loader__\n           __package__\n    
RuntimeError
RuntimeWarning
RwR}R
RwSw
RwbVr
RxS\
R|U$X
R}AQ
S!S SpSqS\tT
S"S$S%S'S(S)S+S,S-S/S0S1S2S3S4S5S6S7S8S<S=S@SBSDSFSKSLSMSPSTSXSYS[S]SeShSjSlSmSrSvSyS{S|S}S~S
S"\%\,\4\Lbjb
S#S/S1S3S8S@SFSES
S#Tm5r5
S$SrS
S%S'S(S)S+S,S-S0S2S5S<S=S>SBSLSKSYS[SaScSeSlSmSrSyS~S
S%`qbrl
S*SQS
S*Y `Ka
S-WNY
S.V;V9V2V?V4V)VSVNVWVtV6V/V0V
S.__sizeof__() -> size of S in memory, in bytes
S.append(value) -- append value to the end of the sequence
S.clear() -> None -- remove all items from S
S.count(sub[, start[, end]]) -> int\n\nReturn the number of non-overlapping occurrences of substring sub in\nstring S[start:end].  Optional arguments start and end are\ninterpreted as in slice notation.
S.count(value) -> integer -- return number of occurrences of value
S.endswith(suffix[, start[, end]]) -> bool\n\nReturn True if S ends with the specified suffix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nsuffix can also be a tuple of strings to try.
S.extend(iterable) -- extend sequence by appending elements from the iterable
S.find(sub[, start[, end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.
S.format(*args, **kwargs) -> str\n\nReturn a formatted version of S, using substitutions from args and kwargs.\nThe substitutions are identified by braces ('{' and '}').
S.format_map(mapping) -> str\n\nReturn a formatted version of S, using substitutions from mapping.\nThe substitutions are identified by braces ('{' and '}').
S.index(sub[, start[, end]]) -> int\n\nReturn the lowest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.
S.index(value, [start, [stop]]) -> integer -- return first index of value.\n           Raises ValueError if the value is not present.\n\n           Supporting start and stop arguments is optional, but\n           recommended.\n        
S.indices(len) -> (start, stop, stride)\n\nAssuming a sequence of length len, calculate the start and stop\nindices, and the stride length of the extended slice described by\nS. Out of bounds indices are clipped in a manner consistent with the\nhandling of normal slices.
S.insert(index, value) -- insert value before index
S.pack(v1, v2, ...) -> bytes\n\nReturn a bytes object containing values v1, v2, ... packed according\nto the format string S.format.  See help(struct) for more on format\nstrings.
S.pack_into(buffer, offset, v1, v2, ...)\n\nPack the values v1, v2, ... according to the format string S.format\nand write the packed bytes into the writable buffer buf starting at\noffset.  Note that the offset is a required argument.  See\nhelp(struct) for more on format strings.
S.pop([index]) -> item -- remove and return item at index (default last).\n           Raise IndexError if list is empty or index is out of range.\n        
S.remove(value) -- remove first occurrence of value.\n           Raise ValueError if the value is not present.\n        
S.reverse() -- reverse *IN PLACE*
S.rfind(sub[, start[, end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.
S.rindex(sub[, start[, end]]) -> int\n\nReturn the highest index in S where substring sub is found,\nsuch that sub is contained within S[start:end].  Optional\narguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.
S.startswith(prefix[, start[, end]]) -> bool\n\nReturn True if S starts with the specified prefix, False otherwise.\nWith optional start, test S beginning at that position.\nWith optional end, stop comparing S at that position.\nprefix can also be a tuple of strings to try.
S/VQX
S03$
S0T7T*TTTET
S3T3U3
S4nKQ;R
S5zf-
S6r&
S8T8
S8Tj
S8u\rS
S8xBg=h
S9SHSGSES^S
S9T4V6Z1\
S<I9f;i56J"eT
S?S@S>S
SALT_SIZE
SAS\S
SB"5
SCOPE_MASK
SCOPE_OFF
SD[D`
SEC_COMMIT
SEC_IMAGE
SEC_LARGE_PAGES
SEC_NOCACHE
SEC_RESERVE
SEC_WRITECOMBINE
SEEK_CUR
SEEK_END
SEEK_SET
SEMI
SEM_FAILCRITICALERRORS
SEM_NOALIGNMENTFAULTEXCEPT
SEM_NOGPFAULTERRORBOX
SEM_NOOPENFILEERRORBOX
SEO7Tb
SFDn6=`<[GqCV
SFOT
SFT1XIY
SF_APPEND
SF_ARCHIVED
SF_IMMUTABLE
SF_NOUNLINK
SF_SNAPSHOT
SFd6\
SGN-Y;rnS
SHA1Type
SHA224Type
SHA256Type
SHA384Type
SI*a)a
SIGABRT
SIGBREAK
SIGFPE
SIGILL
SIGINT
SIGSEGV
SIGTERM
SIG_DFL
SIG_IGN
SIlIN
SJTqT
SLASH
SLASHEQUAL
SLS"W#W
SLciO
SO!;setstate(): illegal state argument
SOFTWARE\Python\PythonCore\z\v\PythonPath
SOFT_KEYWORD
SOURCE_SUFFIXES
SPQPu
SQ"Mf
SS&`8+_c\t=K
ST(He
STACK_GLOBAL requires str
STAR
STAREQUAL
STARTF_USESHOWWINDOW
STARTF_USESTDHANDLES
STDLIB_LANDMARKS
STD_ERROR_HANDLE
STD_INPUT_HANDLE
STD_OUTPUT_HANDLE
STILL_ACTIVE
STRING
STRING_END_ARCHIVE
ST_ATIME
ST_CTIME
ST_DEV
ST_GID
ST_INO
ST_MODE
ST_MTIME
ST_NLINK
ST_SIZE
ST_UID
SUT$T(Tn5CTbTfTlT
SUus.w
SW]fH
SW_HIDE
SWsh
SW|I[=1
SYNCHRONIZE
SYXY~
SZTZUZ;P%Ry0VZ+GWZw=!CXZYZ}C7LZZ[Z>@WF\Z]Z4G^Z_ZH9@
SZVZ9NTZ
S[I[E
S\nS\vS\fS
S\tN\vN
S\tS\nS\vS\fS
S^:Qi3|
S^eEu1U!P
S_!cZQa
S_ENFMT
S_IEXEC
S_IFBLK
S_IFCHR
S_IFDIR
S_IFDOOR
S_IFIFO
S_IFLNK
S_IFMT
S_IFMT_: file type bits\nS_IFDIR: directory\nS_IFCHR: character device\nS_IFBLK: block device\nS_IFREG: regular file\nS_IFIFO: fifo (named pipe)\nS_IFLNK: symbolic link\nS_IFSOCK: socket file\nS_IFDOOR: door\nS_IFPORT: event port\nS_IFWHT: whiteout\n\nS_ISUID: set UID bit\nS_ISGID: set GID bit\nS_ENFMT: file locking enforcement\nS_ISVTX: sticky bit\nS_IREAD: Unix V7 synonym for S_IRUSR\nS_IWRITE: Unix V7 synonym for S_IWUSR\nS_IEXEC: Unix V7 synonym for S_IXUSR\nS_IRWXU: mask for owner permissions\nS_IRUSR: read by owner\nS_IWUSR: write by owner\nS_IXUSR: execute by owner\nS_IRWXG: mask for group permissions\nS_IRGRP: read by group\nS_IWGRP: write by group\nS_IXGRP: execute by group\nS_IRWXO: mask for others (not in group) permissions\nS_IROTH: read by others\nS_IWOTH: write by others\nS_IXOTH: execute by others\n\nUF_NODUMP: do not dump file\nUF_IMMUTABLE: file may not be changed\nUF_APPEND: file may only be appended to\nUF_OPAQUE: directory is opaque when viewed through a union stack\nUF_NOUNLINK: file may not be renamed or deleted\nUF_COMPRESSED: OS X: file is hfs-compressed\nUF_HIDDEN: OS X: file should not be displayed\nSF_ARCHIVED: file may be archived\nSF_IMMUTABLE: file may not be changed\nSF_APPEND: file may only be appended to\nSF_NOUNLINK: file may not be renamed or deleted\nSF_SNAPSHOT: file is a snapshot file\n\nST_MODE\nST_INO\nST_DEV\nST_NLINK\nST_UID\nST_GID\nST_SIZE\nST_ATIME\nST_MTIME\nST_CTIME\n\nFILE_ATTRIBUTE_*: Windows file attribute constants\n                   (only present on Windows)\n
S_IFPORT
S_IFREG
S_IFSOCK
S_IFWHT
S_IMODE
S_IREAD
S_IRGRP
S_IROTH
S_IRUSR
S_IRWXG
S_IRWXO
S_IRWXU
S_ISBLK
S_ISBLK(mode) -> bool\n\nReturn True if mode is from a block special device file.
S_ISCHR
S_ISCHR(mode) -> bool\n\nReturn True if mode is from a character special device file.
S_ISDIR
S_ISDIR(mode) -> bool\n\nReturn True if mode is from a directory.
S_ISDOOR
S_ISDOOR(mode) -> bool\n\nReturn True if mode is from a door.
S_ISFIFO
S_ISFIFO(mode) -> bool\n\nReturn True if mode is from a FIFO (named pipe).
S_ISGID
S_ISLNK
S_ISLNK(mode) -> bool\n\nReturn True if mode is from a symbolic link.
S_ISPORT
S_ISPORT(mode) -> bool\n\nReturn True if mode is from an event port.
S_ISREG
S_ISREG(mode) -> bool\n\nReturn True if mode is from a regular file.
S_ISSOCK
S_ISSOCK(mode) -> bool\n\nReturn True if mode is from a socket.
S_ISUID
S_ISVTX
S_ISWHT
S_ISWHT(mode) -> bool\n\nReturn True if mode is from a whiteout.
S_IWGRP
S_IWOTH
S_IWRITE
S_IWUSR
S_IXGRP
S_IXOTH
S_IXUSR
SaRa6G
Samples should be same size
SaveKey
SaveKey($module, key, file_name, /)\n--\n\nSaves the specified key, and all its subkeys to the specified file.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  file_name\n    The name of the file to save registry data to.  This file cannot\n    already exist. If this filename includes an extension, it cannot be\n    used on file allocation table (FAT) file systems by the LoadKey(),\n    ReplaceKey() or RestoreKey() methods.\n\nIf key represents a key on a remote computer, the path described by\nfile_name is relative to the remote computer.\n\nThe caller of this method must possess the SeBackupPrivilege\nsecurity privilege.  This function passes NULL for security_attributes\nto the API.
SbH6yW
Scf}
SdvHq
SeRestorePrivilege
SeTeP
Search sys.path_hooks for a finder for 'path'.
Second argument to a division or modulo operation was zero.
See PEP 585
See https://www.python.org/psf/license/
Segmentation fault
Send a value into the asynchronous generator.\n        Return next yielded value or raise StopAsyncIteration.\n        
Send a value into the coroutine.\n        Return next yielded value or raise StopIteration.\n        
Send a value into the generator.\n        Return next yielded value or raise StopIteration.\n        
SendChannel
Separate the underlying buffer from the TextIOBase and return it.\n\nAfter the underlying buffer has been detached, the TextIO is in an\nunusable state.\n
Sequence
Sequence index out of range.
Sequence.__contains__
Sequence.__getitem__
Sequence.__iter__
Sequence.__reversed__
Sequence.count
Sequence.count.<locals>.<genexpr>
Sequence.index
Serial release number
Service Pack major version number
Service Pack minor version number
Set 'copyright' and 'credits' in builtins
Set __file__, if able.
Set __loader__ on the returned module.\n\n    This function is deprecated.\n\n    
Set __package__ on the returned module.\n\n    This function is deprecated.\n\n    
Set all module __file__ and __cached__ attributes to an absolute path
Set changed size during iteration
Set field "elts" changed size during iteration
Set field "elts" must be a list, not a %.200s
Set state information for unpickling.
Set(expr* elts)
Set.__and__
Set.__and__.<locals>.<genexpr>
Set.__or__.<locals>.<genexpr>
Set.__rsub__
Set.__rsub__.<locals>.<genexpr>
Set.__sub__
Set.__sub__.<locals>.<genexpr>
Set.__xor__
Set._from_iterable
Set._hash
Set.isdisjoint
SetComp
SetComp field "generators" changed size during iteration
SetComp field "generators" must be a list, not a %.200s
SetComp(expr elt, comprehension* generators)
SetCurrentDirectoryW
SetEndOfFile
SetEnvironmentVariableW
SetErrorMode
SetErrorMode($module, mode, /)\n--\n\nWrapper around SetErrorMode.
SetEvent
SetFileAttributesW
SetFilePointerEx
SetFileTime
SetHandleInformation
SetLastError
SetNamedPipeHandleState
SetNamedPipeHandleState($module, named_pipe, mode,\n                        max_collection_count, collect_data_timeout, /)\n--\n\n
SetUnhandledExceptionFilter
SetValue
SetValue($module, key, sub_key, type, value, /)\n--\n\nAssociates a value with a specified key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  sub_key\n    A string that names the subkey with which the value is associated.\n  type\n    An integer that specifies the type of the data.  Currently this must\n    be REG_SZ, meaning only strings are supported.\n  value\n    A string that specifies the new value.\n\nIf the key specified by the sub_key parameter does not exist, the\nSetValue function creates it.\n\nValue lengths are limited by available memory. Long values (more than\n2048 bytes) should be stored as files with the filenames stored in\nthe configuration registry to help the registry perform efficiently.\n\nThe key identified by the key parameter must have been opened with\nKEY_SET_VALUE access.
SetValueEx
SetValueEx($module, key, value_name, reserved, type, value, /)\n--\n\nStores data in the value field of an open registry key.\n\n  key\n    An already open key, or any one of the predefined HKEY_* constants.\n  value_name\n    A string containing the name of the value to set, or None.\n  reserved\n    Can be anything - zero is always passed to the API.\n  type\n    An integer that specifies the type of the data, one of:\n    REG_BINARY -- Binary data in any form.\n    REG_DWORD -- A 32-bit number.\n    REG_DWORD_LITTLE_ENDIAN -- A 32-bit number in little-endian format. Equivalent to REG_DWORD\n    REG_DWORD_BIG_ENDIAN -- A 32-bit number in big-endian format.\n    REG_EXPAND_SZ -- A null-terminated string that contains unexpanded\n                     references to environment variables (for example,\n                     %PATH%).\n    REG_LINK -- A Unicode symbolic link.\n    REG_MULTI_SZ -- A sequence of null-terminated strings, terminated\n                    by two null characters.  Note that Python handles\n                    this termination automatically.\n    REG_NONE -- No defined value type.\n    REG_QWORD -- A 64-bit number.\n    REG_QWORD_LITTLE_ENDIAN -- A 64-bit number in little-endian format. Equivalent to REG_QWORD.\n    REG_RESOURCE_LIST -- A device-driver resource list.\n    REG_SZ -- A null-terminated string.\n  value\n    A string that specifies the new value.\n\nThis method can also set additional value and type information for the\nspecified key.  The key identified by the key parameter must have been\nopened with KEY_SET_VALUE access.\n\nTo open the key, use the CreateKeyEx() or OpenKeyEx() methods.\n\nValue lengths are limited by available memory. Long values (more than\n2048 bytes) should be stored as files with the filenames stored in\nthe configuration registry to help the registry perform efficiently.
SetWaitableTimerEx
Setup importlib by importing needed built-in modules and injecting them\n    into the global namespace.\n\n    As sys is needed for sys.modules access and _imp is needed to load built-in\n    modules, those two modules must be explicitly passed in.\n\n    
ShellExecuteW
Sign not allowed in string format specifier
Sign not allowed with integer format specifier 'c'
Signal %i ignored due to race condition
Signal the end from iterator.__anext__().
Signal the end from iterator.__next__().
Simple substitute for functools.update_wrapper.
SimuT
Single '{' encountered in format string
Single '}' encountered in format string
Size should be 1, 2, 3 or 4
Sized
Sized.__len__
Sized.__subclasshook__
SjPj^68
Sj_t
SjeJ
SlTl
Sleep
Slice
Slice(expr? lower, expr? upper, expr? step)
Small block threshold = %d, in %u size classes.\n
SmoX
Software\Python\PythonCore\{sys_version}\Modules\{fullname}
Software\Python\PythonCore\{sys_version}\Modules\{fullname}\Debug
SourceFileLoader
SourceFileLoader._cache_bytecode
SourceFileLoader.path_stats
SourceFileLoader.set_data
SourceLoader
SourceLoader._cache_bytecode
SourceLoader.get_code
SourceLoader.get_source
SourceLoader.path_mtime
SourceLoader.path_stats
SourceLoader.set_data
SourceLoader.source_to_code
SourcelessFileLoader
SourcelessFileLoader.get_code
SourcelessFileLoader.get_source
SowDE
Sp4r
SpV`VnVsVfVcVmVrV^VwV
Space not allowed in string format specifier
Split a pathname into drive and path. On Posix, drive is always\n    empty.
Split a pathname into drive/UNC sharepoint and relative path specifiers.\n    Returns a 2-tuple (drive_or_unc, path); either part may be empty.\n\n    If you assign\n        result = splitdrive(p)\n    It is always true that:\n        result[0] + result[1] == p\n\n    If the path contained a drive letter, drive_or_unc will contain everything\n    up to and including the colon.  e.g. splitdrive("c:/dir") returns ("c:", "/dir")\n\n    If the path contained a UNC path, the drive_or_unc will contain the host name\n    and share up to but not including the fourth directory separator character.\n    e.g. splitdrive("//host/computer/dir") returns ("//host/computer", "/dir")\n\n    Paths cannot contain both a drive letter and a UNC path.\n\n    
Split a pathname.  Returns tuple "(head, tail)" where "tail" is\n    everything after the final slash.  Either part may be empty.
Split a pathname.\n\n    Return tuple (head, tail) where tail is everything after the final slash.\n    Either part may be empty.
Split the extension from a pathname.\n\n    Extension is everything from the last dot to the end, ignoring\n    leading dots.  Returns "(root, ext)"; ext may be empty.
Sqgu
SsTs
SsTuT
Stack (most recent call first):\n
Starred
Starred(expr value, expr_context ctx)
Stat the path.\n\n    Made a separate function to make it easier to override in experiments\n    (e.g. cache stat results).\n\n    
Step for islice() must be a positive integer or None.
Stop argument for islice() must be None or an integer: 0 <= x <= sys.maxsize.
StopAsyncIteration
StopIteration
Store
StreamReader
StreamReader.__enter__
StreamReader.__exit__
StreamReader.__getattr__
StreamReader.__init__
StreamReader.__iter__
StreamReader.__next__
StreamReader.__reduce_ex__
StreamReader.decode
StreamReader.read
StreamReader.readline
StreamReader.readlines
StreamReader.reset
StreamReader.seek
StreamReaderWriter
StreamReaderWriter.__enter__
StreamReaderWriter.__exit__
StreamReaderWriter.__getattr__
StreamReaderWriter.__init__
StreamReaderWriter.__iter__
StreamReaderWriter.__next__
StreamReaderWriter.__reduce_ex__
StreamReaderWriter.read
StreamReaderWriter.readline
StreamReaderWriter.readlines
StreamReaderWriter.reset
StreamReaderWriter.seek
StreamReaderWriter.write
StreamReaderWriter.writelines
StreamRecoder
StreamRecoder.__enter__
StreamRecoder.__exit__
StreamRecoder.__getattr__
StreamRecoder.__init__
StreamRecoder.__iter__
StreamRecoder.__next__
StreamRecoder.__reduce_ex__
StreamRecoder.read
StreamRecoder.readline
StreamRecoder.readlines
StreamRecoder.reset
StreamRecoder.seek
StreamRecoder.write
StreamRecoder.writelines
StreamWriter
StreamWriter.__enter__
StreamWriter.__exit__
StreamWriter.__getattr__
StreamWriter.__init__
StreamWriter.__reduce_ex__
StreamWriter.reset
StreamWriter.seek
StreamWriter.write
StreamWriter.writelines
String giving the file mode
StringIO
StringIO(initial_value='', newline='\n')\n--\n\nText I/O implementation using an in-memory buffer.\n\nThe initial_value argument sets the value of object.  The newline\nargument is like the one of TextIOWrapper's constructor.
Strings must be encoded before hashing
Strings should be even-sized
Struct
Struct() argument 1 must be a str or bytes object, not %.200s
Struct(fmt) --> compiled struct object\n\n
SuUvU<UMUPU4U*UQUbU6U5U0URUEU
Subscript
Subscript(expr value, expr slice, expr_context ctx)
Support for POSIX locales.
Sw+E
SwRw
SxTx
SyXXaYa
SyntaxError
SyntaxWarning
System product type
SystemError
SystemExit
Sy~U
S|bO
S}mk\V$e
T Rn
T!T'T(T*T/T1T4T5TCTDTGTMTOT^TbTdTfTgTiTkTmTnTtT
T"T$T%T*T0T3T6T7T:T=T?TATBTDTETGTITLTMTNTOTQTZT]T^T_T`TaTcTeTgTiTjTkTlTmTnToTpTtTyTzT~T
T"U#U
T'TMT
T)TJT9T;T8T.T5T6T T<T@T1T+T
T0*X(X1
T0W@W
T0yES
T3w8
T4U4
T5XWX
T5d4dt
T6M@_
T8=H
T8h;
T9U9V9G
T9U@UcULU.U\UEUVUWU8U3U]U
T<i\j\R
T=J;'pr
T=T@T,T-T<T.T6T)T
T>T&TNT'TFTCT3THTBT
T>d(f
T@5d0A6dPN
TAcT<@m0dG^
TBhF
TCE1#<
TDUDh
TEUEVE
TFU1U
TFUFp
TFt`
TG-U
TGUGD
THQY^A
THS4
TI0K
TI?M
TILDE
TIMEOUT_MAX
TJK47
TK>`xcij2|
TKTRTSTTTVTCT!TWTYT#T2T
TKU`
TL/K
TLHdI
TLJ`L`,
TM7O
TMP_MAX
TN+g
TNE^
TNS>s
TP\Y\q[c\f\
TS(>313
TSMJ
TS|M
TTQMn
TUO}
TUVWXY
TWyH4
TX-d
TXTNl
TYPE_CLASS
TYPE_COMMENT
TYPE_FUNCTION
TYPE_IGNORE
TYPE_MODULE
TYPY
TYhVJY
T[GW
T\fT\nT
T]S]U]%2JC
T]bAF7B
T_TqTwTpT
T`S`T
TabError
TbThT
Tb}R
TcTgTdT
TdUd
Te\Ng
Te`eL
Temporarily replace a module in sys.modules with an empty namespace
TerminateProcess
TerminateProcess($module, handle, exit_code, /)\n--\n\nTerminate the specified process and all of its threads.
Terminated
Test whether a path exists.  Returns False for broken symbolic links
Test whether a path exists.  Returns True for broken symbolic links
Test whether a path is a mount point
Test whether a path is a mount point (a drive root, the root of a\n    share, or a mounted volume)
Test whether a path is a regular file
Test whether a path is a symbolic link
Test whether a path is a symbolic link.\n    This will always return false for Windows prior to 6.0.\n    
Test whether a path is absolute
Test whether the path is the specified mode type.
Test whether two open file objects reference the same file
Test whether two pathnames reference the same actual file or directory\n\n    This is determined by the device number and i-node number and\n    raises an exception if an os.stat() call on either pathname fails.\n    
Test whether two stat buffers reference the same file
TestFrozenUtf8_1
TestFrozenUtf8_2
TestFrozenUtf8_4
TextIOBase
TextIOWrapper
TextIOWrapper() argument 'errors' must be str or None, not %.50s
TextIOWrapper(buffer, encoding=None, errors=None, newline=None,\n              line_buffering=False, write_through=False)\n--\n\nCharacter and line based layer over a BufferedIOBase object, buffer.\n\nencoding gives the name of the encoding that the stream will be\ndecoded or encoded with. It defaults to locale.getencoding().\n\nerrors determines the strictness of encoding and decoding (see\nhelp(codecs.Codec) or the documentation for codecs.register) and\ndefaults to "strict".\n\nnewline controls how line endings are handled. It can be None, '',\n'\n', '\r', and '\r\n'.  It works as follows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\n', '\r', or '\r\n', and\n  these are translated into '\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\n', no translation takes place. If newline is any\n  of the other legal values, any '\n' characters written are translated\n  to the given string.\n\nIf line_buffering is True, a call to flush is implied when a call to\nwrite contains a newline character.
TfSf
Tg^J\4r
Th%C_
The '@' operator is
The above exception was the direct cause of the following exception:\n
The abstract base class for all I/O classes.\n\nThis class provides dummy implementations for many methods that\nderived classes can override selectively; the default implementations\nrepresent a file that cannot be read, written or seeked.\n\nEven though IOBase does not declare read, readinto, or write because\ntheir signatures will vary, implementations and clients should\nconsider those methods part of the interface. Also, implementations\nmay raise UnsupportedOperation when operations they do not support are\ncalled.\n\nThe basic type used for binary data read from or written to a file is\nbytes. Other bytes-like objects are accepted as method arguments too.\nIn some cases (such as readinto), a writable object is required. Text\nI/O classes work with str data.\n\nNote that calling any method (except additional calls to close(),\nwhich are ignored) on a closed stream should raise a ValueError.\n\nIOBase (and its subclasses) support the iterator protocol, meaning\nthat an IOBase object can be iterated over yielding the lines in a\nstream.\n\nIOBase also supports the :keyword:`with` statement. In this example,\nfp is closed after the suite of the with statement is complete:\n\nwith open('spam.txt', 'r') as fp:\n    fp.write('Spam and eggs!')\n
The amount of space in bytes that the array would use in\n a contiguous representation.
The delegation of int() to __trunc__ is deprecated.
The error setting of the decoder or encoder.\n\nSubclasses should override.\n
The fill character must be a unicode character, not %.100s
The fill character must be exactly one character long
The following implementation-specific options are available:\n\n-X faulthandler: enable faulthandler\n\n-X showrefcount: output the total reference count and number of used\n    memory blocks when the program finishes or after each statement in the\n    interactive interpreter. This only works on debug builds\n\n-X tracemalloc: start tracing Python memory allocations using the\n    tracemalloc module. By default, only the most recent frame is stored in a\n    traceback of a trace. Use -X tracemalloc=NFRAME to start tracing with a\n    traceback limit of NFRAME frames\n\n-X importtime: show how long each import takes. It shows module name,\n    cumulative time (including nested imports) and self time (excluding\n    nested imports). Note that its output may be broken in multi-threaded\n    application. Typical usage is python3 -X importtime -c 'import asyncio'\n\n-X dev: enable CPython's "development mode", introducing additional runtime\n    checks which are too expensive to be enabled by default. Effect of the\n    developer mode:\n       * Add default warning filter, as -W default\n       * Install debug hooks on memory allocators: see the PyMem_SetupDebugHooks()\n         C function\n       * Enable the faulthandler module to dump the Python traceback on a crash\n       * Enable asyncio debug mode\n       * Set the dev_mode attribute of sys.flags to True\n       * io.IOBase destructor logs close() exceptions\n\n-X utf8: enable UTF-8 mode for operating system interfaces, overriding the default\n    locale-aware mode. -X utf8=0 explicitly disables UTF-8 mode (even when it would\n    otherwise activate automatically)\n\n-X pycache_prefix=PATH: enable writing .pyc files to a parallel tree rooted at the\n    given directory instead of to the code tree\n\n-X warn_default_encoding: enable opt-in EncodingWarning for 'encoding=None'\n\n-X no_debug_ranges: disable the inclusion of the tables mapping extra location \n   information (end line, start column offset and end column offset) to every \n   instruction in code objects. This is useful when smaller code objects and pyc \n   files are desired as well as suppressing the extra visual location indicators \n   when the interpreter displays tracebacks.\n\n-X frozen_modules=[on|off]: whether or not frozen modules should be used.\n   The default is "on" (or "off" if you are running a local build).\n\n-X int_max_str_digits=number: limit the size of int<->str conversions.\n    This helps avoid denial of service attacks when parsing untrusted data.\n    The default is sys.int_info.default_max_str_digits.  0 disables.
The functions in this module allow compression and decompression using the\nzlib library, which is based on GNU zip.\n\nadler32(string[, start]) -- Compute an Adler-32 checksum.\ncompress(data[, level]) -- Compress data, with compression level 0-9 or -1.\ncompressobj([level[, ...]]) -- Return a compressor object.\ncrc32(string[, start]) -- Compute a CRC-32 checksum.\ndecompress(string,[wbits],[bufsize]) -- Decompresses a compressed string.\ndecompressobj([wbits[, zdict]]) -- Return a decompressor object.\n\n'wbits' is window buffer size and container format.\nCompressor objects support compress() and flush() methods; decompressor\nobjects support decompress() and flush().
The implementation of ModuleType.__repr__().
The import system now takes care of this automatically; this decorator is slated for removal in Python 3.12
The index into the string at which the RE engine started looking for a match.
The index into the string beyond which the RE engine will not go.
The integer index of the last matched capturing group.
The io module provides the Python interfaces to stream handling. The\nbuiltin open function is defined in this module.\n\nAt the top of the I/O hierarchy is the abstract base class IOBase. It\ndefines the basic interface to a stream. Note, however, that there is no\nseparation between reading and writing to streams; implementations are\nallowed to raise an OSError if they do not support a given operation.\n\nExtending IOBase is RawIOBase which deals simply with the reading and\nwriting of raw bytes to a stream. FileIO subclasses RawIOBase to provide\nan interface to OS files.\n\nBufferedIOBase deals with buffering on a raw byte stream (RawIOBase). Its\nsubclasses, BufferedWriter, BufferedReader, and BufferedRWPair buffer\nstreams that are readable, writable, and both respectively.\nBufferedRandom provides a buffered interface to random access\nstreams. BytesIO is a simple stream of in-memory bytes.\n\nAnother IOBase subclass, TextIOBase, deals with the encoding and decoding\nof streams into text. TextIOWrapper, which extends it, is a buffered text\ninterface to a buffered raw stream (`BufferedIOBase`). Finally, StringIO\nis an in-memory stream for text.\n\nArgument names are not part of the specification, and only the arguments\nof open() are intended to be used as keyword arguments.\n\ndata:\n\nDEFAULT_BUFFER_SIZE\n\n   An int containing the default buffer size used by the module's buffered\n   I/O classes. open() uses the file's blksize (as obtained by os.stat) if\n   possible.\n
The machinery of importlib: finders, loaders, hooks, etc.
The name of the last matched capturing group.
The name of the module's parent.
The number of capturing groups in the pattern.
The object is not a PyHKEY object
The pattern string from which the RE object was compiled.
The regex matching flags.
The regular expression object.
The result of date.isocalendar() or datetime.isocalendar()\n\nThis object may be accessed either as a tuple of\n  ((year, week, weekday)\nor via the object attributes as named in the above tuple.
The result of re.match() and re.search().\nMatch objects always have a boolean value of True.
The size in bytes of each element of the memoryview.
The span of capturing group is wrong, please report a bug for the re module.
The specification for a module, used for loading.\n\n    A module's spec is the source for information about the module.  For\n    data associated with the module, including source, use the spec's\n    loader.\n\n    `name` is the absolute name of the module.  `loader` is the loader\n    to use when loading the module.  `parent` is the name of the\n    package the module is in.  The parent is derived from the name.\n\n    `is_package` determines if the module is considered a package or\n    not.  On modules this is reflected by the `__path__` attribute.\n\n    `origin` is the specific location used by the loader from which to\n    load the module, if that information is available.  When filename is\n    set, origin will match.\n\n    `has_location` indicates that a spec's "origin" reflects a location.\n    When this is True, `__file__` attribute of the module is set.\n\n    `cached` is the location of the cached bytecode file, if any.  It\n    corresponds to the `__cached__` attribute.\n\n    `submodule_search_locations` is the sequence of path entries to\n    search when importing submodules.  If set, is_package should be\n    True--and False otherwise.\n\n    Packages are simply modules that (may) have submodules.  If a spec\n    has a non-None value in `submodule_search_locations`, the import\n    system will consider modules loaded from the spec as packages.\n\n    Only finders (see importlib.abc.MetaPathFinder and\n    importlib.abc.PathEntryFinder) should modify ModuleSpec instances.\n\n    
The string passed to match() or search().
The time value as returned by gmtime(), localtime(), and strptime(), and\n accepted by asctime(), mktime() and strftime().  May be considered as a\n sequence of 9 integers.\n\n Note that several fields' values are not the same as those defined by\n the C language standard for struct tm.  For example, the value of the\n field tm_year is the actual year, not year - 1900.  See individual\n fields' descriptions for details.
The underlying object of the memoryview.
This is slow (creates N new iterators!) but effective.
This method is called when a class is subclassed.\n\nThe default implementation does nothing. It may be\noverridden to extend subclasses.\n
This method is deprecated.
This module contains functions that can read and write Python values in\na binary format. The format is specific to Python, but independent of\nmachine architecture issues.\n\nNot all Python object types are supported; in general, only objects\nwhose value is independent from a particular invocation of Python can be\nwritten and read by this module. The following types are supported:\nNone, integers, floating point numbers, strings, bytes, bytearrays,\ntuples, lists, sets, dictionaries, and code objects, where it\nshould be understood that tuples, lists and dictionaries are only\nsupported as long as the values contained therein are themselves\nsupported; and recursive lists and dictionaries should not be written\n(they will cause infinite loops).\n\nVariables:\n\nversion -- indicates the format that the module uses. Version 0 is the\n    historical format, version 1 shares interned strings and version 2\n    uses a binary format for floating point numbers.\n    Version 3 shares common object references (New in version 3.4).\n\nFunctions:\n\ndump() -- write value to a file\nload() -- read value from a file\ndumps() -- marshal value as a bytes object\nloads() -- read value from a bytes-like object
This module defines an object type which can efficiently represent\nan array of basic values: characters, integers, floating point\nnumbers.  Arrays are sequence types and behave very much like lists,\nexcept that the type of objects stored in them is constrained.\n
This module makes available standard errno system symbols.\n\nThe value of each symbol is the corresponding integer value,\ne.g., on most systems, errno.ENOENT equals the integer 2.\n\nThe dictionary errno.errorcode maps numeric codes to symbol names,\ne.g., errno.errorcode[2] could be the string 'ENOENT'.\n\nSymbols that are not relevant to the underlying system are not defined.\n\nTo map error codes to error messages, use the function os.strerror(),\ne.g. os.strerror(2) could return 'No such file or directory'.
This module provides access to mathematical functions for complex\nnumbers.
This module provides access to operating system functionality that is\nstandardized by the C Standard and the POSIX standard (a thinly\ndisguised Unix interface).  Refer to the library manual and\ncorresponding Unix manual entries for more information on calls.
This module provides access to some objects used or maintained by the\ninterpreter and to functions that interact strongly with the interpreter.\n\nDynamic objects:\n\nargv -- command line arguments; argv[0] is the script pathname if known\npath -- module search path; path[0] is the script directory, else ''\nmodules -- dictionary of loaded modules\n\ndisplayhook -- called to show results in an interactive session\nexcepthook -- called to handle any uncaught exception other than SystemExit\n  To customize printing in an interactive session or to install a custom\n  top-level exception handler, assign other functions to replace these.\n\nstdin -- standard input file object; used by input()\nstdout -- standard output file object; used by print()\nstderr -- standard error object; used for error messages\n  By assigning other file objects (or objects that behave like files)\n  to these, it is possible to redirect all of the interpreter's I/O.\n\nlast_type -- type of last uncaught exception\nlast_value -- value of last uncaught exception\nlast_traceback -- traceback of last uncaught exception\n  These three are only available in an interactive session after a\n  traceback has been printed.\n\nStatic objects:\n\nbuiltin_module_names -- tuple of module names built into this interpreter\ncopyright -- copyright notice pertaining to this interpreter\nexec_prefix -- prefix used to find the machine-specific Python library\nexecutable -- absolute path of the executable binary of the Python interpreter\nfloat_info -- a named tuple with information about the float implementation.\nfloat_repr_style -- string indicating the style of repr() output for floats\nhash_info -- a named tuple with information about the hash algorithm.\nhexversion -- version information encoded as a single integer\nimplementation -- Python implementation information.\nint_info -- a named tuple with information about the int implementation.\nmaxsize -- the largest supported length of containers.\nmaxunicode -- the value of the largest Unicode code point\nplatform -- platform identifier\nprefix -- prefix used to find the Python library\nthread_info -- a named tuple with information about the thread implementation.\nversion -- the version of this interpreter as a string\nversion_info -- version information as a named tuple\ndllhandle -- [Windows only] integer handle of the Python DLL\nwinver -- [Windows only] version number of the Python DLL\n_enablelegacywindowsfsencoding -- [Windows only]\n__stdin__ -- the original stdin; don't touch!\n__stdout__ -- the original stdout; don't touch!\n__stderr__ -- the original stderr; don't touch!\n__displayhook__ -- the original displayhook; don't touch!\n__excepthook__ -- the original excepthook; don't touch!\n\nFunctions:\n\ndisplayhook() -- print an object to the screen, and save it in builtins._\nexcepthook() -- print an exception and its traceback to sys.stderr\nexception() -- return the current thread's active exception\nexc_info() -- return information about the current thread's active exception\nexit() -- exit the interpreter by raising SystemExit\ngetdlopenflags() -- returns flags to be used for dlopen() calls\ngetprofile() -- get the global profiling function\ngetrefcount() -- return the reference count for an object (plus one :-)\ngetrecursionlimit() -- return the max recursion depth for the interpreter\ngetsizeof() -- return the size of an object in bytes\ngettrace() -- get the global debug tracing function\nsetdlopenflags() -- set the flags to be used for dlopen() calls\nsetprofile() -- set the global profiling function\nsetrecursionlimit() -- set the max recursion depth for the interpreter\nsettrace() -- set the global debug tracing function\n
This module provides access to the Windows registry API.\n\nFunctions:\n\nCloseKey() - Closes a registry key.\nConnectRegistry() - Establishes a connection to a predefined registry handle\n                    on another computer.\nCreateKey() - Creates the specified key, or opens it if it already exists.\nDeleteKey() - Deletes the specified key.\nDeleteValue() - Removes a named value from the specified registry key.\nEnumKey() - Enumerates subkeys of the specified open registry key.\nEnumValue() - Enumerates values of the specified open registry key.\nExpandEnvironmentStrings() - Expand the env strings in a REG_EXPAND_SZ\n                             string.\nFlushKey() - Writes all the attributes of the specified key to the registry.\nLoadKey() - Creates a subkey under HKEY_USER or HKEY_LOCAL_MACHINE and\n            stores registration information from a specified file into that\n            subkey.\nOpenKey() - Opens the specified key.\nOpenKeyEx() - Alias of OpenKey().\nQueryValue() - Retrieves the value associated with the unnamed value for a\n               specified key in the registry.\nQueryValueEx() - Retrieves the type and data for a specified value name\n                 associated with an open registry key.\nQueryInfoKey() - Returns information about the specified key.\nSaveKey() - Saves the specified key, and all its subkeys a file.\nSetValue() - Associates a value with a specified key.\nSetValueEx() - Stores data in the value field of an open registry key.\n\nSpecial objects:\n\nHKEYType -- type object for HKEY objects\nerror -- exception raised for Win32 errors\n\nInteger constants:\nMany constants are defined - see the documentation for each function\nto see what constants are used, and where.
This module provides access to the garbage collector for reference cycles.\n\nenable() -- Enable automatic garbage collection.\ndisable() -- Disable automatic garbage collection.\nisenabled() -- Returns true if automatic collection is enabled.\ncollect() -- Do a full collection right now.\nget_count() -- Return the current collection counts.\nget_stats() -- Return list of dictionaries containing per-generation stats.\nset_debug() -- Set debugging flags.\nget_debug() -- Get debugging flags.\nset_threshold() -- Set the collection thresholds.\nget_threshold() -- Return the current the collection thresholds.\nget_objects() -- Return a list of all objects tracked by the collector.\nis_tracked() -- Returns true if a given object is tracked.\nis_finalized() -- Returns true if a given object has been already finalized.\nget_referrers() -- Return the list of objects that refer to an object.\nget_referents() -- Return the list of objects that an object refers to.\nfreeze() -- Freeze all tracked objects and ignore them for future collections.\nunfreeze() -- Unfreeze all objects in the permanent generation.\nget_freeze_count() -- Return the number of objects in the permanent generation.\n
This module provides access to the mathematical functions\ndefined by the C standard.
This module provides mechanisms to use signal handlers in Python.\n\nFunctions:\n\nalarm() -- cause SIGALRM after a specified time [Unix only]\nsetitimer() -- cause a signal (described below) after a specified\n               float time and the timer may restart then [Unix only]\ngetitimer() -- get current value of timer [Unix only]\nsignal() -- set the action for a given signal\ngetsignal() -- get the signal action for a given signal\npause() -- wait until a signal arrives [Unix only]\ndefault_int_handler() -- default SIGINT handler\n\nsignal constants:\nSIG_DFL -- used to refer to the system default handler\nSIG_IGN -- used to ignore the signal\nNSIG -- number of defined signals\nSIGINT, SIGTERM, etc. -- signal numbers\n\nitimer constants:\nITIMER_REAL -- decrements in real time, and delivers SIGALRM upon\n               expiration\nITIMER_VIRTUAL -- decrements only when the process is executing,\n               and delivers SIGVTALRM upon expiration\nITIMER_PROF -- decrements both when the process is executing and\n               when the system is executing on behalf of the process.\n               Coupled with ITIMER_VIRTUAL, this timer is usually\n               used to profile the time spent by the application\n               in user and kernel space. SIGPROF is delivered upon\n               expiration.\n\n\n*** IMPORTANT NOTICE ***\nA signal handler function is called with two arguments:\nthe first is the signal number, the second is the interrupted stack frame.
This module provides primitive operations to manage Python interpreters.\nThe 'interpreters' module provides a more convenient interface.
This module provides primitive operations to write multi-threaded programs.\nThe 'threading' module provides a more convenient interface.
This module provides various functions to manipulate time values.\n\nThere are two standard representations of time.  One is the number\nof seconds since the Epoch, in UTC (a.k.a. GMT).  It may be an integer\nor a floating point number (to represent fractions of seconds).\nThe Epoch is system-defined; on Unix, it is generally January 1st, 1970.\nThe actual value can be retrieved by calling gmtime(0).\n\nThe other representation is a tuple of 9 integers giving local time.\nThe tuple items are:\n  year (including century, e.g. 1998)\n  month (1-12)\n  day (1-31)\n  hours (0-23)\n  minutes (0-59)\n  seconds (0-59)\n  weekday (0-6, Monday is 0)\n  Julian day (day in the year, 1-366)\n  DST (Daylight Savings Time) flag (-1, 0 or 1)\nIf the DST flag is 0, the time is given in the regular time zone;\nif it is 1, the time is given in the DST time zone;\nif it is -1, mktime() should guess based on the date and time.\n
This object has no __dict__
This object has no __weakref__
This unifies bytes and bytearray.\n\n    XXX Should add all their methods.\n    
Thpgwckw
Thread
Thread 0x
Thread-local data
Thread-local dummy
Timeout (%lu:%02lu:%02lu)!\n
Timeout (%lu:%02lu:%02lu.%06u)!\n
Timeout expired.
TimeoutError
TizaLd
Tj`da
TkTtT
TkTzT~TeTlTtTfT
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
TnSnz
ToJop
ToTaT`T
Token.MISSING
Tokens can only be created by ContextVars
Too %s arguments for %R; actual %zd, expected %zd
Too many decimal digits in format string
Too much data for base64 line
Tools that operate on functions.
Total
Total seconds in the duration.
ToxDUoVod8w0WoXoYoF
TpW39
TpdKT{fujc
TqTvT
TrUA\f
Traceback (most recent call last):\n
TracebackType
TracebackType(tb_next, tb_frame, tb_lasti, tb_lineno)\n--\n\nCreate a new traceback object.
Trailing \ in string
Trailing garbage
Trigger the load and then perform the deletion.
Trigger the load of the module and return the attribute.
True
True if filenames must be checked case-insensitively and ignore environment flags are not set.
True if filenames must be checked case-insensitively.
True if the file descriptor will be closed by close().
True if the file is closed
True if the file is closed.
Truncate file to size bytes.\n\nFile pointer is left unchanged.  Size defaults to the current IO\nposition as reported by tell().  Returns the new size.
Truncating an Integral returns itself.
Truncation of value to char
Truncation of value to short
Truncation of value to unsigned char
Truncation of value to unsigned short
Try `python -h' for more information.\n
Try field "body" changed size during iteration
Try field "body" must be a list, not a %.200s
Try field "finalbody" changed size during iteration
Try field "finalbody" must be a list, not a %.200s
Try field "handlers" changed size during iteration
Try field "handlers" must be a list, not a %.200s
Try field "orelse" changed size during iteration
Try field "orelse" must be a list, not a %.200s
Try has neither except handlers nor finalbody
Try has orelse but no except handlers
Try to find a loader for the specified module by delegating to\n    self.find_loader().\n\n    This method is deprecated in favor of finder.find_spec().\n\n    
Try to find a loader for the specified module, or the namespace\n        package portions. Returns (loader, list-of-portions).\n\n        This method is deprecated.  Use find_spec() instead.\n\n        
Try to find a spec for 'fullname' on sys.path or 'path'.\n\n        The search is based on sys.path_hooks and sys.path_importer_cache.\n        
Try to find a spec for the specified module.\n\n        Returns the matching spec, or None if not found.\n        
Try(stmt* body, excepthandler* handlers, stmt* orelse, stmt* finalbody)
TryStar
TryStar field "body" changed size during iteration
TryStar field "body" must be a list, not a %.200s
TryStar field "finalbody" changed size during iteration
TryStar field "finalbody" must be a list, not a %.200s
TryStar field "handlers" changed size during iteration
TryStar field "handlers" must be a list, not a %.200s
TryStar field "orelse" changed size during iteration
TryStar field "orelse" must be a list, not a %.200s
TryStar has neither except handlers nor finalbody
TryStar has orelse but no except handlers
TryStar(stmt* body, excepthandler* handlers, stmt* orelse, stmt* finalbody)
TsP5UsVsWs
TsSs{7
TtUt
TtUt+>@
Tu;S]
Tuple
Tuple field "elts" changed size during iteration
Tuple field "elts" must be a list, not a %.200s
Tuple or struct_time argument required
Tuple(expr* elts, expr_context ctx)
TvTfT
TwTqTdT
TwVwu
Tx&x
TyJw
Typ+UWf[mmTSkt\r]U
Type "help", "copyright", "credits" or "license" for more information.
Type %.100s doesn't define __format__
Type %.100s doesn't define __sizeof__
Type %s() to see the full %s text
Type does not define the tp_name field.
Type help() for interactive help, or help(object) for help about object.
Type spec does not define the name field.
Type variables in the GenericAlias.
Type variables in the types.UnionType.
TypeError
TypeError: print_exception(): Exception expected for value, 
TypeIgnore
TypeIgnore(int lineno, string tag)
T{)vSb'YFTyk
T{TwT
T|TNN
U!U%U&U
U#U(U
U#n-gg
U'U*UgU
U*U+U2U5U6U;U<U=UAUGUIUJUMUPUQUXUZU[U^U`UaUdUfU
U+U5UPU^U
U0[q_ f
U1JN34rHGcPOHcd<IcJcFC"UVDk9ENKcvCLc]
U2V2
U4HozL
U6V6
U8o6qhQ
U9Mja03
U:__format__
U:strftime
U;array item must be unicode character
U<gP
UAYG}ECEj
UAdd
UB^W
UCS2
UCS4
UF0>zN
UFTnTRk
UF_APPEND
UF_COMPRESSED
UF_HIDDEN
UF_IMMUTABLE
UF_NODUMP
UF_NOUNLINK
UF_OPAQUE
UG?[lE^ZbZ$
UH)5I><VgT
UIUmUAUUU?UPU<U7UVUuUvUwU3U0U\U
UJTD~9
UK|6
UNVPV
UNfV
UO!O!:type.__new__
UO:BaseExceptionGroup.__new__
UOnnU
UO}X
UQWQ
UR\RlRwR
USERNAME
USERPROFILE
USER_BASE
USER_BASE: 
USER_SITE
USER_SITE: 
USub
UTC%c%02d:%02d
UTC%c%02d:%02d:%02d
UTC%c%02d:%02d:%02d.%06d
UTF-8
UTM_
UTWq
UTXXXWY
UTbT
UThXjp
UTvP
UU:strptime
UUUU
UUVUZ;'9?
UUlGb.
UUnnU
UW+5
UW6ThyAW
UYTYWYj
UYWeW
UYZYXY
U[pG?K;4?
U\fW)X7X
U\nU\vU\fU\rU
U\rW/X*X4X$X0X1X!X
U\tU<UAU
U\tU\fU\rU
Ua>?N
UbOm
UbyCV
UcPu
Uc\S
Ud|NmJZd
Ue~4VeK
Uf_0q
Ufv-
Ug?u"O/M#O
UgR9VgLH
UhV;W
UhnM
UiXiW
UkU:LCMapStringEx
Ulf4
UmSmWmM
Un;decoding error handler must return (str, int) tuple
Un;translating error handler must return (str, int) tuple
Unable to allocate lock
Unable to allocate output buffer.
Unable to decode the command from the command line:\n
UnaryOp
UnaryOp(unaryop op, expr operand)
UnboundLocalError
Underscores in numeric literals are only supported in Python 3.6 and greater
UnhandledExceptionFilter
Unicode decoding error.
Unicode encoding error.
Unicode related error.
Unicode translation error.
UnicodeDecodeError
UnicodeEncodeError
UnicodeError
UnicodeTranslateError
UnicodeWarning
Unknown PYTHONMALLOC allocator
Unknown conversion specifier %c
Unknown conversion specifier \x%x
Unknown format code '%c' for object of type '%.200s'
Unknown format code '\x%x' for object of type '%.200s'
Unknown option: -%c\n
Unknown timespec value
UnmapViewOfFile
UnmapViewOfFile($module, address, /)\n--\n\n
Unmatched left paren in format string
Unmatched paren in format
Unmatched right paren in format string
UnnU
Unpickler
Unpickler(file, *, fix_imports=True, encoding='ASCII', errors='strict',\n          buffers=())\n--\n\nThis takes a binary file for reading a pickle data stream.\n\nThe protocol version of the pickle is detected automatically, so no\nprotocol argument is needed.  Bytes past the pickled object's\nrepresentation are ignored.\n\nThe argument *file* must have two methods, a read() method that takes\nan integer argument, and a readline() method that requires no\narguments.  Both methods should return bytes.  Thus *file* can be a\nbinary file object opened for reading, an io.BytesIO object, or any\nother custom object that meets this interface.\n\nOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\nwhich are used to control compatibility support for pickle stream\ngenerated by Python 2.  If *fix_imports* is True, pickle will try to\nmap the old Python 2 names to the new names used in Python 3.  The\n*encoding* and *errors* tell pickle how to decode 8-bit string\ninstances pickled by Python 2; these default to 'ASCII' and 'strict',\nrespectively.  The *encoding* can be 'bytes' to read these 8-bit\nstring instances as bytes objects.
Unpickler.__init__() was not called by %s.__init__()
UnpicklingError
UnraisableHookArgs
UnraisableHookArgs\n\nType used to pass arguments to sys.unraisablehook.
Unrecognized action (%R) in warnings.filters:\n %R
Unrecognized conversion character %d
Unspecified run-time error.
UnsupportedOperation
Unterminated string starting at
UoSoVoXo
Update a set with the intersection of itself and another.
Update a set with the symmetric difference of itself and another.
Update a set with the union of itself and others.
UpdateProcThreadAttribute
Ur\M}
Urb3
UreuoY
Use 
Use default semantics for module creation.
UserWarning
Utility code for constructing importers, etc.
UuX/c"dIfKfmh
UvbU
UwUEV
Uy:gUkwUgo>a
UzzvP
U{U~U
U|O:strftime
V V!V"V%V&V(V)V*V+V.V/V0V3V5V7V8V:V<V=V>V@VAVBVCVDVEVFVGVHVIVJVKVOVPVQVRVSVUVVVZV[V]V^V_V`VaV
V$V#V
V'V-VXV9VWV,VMVbVYV\VLVTV
V,V0V3V5V7V9V;V<V=V?V@VAVCVDVFVIVKVMVOVTV^V`VaVbVcVfViVmVoVqVrVuV
V.W*W4W<Y
V.r@rtI
V0V7V
V1(3
V2PWKJ{KLU68IO
V3(pf
V3R9
V3W0W(W-W,W/W)W
V3W3X3
V43U
V4\o
V6>4p
V7B3
V7PGWXW
V:O<Or
V;'mtPu
V;VIVvVfV8
V<Bm0537
V=FN7
V@zw
VADh
VAWA
VAWEWLWIWKWRW
VAsHs
VBAR
VBAREQUAL
VCRO!;
VCRUNTIME140.dll
VD=e&
VDWDXDi
VERSION.dll
VERSION_MAJOR
VERSION_MINOR
VESkj
VEV:N5
VFWFXFq
VHWHD
VH[G[
VI:\6\S
VJP^E2zT@
VJWQW@WMW
VMch83|
VMv|
VN[m\-e
VO;ObOIOSOdO>OgORO_OAOXO-O3O?OaO
VPATH
VQTQUQSQc:WQjLdNy
VRcJ%Wg
VSUS)
VSf20<QS+K47
VTS2>l
VTVS
VUMW
VVLa
VWV;:K;K
VWf4oKZfCXNW"PJ
VY.If
VYTlKj
VY[Y)
V\nV\rV
V\nV\vV\rV
V\tV\rV
V][He
V^_^/021k
VaTa@<O
Validate a hash-based pyc by checking the real source hash against the one in\n    the pyc header.\n\n    *data* is the contents of the pyc file. (Only the first 16 bytes are\n    required.)\n\n    *source_hash* is the importlib.util.source_hash() of the source file.\n\n    *name* is the name of the module being imported. It is used for logging.\n\n    *exc_details* is a dictionary passed to ImportError if it raised for\n    improved debugging.\n\n    An ImportError is raised if the bytecode is stale.\n\n    
Validate a pyc against the source last-modified time.\n\n    *data* is the contents of the pyc file. (Only the first 16 bytes are\n    required.)\n\n    *source_mtime* is the last modified timestamp of the source file.\n\n    *source_size* is None or the size of the source file in bytes.\n\n    *name* is the name of the module being imported. It is used for logging.\n\n    *exc_details* is a dictionary passed to ImportError if it raised for\n    improved debugging.\n\n    An ImportError is raised if the bytecode is stale.\n\n    
Value after * must be an iterable, not %.200s
Value wrapped by a key function.
ValueError
ValuesView
ValuesView.__contains__
ValuesView.__iter__
Variable annotation syntax is
Variable annotations syntax is
Vbrs
Vb|J5?9SUb
Vcu6
VdR@
VdVqVkV{V|V
VePeWe
VerQueryValueW
Verify arguments are "sane".
VfWH_
VirtualAlloc
VirtualFree
VirtualQuery
VirtualQuerySize
VirtualQuerySize($module, address, /)\n--\n\n
Vj0q
VjWjXF
Vl#BB
VluN
Vn2jvPYlKZ(O
VnWn!
VoWrWmWkWqWpWvW
VpY<[i\j\
VqQqo
VqYK[L[
VuEY4d
VvWv
Vwi<
Vwj^4K
V|dC>
W W!W"W$W%W&W'W+W1W2W4W5W6W7W8W<W=W?WAWCWDWEWFWHWIWKWRWSWTWUWVWXWYWbWcWeWgWlWnWpWqWrWtWuWxWyWzW}W~W
W W"W#W$W%W)W*W,W.W/W3W4W=W>W?WEWFWLWMWRWbWeWgWhWkWmWnWoWpWqWsWtWuWwWyWzW{W|W~W
W YbY6ZAZIZfZjZ@Z<ZbZZZFZJZp[
W%f?i
W&W7W8WNW;W@WOWiW
W+YfZ
W+YfZZ[u[
W0N@|
W0X0
W0XDY
W0Y0m
W1._o
W1X1A
W2|g
W3NXE
W4+u.u_
W4vC
W5XWX
W5uCO8u
W:gxu=z
W=X=Y=D
W>Lj1
W?I]XfP
WA045<K
WAIT_ABANDONED_0
WAIT_OBJECT_0
WAIT_TIMEOUT
WCaYo
WEXE
WGY\t[
WGqY
WHX%X
WHcH{\
WIFSTOPPED
WITH_NEXT_FRAMEWORK
WITH_NEXT_FRAMEWORKr
WJa2!n"n#n$n;F#Cc0(n
WKtB
WK}7`
WLBe
WLQfRf
WMX^
WQYb_
WRtN?jV
WS2_32.dll
WSABASEERR
WSAEACCES
WSAEADDRINUSE
WSAEADDRNOTAVAIL
WSAEAFNOSUPPORT
WSAEALREADY
WSAEBADF
WSAECONNABORTED
WSAECONNREFUSED
WSAECONNRESET
WSAEDESTADDRREQ
WSAEDISCON
WSAEDQUOT
WSAEFAULT
WSAEHOSTDOWN
WSAEHOSTUNREACH
WSAEINPROGRESS
WSAEINTR
WSAEINVAL
WSAEISCONN
WSAELOOP
WSAEMFILE
WSAEMSGSIZE
WSAENAMETOOLONG
WSAENETDOWN
WSAENETRESET
WSAENETUNREACH
WSAENOBUFS
WSAENOPROTOOPT
WSAENOTCONN
WSAENOTEMPTY
WSAENOTSOCK
WSAEOPNOTSUPP
WSAEPFNOSUPPORT
WSAEPROCLIM
WSAEPROTONOSUPPORT
WSAEPROTOTYPE
WSAEREMOTE
WSAESHUTDOWN
WSAESOCKTNOSUPPORT
WSAESTALE
WSAETIMEDOUT
WSAETOOMANYREFS
WSAEUSERS
WSAEWOULDBLOCK
WSANOTINITIALISED
WSASYSNOTREADY
WSAVERNOTSUPPORTED
WSXhXdXOXMXIXoXUXNX]XYXeX[X=XcXqX
WTQTTTVTP
WUYQYOYNYPY
WUcik+u
WWsq
WWw{
WYU:
WYyr
WZYi[
WZ_L
W\fX\rX
W\nW\fW
W\nW\tW
W\vW\fW\rW
W\vW\rW
W\vW\tW
W\vX\rX
W^XQXXXWXZXTXkXLXmXJXbXRXKXgY
W_OK
W_V_IWc_d_ke'RR_B
WahHQaM
WaitForMultipleObjects
WaitForMultipleObjects($module, handle_seq, wait_flag,\n                       milliseconds=_winapi.INFINITE, /)\n--\n\n
WaitForSingleObject
WaitForSingleObject($module, handle, milliseconds, /)\n--\n\nWait for a single object.\n\nWait until the specified object is in the signaled state or\nthe time-out interval elapses. The timeout value is specified\nin milliseconds.
WaitForSingleObjectEx
WaitNamedPipe
WaitNamedPipe($module, name, timeout, /)\n--\n\n
WaitNamedPipeA
Warning
WarningMessage
Weak ref proxy used after referent went away.
Weak-reference support module.
Weakref proxy referenced a non-iterator '%.200s' object
Wf[fcf
Wfpo|<
Wfvv
When destroying _lsprof profiler
While
While field "body" changed size during iteration
While field "body" must be a list, not a %.200s
While field "orelse" changed size during iteration
While field "orelse" must be a list, not a %.200s
While(expr test, stmt* body, stmt* orelse)
WiPi
WiX<
Wi`Ga
WideCharToMultiByte
Win32 exception code
Windows Error 0x%x
Windows fatal exception: 
Windows file attribute bits
Windows reparse tag
Windows: mmap(fileno, length[, tagname[, access[, offset]]])\n\nMaps length bytes from the file specified by the file handle fileno,\nand returns a mmap object.  If length is larger than the current size\nof the file, the file is extended to contain length bytes.  If length\nis 0, the maximum length of the map is the current size of the file,\nexcept that if the file is empty Windows raises an exception (you cannot\ncreate an empty mapping on Windows).\n\nUnix: mmap(fileno, length[, flags[, prot[, access[, offset]]]])\n\nMaps length bytes from the file specified by the file descriptor fileno,\nand returns a mmap object.  If length is 0, the maximum length of the map\nwill be the current size of the file when mmap is called.\nflags specifies the nature of the mapping. MAP_PRIVATE creates a\nprivate copy-on-write mapping, so changes to the contents of the mmap\nobject will be private to this process, and MAP_SHARED creates a mapping\nthat's shared with all other processes mapping the same areas of the file.\nThe default value is MAP_SHARED.\n\nTo map anonymous memory, pass -1 as the fileno (both versions).
WindowsError
WindowsRegistryFinder
WindowsRegistryFinder._open_registry
WindowsRegistryFinder._search_registry
WindowsRegistryFinder.find_module
WindowsRegistryFinder.find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
WindowsRegistryFinder.find_spec
Wiqd
With
With field "body" changed size during iteration
With field "body" must be a list, not a %.200s
With field "items" changed size during iteration
With field "items" must be a list, not a %.200s
With(withitem* items, stmt* body, string? type_comment)
WlYl
WnW'Y\r\
Wnffm1
WqXE
WrSrYr'
Wrapper for potentially out-of-band buffers
Write bytes data to a file.
Write string to stream.\nReturns the number of characters written (which is always equal to\nthe length of the string).\n
Write the given buffer to the IO stream.\n\nReturns the number of bytes written, which is always the length of b\nin bytes.\n\nRaises BlockingIOError if the buffer is full and the\nunderlying raw stream cannot accept more data at the moment.\n
WriteConsoleW
WriteFile
WriteFile($module, /, handle, buffer, overlapped=False)\n--\n\n
Writer
Writing negative value into unsigned field
Ws`QW-TzzP`T[
Wsjshspsxsus{szs
Wt!L
WtZtF
WuW{WsWtWbWhW}W\fYEY
WuX~X
Wua>Xul
WwWjWiWaWfWdW|W
WzA{
W{X{P
W|W{WhWmWvWsW
X X&X'X-X2X9X?XIXLXMXOXPXUX_XaXdXgXhXxX|X
X X'X2X9X
X"X#X%X&X'X(X)X+X,X-X.X/X1X2X3X4X6X7X8X9X:X;X<X=X>X?X@XAXBXCXEXFXGXHXIXJXKXNXOXPXRXSXUXVXWXYXZX[X\X]X_X`XaXbXcXdXfXgXhXiXjXmXnXoXpXqXrXsXtXuXvXwXxXyXzX{X|X}X
X$OFUO
X%Y"Y$YjYiY
X'X#X(X
X(Tr
X)W,W*W3W9W.W/W\W;WBWiW
X)Y+Y*Y-YT[
X,e^pqvrv
X-[%[2[#[,['[&[/[.[{[
X03DL8bF>HaH
X0[*[$[z[7\h\
X2jC}
X3X?X6X.X9X8X-X,X;XaY
X4U3^96H+
X8Y8B
X9KPx1dF_>d5HW
X;MYD0]
X?FMZQk4
X@(m6
XAZb\
XAzM
XC[Y`
XD/Z\v
XDX XeXlX
XGYGL
XGmQ}
XHn]w
XHvb)
XL] kIk
XL^TY,g
XL~N
XMVgZL
XOY=r
XP"|>T3bg^
XR>A=AXBG:
XTI\qW
XTYnY
XUa\nb
XXX lineno: %d, opcode: %d\n
XXX readobject called with exception set\n
XXXb^
XZ9Q
XZZh`
X[g9\[][X5T
X\Y`ZXZUZgZ^Z8Z5ZmZPZ_ZeZlZSZdZWZCZ]ZRZDZ[ZHZ
X\fYA
X\rYSY
X\tX\nX\fX
X\vYSY[Y]YcY
X]YhVo
X^,BO^Q^A9
X_OK
X`YwZ
XbVm
XjKQKR
Xkm8UkVkz
Xle\
XmGa
XmY\t[
XnK-
XnaN
XoIf
XpDo
Xp\p?
XpzcK
XqRqZq
XrTrRrQr*
XrX!XbXKXpX
XrYM[
XrZr]r[r
XsSe
Xt3V-]
XtYtH
XvYvZv
Xw`wjw
Xx[P
XyYy`JJZ
Y Y!Y"Y#Y&Y(Y,Y0Y2Y3Y5Y6Y;Y=Y>Y?Y@YCYEYFYJYLYMYPYRYSYYY[Y\Y]Y^Y_YaYcYdYfYgYhYiYjYkYlYmYnYoYpYqYrYuYwYzY{Y|Y~Y
Y Z#Z)Z%Z\fZ\tZk[X\
Y!Y#Y$Y(Y/Y0Y3Y5Y6Y?YCYFYRYSYYY[Y]Y^Y_YaYcYkYmYoYrYuYvYyY{Y|Y
Y&r(s(F+G+P+Q+|#
Y'YsYP[Q[S[
Y(\G^w_?b>e
Y*YplQ
Y0Z0[0
Y1&X{
Y2Y4Yf[
Y2Z2
Y2fG
Y4Z4[4
Y4m64YT
Y6S2EF(=d;t
Y7Y8Y
Y9Z9[9\9]9K
Y:r6
Y;1l
Y<JY
Y=Uq7
Y=^Uaxdyd
Y@tb
YAZA[A
YCZCK
YEB:H
YE{@h
YFZFw
YFl]
YHg;~\}\+S!]#]%]qR$]&]'])RT
YIYGYHYDYTY
YP[M\
YP[W[\[c`Ha
YQXN
YQ[Q^Q]QaQcQ
YR(a
YRZR[R]R_R`RbRcRdRfRhRkRlRmRnRpRqRsRtRuRvRwRxRyRzR{R|R~R
YTEnpr
YU#V
YVVV
YVrX
YWYXYZY
YW[X[
YXN9j
YY9>!
YY_s
Y\fZ\tZ2Z4Z
Y\tY\nY\vY\fY
Y\vY\fY
Y\vY\rY
Y]X]p8V]
Y^fc
YaRwND
YaYa
Yb[e[
YbbEfj5@R
Yd[dv
Year is out of range: %d
Yf"3
YfZfafefsfwfxf
Yf[f\f]f^f`fbfcfefgfifjfkflfmfqfrfsfufxfyf{f|f}f
YhrASh[h`ha
YiH3
Yield
Yield(expr? value)
YieldFrom
YieldFrom(expr value)
YmAM}
YmY-^
Yn$NE=nLLNZnb6
Yo.A"
Yr<S
Yr^y^
Ys8IY
YvtGd'\e
Y{SwS
Y{Y~YwY
Y{wm
Y|GH
Y|c}v}{}>#=#0"
Y}YyY
Z!Z"Z$Z&Z'Z(Z*Z+Z,Z-Z.Z/Z0Z3Z5Z7Z8Z9Z:Z;Z=Z>Z?ZAZBZCZDZEZGZHZKZLZMZNZOZPZQZRZSZTZVZWZXZYZ[Z\Z]Z^Z_Z`ZaZcZdZeZfZhZiZkZlZmZnZoZpZqZrZsZxZyZ{Z|Z}Z~Z
Z"d*ZUe:s
Z"d7d#
Z"dOd
Z"e!r8e r6e 
Z"e"Z#d Z$d!Z%d"Z&d#Z'd$Z(d!Z)d"Z*d#Z+d%Z,d&Z-d'Z.d\tZ/d
Z"eRD
Z#Z$Z'Z(Z*Z-Z0ZDZEZGZHZLZPZUZ^ZcZeZgZmZwZzZ{Z~Z
Z#ZgZmZwZ~Z
Z#d*Z$d*Z%d*Z&
Z#d8d$
Z$d*ZRd*ZSe-sve:ste9e
Z%e&d
Z%e&s
Z%eYr$e
Z&P7wwS
Z'Z-ZUZeZzZ
Z'd/Z(e(d0z
Z)d1
Z*[6[>[C[E[@[Q[U[Z[[[e[i[p[s[u[x[
Z*d9d+
Z+d9d,
Z,d2
Z-Z.Z
Z-d g
Z-d@d4
Z.e5p
Z/DX
Z/d7
Z0d&d'
Z0dAd9
Z0dLZ1dMZ2d
Z1[1\1E
Z1d"g
Z1d:
Z1n\r#
Z2V8)IKh
Z2d;
Z2e2
Z2e2d5z\r
Z2e2x
Z3Z4dPd
Z3Zl[
Z3d<
Z3dQ
Z4Z$e
Z4Z$e$s\v
Z4d.Z:e
Z4d/d,
Z4d=
Z4dR
Z4e4Z$e4s\r
Z4e4Z$e5s
Z5d%
Z5d-
Z5e\r
Z6%d#d(
Z6d&
Z6dV
Z6d\tZ7d'Z8d&Z9d
Z6e6
Z7d'
Z7e7r
Z7e\r
Z8\N\M\
Z8d(
Z8e8
Z9d)
Z:d(Z;d)Z<d*Z=d+Z>d,Z?e
Z>ZMZ9ZLZpZiZGZQZVZBZ\Zr[n[
Z>dQd.
Z>fi
Z?E9d>mA
Z?dIw
Z?dRd/
Z?da
Z?e=Z<Y
Z@ZgZJZUZ<ZbZuZ
Z@ZlZIZ5Z6ZbZjZ
Z@dSd1
Z@db
Z@w-N
ZAd&ZBd
ZAd2
ZAe\r
ZBeB
ZBeBs
ZCd#ZDd'ZEd\rZFd
ZCkF~
ZDZEZFeEr
ZD[D
ZDdPd
ZDeD
ZEeE
ZFdi
ZGXN
ZGeG
ZGj\tt
ZH[Gd
ZH[HP
ZHd"ZId
ZHeH
ZIPQQQRQ_Ex
ZIeI
ZJd)ZKd
ZJeJ
ZJe\r
ZJn{
ZLIB_RUNTIME_VERSION
ZLIB_VERSION
ZLeL
ZMeLeMk
ZN[Kd
ZNd ZOd
ZNeNZO
ZNiN
ZO6G
ZOe\r
ZP[P
ZPd!ZQd(ZR\t
ZPeP
ZQZR[P
ZQdPdK
ZR2JJHlXjXFXv=MFp3
ZRdL
ZReR
ZSdLx
ZSdM
ZT%f%W%`%l%c%Z%i%]%R%d%U%^%j%a%X%g%[%S%e%V%_%k%b%Y%h%\%Q%P%m%n%p%o%
ZTW[Y[S
ZTZUe\r
ZTdN
ZUnJ#
ZVESo;a;qX
ZVdu
ZVeVr\r
ZWY9fV(6pMKR&15Jg
ZWdv
ZX_X
ZXdw
ZY+p
ZYdx
ZYpX*G
ZZe\r
Z[;YsJSvxfuj
Z\fZ\rZ
Z\fd\fS
Z\fd\nS
Z\fd\rZ\rd
Z\fd\tS
Z\fd\vd
Z\fd\vg
Z\fe\vd\nd
Z\nZ\vZ\rZ
Z\ne\vd
Z\rd\fZ
Z\rd\vS
Z\tZ\nd
Z\t\pa
Z\td\nS
Z\td\vd
Z\te\nd
Z\te\tf
Z\vZ\fd\tZ\rd\nZ
Z_@EY0
Z_BEST_COMPRESSION
Z_BEST_SPEED
Z_BLOCK
Z_DEFAULT_COMPRESSION
Z_DEFAULT_STRATEGY
Z_FILTERED
Z_FINISH
Z_FIXED
Z_FULL_FLUSH
Z_HUFFMAN_ONLY
Z_NO_COMPRESSION
Z_NO_FLUSH
Z_PARTIAL_FLUSH
Z_RLE
Z_SYNC_FLUSH
Z_TREES
Z_tr
ZaI?
Zae\r
Zc[ca
Zc\cYc[c
ZdQd
Zda$
Zdn\v#
Ze?c
Zebe
Zero padding is not allowed in complex format specifier
ZeroDivisionError
ZhCZDZET
Zhz1
Zi*7
Zi@x
Zi]o]L^y^
ZipImportError
ZipReader
Ziwi`iTiui0i
Zjz\v
Zk[k`TjFTD_k'EuY
Zlmp
Zm2E]m#
ZoXn
Zo[o\o]oG
Zrkd
Zs[q[
Zu\uu
Zu\wjaAN1T
Zw9[
ZwZzZ
Z{Z}Z
[ [!["[#[$[%[&['[([)[*[+[,[-[.[/[0[1[3[5[6[8[9[:[;[<[=[>[?[A[B[C[D[E[F[G[H[I[J[K[L[M[N[O[R[V[^[`[a[g[h[k[m[n[o[r[t[v[w[x[y[{[|[~[
[![%[-[8[A[K[L[R[V[^[h[n[o[|[}[~[
[%[]RA[V[}[
[,\,],^,_,`,a,b,c,d,e,f,g,h,i,j,k,l,m,n,
[,\@\A\?\>\
[0R;z
[4[-[L[R[h[o[|[
[6lH.
[8\8D
[:jkpuu
[:vNajbjuA
[A8X4
[B\BS
[CWP
[Errno %S] %S
[Errno %S] %S: %R
[Errno %S] %S: %R -> %R
[F\FS
[Gb~e
[HduQ
[Kb1g
[KuT
[LR>2<X
[LcP
[MSC v.1935 64 bit (AMD64)]
[MbPg=h
[PEQ/<M9f
[Q%tE6(
[R!C~B+6$>\RZRD2fB8<K;&1
[S5V$l
[WinError %S] %S
[WinError %S] %S: %R
[WinError %S] %S: %R -> %R
[X\Xg6A<jLq
[Xdue
[YwX
[[t3a[P
[\f\0\7]C]k]A]K]?]5]Q]N]U]3]:]R]=]1]Y]B]9]I]8]<]2]6]@]E]D^A^X_
[\n\\v\1\L]P]4]G]
[^F04:SIsDh>
[^t5OEj
[bZb*@I
[copy($self, /)\n--\n\nReturn a copy of the hash object.
[gC;WSDS
[gZg]g
[i_Mb
[k1m
[l7k7
[nfek
[sep] -> string in ISO 8601 format, YYYY-MM-DDT[HH[:MM[:SS[.mmm[uuu]]]]][+HH:MM].\nsep is used to separate the year from the time, and defaults to 'T'.\nThe optional argument timespec specifies the number of additional terms\nof the time to include. Valid options are 'auto', 'hours', 'minutes',\n'seconds', 'milliseconds' and 'microseconds'.\n
[ssss]
[wvf
[x\x^x_x`xaxbxcxdxexfxgxhxixoxpxqxrxsxtxuxvxxxyxzx{x}x~x
[yYTXms
[zcK)w
\ \!\#\&\(\)\*\+\-\.\/\0\2\3\5\6\7\C\D\F\G\L\M\R\S\T\V\W\X\Z\[\\\]\_\b\d\g\h\i\j\k\l\m\p\r\s\t\u\v\w\x\{\|\}\~\
\ \"\(\8\9\A\F\N\S\P\O\q[l\n\bNv\y\
\ at end of string
\#\&\)\+\,\.\0\2\5\6\Y\Z\\\b\c\g\h\i\m\p\t\u\z\{\|\}\
\$(\w+|\{[^}]*\})
\%\|\z\{\~\
\'_6bHb\nfgf
\3\q]c]J]e]r]l]^]h]g]b]
\4QN
\5EU{
\6Rzf
\7_J_/`P`m`
\9ns
\>XMN0
\>cym
\AJL@
\B/gE
\CE4
\Ef7
\Fm_l
\G]GX
\H4BnB(6
\Hcd
\KzL
\Modules\Setup.local
\MwY
\N escapes not supported (can't load unicodedata module)
\NiN
\O,9k
\OJR
\Python
\S4i5i7iY
\T^T]TY
\U%08x
\UDsWK
\Uxxxxxxxx out of range
\WzB
\XFm
\Yf=jZm
\Z[e[s[Q[S[b[u
\[e7K7mEX
\\tcOfHh<w
\crN
\eCOqb
\f0\r0A
\fBUILDDIR_TXT
\fU2UeUNU9UHU-U;U@UKU\nW
\fZIP_LANDMARK
\fbuild_prefix
\fhome_was_set
\fp\vPtI
\fprogram_name
\fvenv_prefix2
\hcf
\i[il
\kgk5D/
\l(A0
\l7w
\n        Acquire the module lock.  If a potential deadlock is detected,\n        a _DeadlockError is raised.\n        Otherwise, the lock is always acquired and True is returned.\n        
\n        Create an IncrementalDecoder instance.\n\n        The IncrementalDecoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        
\n        Creates an IncrementalEncoder instance.\n\n        The IncrementalEncoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        
\n        Decode input and returns the resulting object.\n        
\n        Encodes input and returns the resulting object.\n        
\n        Find distributions.\n\n        Return an iterable of all Distribution instances capable of\n        loading the metadata for packages matching ``context.name``\n        (or all names if ``None`` indicated) along the paths in the list\n        of directories ``context.path``.\n        
\n        Reset the decoder to the initial state.\n        
\n        Resets the encoder to the initial state.\n        
\n        Return the current state of the decoder.\n\n        This must be a (buffered_input, additional_state_info) tuple.\n        buffered_input must be a bytes object containing bytes that\n        were passed to decode() that have not yet been converted.\n        additional_state_info must be a non-negative integer\n        representing the state of the decoder WITHOUT yet having\n        processed the contents of buffered_input.  In the initial state\n        and after reset(), getstate() must return (b"", 0).\n        
\n        Return the current state of the encoder.\n        
\n        Set the current state of the decoder.\n\n        state must have been returned by getstate().  The effect of\n        setstate((b"", 0)) must be equivalent to reset().\n        
\n        Set the current state of the encoder. state must have been\n        returned by getstate().\n        
\n    An IncrementalDecoder decodes an input in multiple steps. The input can\n    be passed piece by piece to the decode() method. The IncrementalDecoder\n    remembers the state of the decoding process between calls to decode().\n    
\n    An IncrementalEncoder encodes an input in multiple steps. The input can\n    be passed piece by piece to the encode() method. The IncrementalEncoder\n    remembers the state of the encoding process between calls to encode().\n    
\n    Decoding iterator.\n\n    Decodes the input strings from the iterator using an IncrementalDecoder.\n\n    errors and kwargs are passed through to the IncrementalDecoder\n    constructor.\n    
\n    Encoding iterator.\n\n    Encodes the input strings from the iterator using an IncrementalEncoder.\n\n    errors and kwargs are passed through to the IncrementalEncoder\n    constructor.\n    
\n    This subclass of IncrementalDecoder can be used as the baseclass for an\n    incremental decoder if the decoder must be able to handle incomplete\n    byte sequences.\n    
\n    This subclass of IncrementalEncoder can be used as the baseclass for an\n    incremental encoder if the encoder must keep some of the output in a\n    buffer between calls to encode().\n    
\nEXE_SUFFIX
\nExtension modules: 
\nIndexError
\nOriginal exception was:\n
\nPLATLIBDIRr
\nPYDEBUGEXT
\nPYTHONPATH
\nPath operations common to more than one OS\nDo not use directly.  The OS specific modules import the appropriate\nfunctions from this module themselves.\n
\nQueryValue
\nRemainder of file ignored
\nThe objects used by the site module to add custom builtins.\n
\nWINREG_KEYr-
\narena map counts\n
\nexecutable
\nisinstance
\nplatlibdir
\npy_setpath
\npythonpath
\nrpartition
\nstartswith
\nstdlib_dir
\os.pycz\tLib\os.py
\os.pyz
\pFAI
\rRBY
\rSTDLIB_SUBDIR
\rVENV_LANDMARK
\rVERSION_MAJOR
\rVERSION_MINOR
\rV{2i
\re4
\rmj>zjZ
\rocT@
\rqa+j
\site-packages
\t%%%%%%%\n\v\f\r
\t1u
\t<genexpr>z
\tOpenKeyEx
\tP!PuR1U<Z
\t\pakS
\t\t\n\n\v\v\f\f\f\f\r\r\r\r
\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
\tcandidate
\thad_delim
\thassuffix
\tlandmarkss
\torig_argv
\tpartition
\tpyvenvcfg
\treadlines
\tsafe_path
\tsearch_upr
\u%04x
\vEXEC_PREFIX
\vNUO
\vbase_prefix
\vexec_prefix
\vlibrary_dir)
\vptI
\vsite_import
\vvenv_prefix
\x%02x
\xnwhk
\}3mIN
] 888B^
] ]!]"]#]%](]*]+],]/]0]1]2]3]5]6]7]8]9]:];]<]?]@]A]B]C]D]E]F]H]I]M]N]O]P]Q]R]S]T]U]V]W]Y]Z]\]^]_]`]a]b]c]d]e]f]g]h]j]m]n]p]q]r]s]u]v]w]x]y]z]{]|]}]~]
] ]$]&]1]9]B]
] ]\f](]\r]&]%]
]!\!D"E"Z!Y!
]!^"^#^ ^$^
]!kdk
]"Z"!!"!#!(!
]"^"!(,("(-(
]%sOu
]&bGb
])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)
]*eNe!hKj
]+]#]$]&]']1]4]9]=]?]B]C]F]H]U]Q]Y]J]_]`]a]b]d]j]m]p]y]z]~]
]-ZMeMe*r
]1^1K
]2^2_2H
]33v
]40C
]4^4_4`4a4
]5$Dz07W&J09a
]6lKV
]7\6J
]8^8_8H
]8usO
]>6ls
]E^=^@^C^~^
]GL:d
]Gp4
]KcME
]L5Py
]L]R]N]K]l]s]v]
]N6P
]N_ba=cif
]O^N^J^M^K^
]P[PA
]RZS
]R^Rd
]U=xTx
]ULrMrOrSr
]WZBW7=VFND7
]X0Gx
]X]>]4]=]l][]o]]]k]K]J]i]t]
]Y+NN:5CZY/
]YmY
][^c^U^W^T^
]\t]\n]\v]\f]\r]
]ayr
]dFd!
]e2Gj
]eae[e
]fZ2e2rbe
]i]pe
]i`ii
]k\Du
]mD?r
]mDN
]nDg
]q_qM
]u^u_u`uaubucuduguhuiukulumunuoupuqusuuuvuwuzu{u|u}u~u
]v^vJO
]~ZBeB
^ ^!^"^#^$^%^(^)^*^+^,^/^0^2^3^4^5^6^9^:^>^?^@^A^C^F^G^H^I^J^K^M^N^O^P^Q^R^S^V^W^X^Y^Z^\^]^_^`^c^d^e^f^g^h^i^j^k^l^m^n^o^p^q^u^w^y^~^
^ ^.^(^2^5^>^K^P^I^Q^V^X^[^\^^^h^j^k^l^m^n^p^
^!e e&e"e\vk
^"I'J'K'L'M'
^'_8bEe
^(_"_#_$_T_
^.^>^I^\8V^a8k^l^m^n^
^1QRO
^1^;^<^7^D^T^[^^^a^
^3_0_g_]`Z`g`
^4aRbRdRk
^5_7_W_l_i_k_
^5hW-@e1bWx2gW
^6ZJt5e^
^6^7^D^C^@^N^W^T^_^b^d^G^u^v^z^
^8f0>
^9_9`9a9b9M
^9xM
^:_J_wa_lzu
^<twz
^=G2H
^?xOZ
^B7nA
^G/Dl2
^G_G`GY
^HQv
^H_HX
^M&B+f,f?=.f3f
^M3Y4Y8YjE5Y39^@
^QdF
^Vtdoa
^Vv1UD
^YNG~@8Y[
^]f1g
^_'07FS_L
^`4vRj
^a_ac
^anK<cVx
^b5a
^fW?PTI
^jBuk
^mrS
^na>b
^nx3K?)
^o5>ao_o`oH
^ocb{n
^p_4a^e\ff6f
^pe1oU`7R\r
^r]r2
^t<Ah<D
^udueu
^wcRr
^x*ywJ
^yoS
_ `Ka4b
_!_"_#_$_(_+_,_._0_4_6_;_=_?_@_D_E_G_M_P_T_X_[_`_c_d_g_o_r_t_u_x_z_}_~_
_#_4_6_=_@_E_T_X_d_g_}_
_%`Qe=gBlrl
_)_-_8_A_H_L_N_/_Q_V_W_Y_a_m_s_w_
_,a(aAa^aqasaRaSarala
_0tf
_6[M~9UTN
_7`9`T`r`^`E`S`G`I`[`L`@`B`_`$`D`X`f`n`BbCb
_<YAY7
_<`]`Z`g`A`Y`c`
_=gfq
_?91M
_ALMwRM7A_
_AddedDllDirectory
_AddedDllDirectory.__enter__
_AddedDllDirectory.__exit__
_AddedDllDirectory.__init__
_AddedDllDirectory.__repr__
_AddedDllDirectory.close
_AyJ
_BF1S
_BufferedIOBase
_CASE_INSENSITIVE_PLATFORMS
_CASE_INSENSITIVE_PLATFORMS_BYTES_KEY
_CASE_INSENSITIVE_PLATFORMS_STR_KEY
_CHUNK_SIZE
_C`Cs
_CallableGenericAlias
_CallableGenericAlias.__getitem__
_CallableGenericAlias.__new__
_CallableGenericAlias.__reduce__
_CallableGenericAlias.__repr__
_CallableGenericAlias.__repr__.<locals>.<listcomp>
_Cn>m
_ConcatenateGenericAlias
_DeadlockError
_DummyModuleLock
_DummyModuleLock({!r}) at {}
_DummyModuleLock.__init__
_DummyModuleLock.__repr__
_DummyModuleLock.acquire
_DummyModuleLock.release
_ERR_MSG
_ERR_MSG_PREFIX
_EXCEPTION_ACCESS_VIOLATION
_EXCEPTION_INT_DIVIDE_BY_ZERO
_EXCEPTION_NONCONTINUABLE
_EXCEPTION_NONCONTINUABLE_EXCEPTION
_EXCEPTION_STACK_OVERFLOW
_Environ
_Environ.__delitem__
_Environ.__getitem__
_Environ.__init__
_Environ.__ior__
_Environ.__iter__
_Environ.__len__
_Environ.__or__
_Environ.__repr__
_Environ.__repr__.<locals>.<genexpr>
_Environ.__ror__
_Environ.__setitem__
_Environ.copy
_Environ.setdefault
_Error
_FC3
_F`Fe
_GJRVNV
_Ga?aKawabaca_aZaXaua*b
_Helper
_Helper.__call__
_Helper.__repr__
_IKZ
_IOBase
_ImportLockContext
_ImportLockContext.__enter__
_ImportLockContext.__exit__
_LCMAP_LOWERCASE
_LCMapStringEx
_LOAD_LIBRARY_SEARCH_APPLICATION_DIR
_LOAD_LIBRARY_SEARCH_DEFAULT_DIRS
_LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR
_LOAD_LIBRARY_SEARCH_SYSTEM32
_LOAD_LIBRARY_SEARCH_USER_DIRS
_LOCALE_NAME_INVARIANT
_L[un
_LazyLoader__check_eager_loader
_LazyModule
_LazyModule.__delattr__
_LazyModule.__getattribute__
_LoaderBasics
_LoaderBasics.create_module
_LoaderBasics.exec_module
_LoaderBasics.is_package
_LoaderBasics.load_module
_MS_WINDOWS
_ModifiedArgv0
_ModifiedArgv0.__enter__
_ModifiedArgv0.__exit__
_ModifiedArgv0.__init__
_ModuleLock
_ModuleLock({!r}) at {}
_ModuleLock.__init__
_ModuleLock.__repr__
_ModuleLock.acquire
_ModuleLock.has_deadlock
_ModuleLock.release
_ModuleLockManager
_ModuleLockManager.__enter__
_ModuleLockManager.__exit__
_ModuleLockManager.__init__
_MutableMapping__marker
_N$z2f
_N%VZ
_NEEDS_LOADING
_Na/c
_NamespaceLoader
_NamespacePath
_NamespacePath({!r})
_NamespacePath.__contains__
_NamespacePath.__getitem__
_NamespacePath.__init__
_NamespacePath.__iter__
_NamespacePath.__len__
_NamespacePath.__repr__
_NamespacePath.__setitem__
_NamespacePath._find_parent_path_names
_NamespacePath._get_parent_path
_NamespacePath._recalculate
_NamespacePath.append
_OPT
_ORIGIN
_POPULATE
_PYCACHE
_Printer
_Printer.__call__
_Printer.__init__
_Printer.__init__.<locals>.<listcomp>
_Printer.__repr__
_Printer.__setup
_Printer__data
_Printer__filenames
_Printer__linecnt
_Printer__lines
_Printer__name
_Printer__setup
_PyAST_Compile
_PyAccu_Accumulate
_PyAccu_Destroy
_PyAccu_Finish
_PyAccu_FinishAsList
_PyAccu_Init
_PyArena_AddPyObject
_PyArena_Free
_PyArena_Malloc
_PyArena_New
_PyArg_BadArgument
_PyArg_CheckPositional
_PyArg_NoKeywords
_PyArg_NoKwnames
_PyArg_NoPositional
_PyArg_ParseStack
_PyArg_ParseStackAndKeywords
_PyArg_ParseStackAndKeywords_SizeT
_PyArg_ParseStack_SizeT
_PyArg_ParseTupleAndKeywordsFast
_PyArg_ParseTupleAndKeywordsFast_SizeT
_PyArg_ParseTupleAndKeywords_SizeT
_PyArg_ParseTuple_SizeT
_PyArg_Parse_SizeT
_PyArg_UnpackKeywords
_PyArg_UnpackKeywordsWithVararg
_PyArg_UnpackStack
_PyArg_VaParseTupleAndKeywordsFast
_PyArg_VaParseTupleAndKeywordsFast_SizeT
_PyArg_VaParseTupleAndKeywords_SizeT
_PyArg_VaParse_SizeT
_PyArgv_AsWstrList
_PyAsyncGenASend_Type
_PyAsyncGenAThrow_Type
_PyAsyncGenWrappedValue_Type
_PyAtExit_Init
_PyByteArray_empty_string
_PyBytesIOBuffer_Type
_PyBytesWriter_Alloc
_PyBytesWriter_Dealloc
_PyBytesWriter_Finish
_PyBytesWriter_Init
_PyBytesWriter_Prepare
_PyBytesWriter_Resize
_PyBytesWriter_WriteBytes
_PyBytes_DecodeEscape
_PyBytes_Find
_PyBytes_FormatEx
_PyBytes_FromHex
_PyBytes_InitTypes
_PyBytes_Join
_PyBytes_Repeat
_PyBytes_Resize
_PyBytes_ReverseFind
_PyCode_CheckLineNumber
_PyCode_ConstantKey
_PyCode_GetExtra
_PyCode_New
_PyCode_SetExtra
_PyCode_Validate
_PyCodecInfo_GetIncrementalDecoder
_PyCodecInfo_GetIncrementalEncoder
_PyCodec_DecodeText
_PyCodec_EncodeText
_PyCodec_Lookup
_PyCodec_LookupTextEncoding
_PyConfig_AsDict
_PyConfig_Copy
_PyConfig_FromDict
_PyConfig_InitCompatConfig
_PyConfig_Read
_PyConfig_Write
_PyContext_Init
_PyContext_NewHamtForTests
_PyCoroWrapper_Type
_PyCrossInterpreterData_Lookup
_PyCrossInterpreterData_NewObject
_PyCrossInterpreterData_RegisterClass
_PyCrossInterpreterData_Release
_PyDeadline_Get
_PyDeadline_Init
_PyDebugAllocatorStats
_PyDictView_Intersect
_PyDictView_New
_PyDict_CheckConsistency
_PyDict_ContainsId
_PyDict_Contains_KnownHash
_PyDict_DebugMallocStats
_PyDict_DelItemId
_PyDict_DelItemIf
_PyDict_DelItem_KnownHash
_PyDict_GetItemIdWithError
_PyDict_GetItemStringWithError
_PyDict_GetItemWithError
_PyDict_GetItem_KnownHash
_PyDict_HasOnlyStringKeys
_PyDict_MaybeUntrack
_PyDict_MergeEx
_PyDict_NewPresized
_PyDict_Next
_PyDict_Pop
_PyDict_SetItemId
_PyDict_SetItem_KnownHash
_PyDict_SizeOf
_PyErr_BadInternalCall
_PyErr_ChainExceptions
_PyErr_ChainExceptions: exception %R is not a BaseException subclass
_PyErr_ChainStackItem
_PyErr_CheckSignals
_PyErr_CheckSignalsTstate
_PyErr_Clear
_PyErr_Display
_PyErr_ExceptionMatches
_PyErr_Fetch
_PyErr_Format
_PyErr_FormatFromCause
_PyErr_FormatFromCauseTstate
_PyErr_GetExcInfo
_PyErr_GetHandledException
_PyErr_GetTopmostException
_PyErr_InitTypes
_PyErr_NoMemory
_PyErr_NormalizeException
_PyErr_Print
_PyErr_ProgramDecodedTextObject
_PyErr_Restore
_PyErr_SetFromPyStatus
_PyErr_SetHandledException
_PyErr_SetKeyError
_PyErr_SetNone
_PyErr_SetObject
_PyErr_SetObject: exception %R is not a BaseException subclass
_PyErr_SetString
_PyErr_StackItemToExcInfoTuple
_PyErr_TrySetFromCause
_PyErr_WriteUnraisableMsg
_PyEval_AddPendingCall
_PyEval_EvalFrameDefault
_PyEval_GetBuiltin
_PyEval_GetBuiltinId
_PyEval_GetSwitchInterval
_PyEval_RequestCodeExtraIndex
_PyEval_SetProfile
_PyEval_SetSwitchInterval
_PyEval_SetTrace
_PyEval_SignalAsyncExc
_PyEval_SignalReceived
_PyEval_SliceIndex
_PyEval_SliceIndexNotNone
_PyExc_InitGlobalObjects
_PyExc_InitState
_PyFaulthandler_Init
_PyFloat_DebugMallocStats
_PyFloat_FormatAdvancedWriter
_PyFloat_InitTypes
_PyFrame_IsEntryFrame
_PyFunction_Vectorcall
_PyGC_Init
_PyGILState_GetInterpreterStateUnsafe
_PyGILState_Init
_PyGILState_NoteThreadState
_PyGen_FetchStopIterationValue
_PyGen_Finalize
_PyGen_SetStopIterationValue
_PyImportZip_Init
_PyImport_AcquireLock
_PyImport_FixupBuiltin
_PyImport_FixupExtensionObject
_PyImport_FrozenBootstrap
_PyImport_FrozenStdlib
_PyImport_FrozenTest
_PyImport_GetModuleAttr
_PyImport_GetModuleAttrString
_PyImport_GetModuleId
_PyImport_IsInitialized
_PyImport_ReleaseLock
_PyImport_SetModule
_PyImport_SetModuleString
_PyInterpreterID_LookUp
_PyInterpreterID_New
_PyInterpreterID_Type
_PyInterpreterState_Enable
_PyInterpreterState_GetConfig
_PyInterpreterState_GetConfigCopy
_PyInterpreterState_GetEvalFrameFunc
_PyInterpreterState_GetIDObject
_PyInterpreterState_GetMainModule
_PyInterpreterState_IDDecref
_PyInterpreterState_IDIncref
_PyInterpreterState_IDInitref
_PyInterpreterState_LookUpID
_PyInterpreterState_RequireIDRef
_PyInterpreterState_RequiresIDRef
_PyInterpreterState_SetConfig
_PyInterpreterState_SetEvalFrameFunc
_PyList_DebugMallocStats
_PyList_Extend
_PyLong_AsByteArray
_PyLong_AsInt
_PyLong_AsTime_t
_PyLong_Copy
_PyLong_DigitValue
_PyLong_DivmodNear
_PyLong_FileDescriptor_Converter
_PyLong_Format
_PyLong_FormatAdvancedWriter
_PyLong_FormatBytesWriter
_PyLong_FormatWriter
_PyLong_Frexp
_PyLong_FromByteArray
_PyLong_FromBytes
_PyLong_FromTime_t
_PyLong_GCD
_PyLong_InitTypes
_PyLong_Lshift
_PyLong_New
_PyLong_NumBits
_PyLong_Rshift
_PyLong_Sign
_PyLong_Size_t_Converter
_PyLong_UnsignedInt_Converter
_PyLong_UnsignedLongLong_Converter
_PyLong_UnsignedLong_Converter
_PyLong_UnsignedShort_Converter
_PyManagedBuffer_Type
_PyMem_DebugCalloc
_PyMem_DebugFree
_PyMem_DebugMalloc
_PyMem_DebugRawFree
_PyMem_DebugRawRealloc
_PyMem_DebugRealloc
_PyMem_GetAllocatorName
_PyMem_GetCurrentAllocatorName
_PyMem_RawStrdup
_PyMem_RawWcsdup
_PyMem_SetDefaultAllocator
_PyMem_SetupAllocators
_PyMem_Strdup
_PyMethodWrapper_Type
_PyModuleSpec_IsInitializing
_PyModule_Add
_PyModule_Clear
_PyModule_ClearDict
_PyModule_CreateInitialized
_PyNamespace_New
_PyNamespace_Type
_PyNone_Type
_PyNotImplemented_Type
_PyNumber_Index
_PyOS_InterruptOccurred
_PyOS_IsMainThread
_PyOS_ReadlineTState
_PyOS_SigintEvent
_PyOS_URandom
_PyOS_URandomNonblock
_PyObject_AssertFailed
_PyObject_Call
_PyObject_CallFunction_SizeT
_PyObject_CallMethod
_PyObject_CallMethodId
_PyObject_CallMethodIdObjArgs
_PyObject_CallMethodId_SizeT
_PyObject_CallMethod_SizeT
_PyObject_Call_Prepend
_PyObject_CheckConsistency
_PyObject_CheckCrossInterpreterData
_PyObject_DebugMallocStats
_PyObject_DebugTypeStats
_PyObject_Dump
_PyObject_FastCall
_PyObject_FastCallDictTstate
_PyObject_FunctionStr
_PyObject_GC_New
_PyObject_GC_NewVar
_PyObject_GC_Resize
_PyObject_GenericGetAttrWithDict
_PyObject_GenericSetAttrWithDict
_PyObject_GetAttrId
_PyObject_GetCrossInterpreterData
_PyObject_GetDictPtr
_PyObject_GetMethod
_PyObject_GetState
_PyObject_HasLen
_PyObject_IsAbstract
_PyObject_IsFreed
_PyObject_LookupAttr
_PyObject_LookupAttrId
_PyObject_LookupSpecial
_PyObject_LookupSpecialId
_PyObject_MakeTpCall
_PyObject_New
_PyObject_NewVar
_PyObject_NextNotImplemented
_PyObject_RealIsInstance
_PyObject_RealIsSubclass
_PyObject_SetAttrId
_PyParser_TokenNames
_PyPathConfig_ClearGlobal
_PyPathConfig_UpdateGlobal
_PyPreConfig_InitCompatConfig
_PyPreConfig_Read
_PyPreConfig_Write
_PyRun_AnyFileObject
_PyRun_InteractiveLoopObject
_PyRun_SimpleFileObject
_PyRuntime
_PyRuntimeState_Fini
_PyRuntimeState_Init
_PyRuntime_Finalize
_PyRuntime_Initialize
_PyST_GetScope(name=%R) failed: unknown scope in unit %S (%R); symbols: %R; locals: %R; globals: %R
_PySequence_BytesToCharpArray
_PySequence_IterSearch
_PySet_Dummy
_PySet_NextEntry
_PySet_Update
_PySlice_FromIndices
_PySlice_GetLongIndices
_PyStack_AsDict
_PyState_AddModule
_PyStructSequence_InitType
_PyStructSequence_NewType
_PySys_Create
_PySys_GetAttr
_PySys_GetSizeOf
_PySys_InitCore
_PySys_SetPreliminaryStderr
_PyThreadState_Delete
_PyThreadState_DeleteCurrent
_PyThreadState_DeleteExcept
_PyThreadState_GetDict
_PyThreadState_Init
_PyThreadState_Init() is for internal use only
_PyThreadState_Prealloc
_PyThreadState_SetCurrent
_PyThreadState_Swap
_PyThreadState_UncheckedGet
_PyThread_CurrentExceptions
_PyThread_CurrentFrames
_PyTime_Add
_PyTime_As100Nanoseconds
_PyTime_AsMicroseconds
_PyTime_AsMilliseconds
_PyTime_AsNanoseconds
_PyTime_AsNanosecondsObject
_PyTime_AsSecondsDouble
_PyTime_AsTimeval
_PyTime_AsTimevalTime_t
_PyTime_AsTimeval_clamp
_PyTime_FromMillisecondsObject
_PyTime_FromNanoseconds
_PyTime_FromNanosecondsObject
_PyTime_FromSeconds
_PyTime_FromSecondsObject
_PyTime_GetMonotonicClock
_PyTime_GetMonotonicClockWithInfo
_PyTime_GetPerfCounter
_PyTime_GetPerfCounterWithInfo
_PyTime_GetSystemClock
_PyTime_GetSystemClockWithInfo
_PyTime_MulDiv
_PyTime_ObjectToTime_t
_PyTime_ObjectToTimespec
_PyTime_ObjectToTimeval
_PyTime_gmtime
_PyTime_localtime
_PyTraceBack_FromFrame
_PyTraceBack_Print_Indented
_PyTraceMalloc_GetTraceback
_PyTraceback_Add
_PyTrash_begin
_PyTrash_cond
_PyTrash_end
_PyTuple_DebugMallocStats
_PyTuple_InitTypes
_PyTuple_MaybeUntrack
_PyTuple_Resize
_PyType_CalculateMetaclass
_PyType_CheckConsistency
_PyType_GetDocFromInternalDoc
_PyType_GetTextSignatureFromInternalDoc
_PyType_Lookup
_PyType_LookupId
_PyType_Name
_PyTypes_InitSlotDefs
_PyTypes_InitTypes
_PyUnicodeTranslateError_Create
_PyUnicodeWriter_Dealloc
_PyUnicodeWriter_Finish
_PyUnicodeWriter_Init
_PyUnicodeWriter_PrepareInternal
_PyUnicodeWriter_PrepareKindInternal
_PyUnicodeWriter_WriteASCIIString
_PyUnicodeWriter_WriteChar
_PyUnicodeWriter_WriteLatin1String
_PyUnicodeWriter_WriteStr
_PyUnicodeWriter_WriteSubstring
_PyUnicode_AsASCIIString
_PyUnicode_AsLatin1String
_PyUnicode_AsUTF8String
_PyUnicode_AsUnicode
_PyUnicode_CheckConsistency
_PyUnicode_Copy
_PyUnicode_DecodeRawUnicodeEscapeStateful
_PyUnicode_DecodeUnicodeEscapeInternal
_PyUnicode_DecodeUnicodeEscapeStateful
_PyUnicode_EQ
_PyUnicode_EncodeCharmap
_PyUnicode_EncodeUTF16
_PyUnicode_EncodeUTF32
_PyUnicode_EncodeUTF7
_PyUnicode_Equal
_PyUnicode_EqualToASCIIId
_PyUnicode_EqualToASCIIString
_PyUnicode_FastCopyCharacters
_PyUnicode_FastFill
_PyUnicode_FindMaxChar
_PyUnicode_FormatAdvancedWriter
_PyUnicode_FormatLong
_PyUnicode_FromASCII
_PyUnicode_FromId
_PyUnicode_InitTypes
_PyUnicode_InsertThousandsGrouping
_PyUnicode_IsAlpha
_PyUnicode_IsCaseIgnorable
_PyUnicode_IsCased
_PyUnicode_IsDecimalDigit
_PyUnicode_IsDigit
_PyUnicode_IsLinebreak
_PyUnicode_IsLowercase
_PyUnicode_IsNumeric
_PyUnicode_IsPrintable
_PyUnicode_IsTitlecase
_PyUnicode_IsUppercase
_PyUnicode_IsWhitespace
_PyUnicode_IsXidContinue
_PyUnicode_IsXidStart
_PyUnicode_JoinArray
_PyUnicode_Ready
_PyUnicode_ScanIdentifier
_PyUnicode_ToDecimalDigit
_PyUnicode_ToDigit
_PyUnicode_ToFoldedFull
_PyUnicode_ToLowerFull
_PyUnicode_ToLowercase
_PyUnicode_ToNumeric
_PyUnicode_ToTitleFull
_PyUnicode_ToTitlecase
_PyUnicode_ToUpperFull
_PyUnicode_ToUppercase
_PyUnicode_TransformDecimalAndSpaceToASCII
_PyUnicode_WideCharString_Converter
_PyUnicode_WideCharString_Opt_Converter
_PyUnicode_XStrip
_PyWarnings_Init
_PyWeakref_CallableProxyType
_PyWeakref_ClearRef
_PyWeakref_GetWeakrefCount
_PyWeakref_ProxyType
_PyWeakref_RefType
_PyWideStringList_AsList
_PyWideStringList_Clear
_PyWideStringList_Copy
_PyWideStringList_Extend
_PyWindowsConsoleIO_Type
_Py_BreakPoint
_Py_BuildValue_SizeT
_Py_CheckFunctionResult
_Py_CheckRecursiveCall
_Py_ClearArgcArgv
_Py_ClearStandardStreamEncoding
_Py_CoerceLegacyLocale
_Py_Dealloc
_Py_DecRef
_Py_DecodeLocaleEx
_Py_DecodeUTF8Ex
_Py_DecodeUTF8_surrogateescape
_Py_DisplaySourceLine
_Py_DumpASCII
_Py_DumpDecimal
_Py_DumpExtensionModules
_Py_DumpHexadecimal
_Py_DumpTraceback
_Py_DumpTracebackThreads
_Py_EllipsisObject
_Py_EncodeLocaleEx
_Py_EncodeLocaleRaw
_Py_EncodeUTF8Ex
_Py_FalseStruct
_Py_FatalErrorFormat
_Py_FatalErrorFunc
_Py_FatalError_TstateNULL
_Py_FatalRefcountErrorFunc
_Py_FdIsInteractive
_Py_FreeCharPArray
_Py_GetAllocatedBlocks
_Py_GetConfig
_Py_GetConfigsAsDict
_Py_GetEnv
_Py_GetErrorHandler
_Py_GetForceASCII
_Py_GetLocaleEncoding
_Py_GetLocaleEncodingObject
_Py_GetLocaleconvNumeric
_Py_Get_Getpath_CodeObject
_Py_HandleSystemExit
_Py_HasFileSystemDefaultEncodeErrors
_Py_HashBytes
_Py_HashDouble
_Py_HashPointer
_Py_HashPointerRaw
_Py_HashRandomization_Init
_Py_HashSecret
_Py_IncRef
_Py_InitializeMain
_Py_IsCoreInitialized
_Py_IsFinalizing
_Py_IsLocaleCoercionTarget
_Py_LegacyLocaleDetected
_Py_NewInterpreter
_Py_NewReference
_Py_NoneStruct
_Py_NotImplementedStruct
_Py_PackageContext
_Py_PreInitializeFromConfig
_Py_PreInitializeFromPyArgv
_Py_ResetForceASCII
_Py_RestoreSignals
_Py_SetLocaleFromEnv
_Py_SetProgramFullPath
_Py_SourceAsString
_Py_SwappedOp
_Py_TrueStruct
_Py_UTF8_Edit_Cost
_Py_UnhandledKeyboardInterrupt
_Py_UniversalNewlineFgetsWithSize
_Py_VaBuildStack
_Py_VaBuildStack_SizeT
_Py_VaBuildValue_SizeT
_Py_WriteIndent
_Py_WriteIndentedMargin
_Py_add_one_to_index_C
_Py_add_one_to_index_F
_Py_ascii_whitespace
_Py_c_abs
_Py_c_diff
_Py_c_neg
_Py_c_pow
_Py_c_prod
_Py_c_quot
_Py_c_sum
_Py_closerange
_Py_convert_optional_to_ssize_t
_Py_ctype_table
_Py_ctype_tolower
_Py_ctype_toupper
_Py_device_encoding
_Py_dg_dtoa
_Py_dg_freedtoa
_Py_dg_infinity
_Py_dg_stdnan
_Py_dg_strtod
_Py_dup
_Py_fopen_obj
_Py_fstat
_Py_fstat_noraise
_Py_get_env_flag
_Py_get_inheritable
_Py_get_osfhandle
_Py_get_osfhandle_noraise
_Py_get_xoption
_Py_gitidentifier
_Py_gitversion
_Py_hashtable_clear
_Py_hashtable_compare_direct
_Py_hashtable_destroy
_Py_hashtable_foreach
_Py_hashtable_get
_Py_hashtable_hash_ptr
_Py_hashtable_new
_Py_hashtable_new_full
_Py_hashtable_set
_Py_hashtable_size
_Py_hashtable_steal
_Py_normalize_encoding() failed
_Py_normpath
_Py_open
_Py_open_noraise
_Py_open_osfhandle
_Py_open_osfhandle_noraise
_Py_parse_inf_or_nan
_Py_read
_Py_set_inheritable
_Py_set_inheritable_async_safe
_Py_stat
_Py_str_to_int
_Py_strhex
_Py_strhex_bytes
_Py_strhex_bytes_with_sep
_Py_strhex_with_sep
_Py_string_to_number_with_underscores
_Py_tracemalloc_config
_Py_wfopen
_Py_wgetcwd
_Py_write
_Py_write_noraise
_RAW_MAGIC_NUMBER
_R_pS
_R`La
_RawIOBase
_SEP
_STRUCT_TM_ITEMS
_StS3a
_TempModule
_TempModule.__enter__
_TempModule.__exit__
_TempModule.__init__
_TextIOBase
_WindowsConsoleIO
_WindowsConsoleIO has invalid mode
_WindowsConsoleIO(file, mode='r', closefd=True, opener=None)\n--\n\nOpen a console buffer by file descriptor.\n\nThe mode can be 'rb' (default), or 'wb' for reading or writing bytes. All\nother mode characters will be ignored. Mode 'b' will be assumed if it is\nomitted. The *opener* parameter is always ignored.
_Woa
_[SSGx
_\b^bdbabfbbbYb`bZbeb
_\c\g\h\i\p\
_\nbSbTbRbQb
_\tbPb
__C_specific_handler
__IOBase_closed
__PYVENV_LAUNCHER__
__abc_tpflags__
__abc_tpflags__ cannot be both Py_TPFLAGS_SEQUENCE and Py_TPFLAGS_MAPPING
__about__
__abs__($self, /)\n--\n\nabs(self)
__abstractmethods__
__acrt_iob_func
__add__($self, value, /)\n--\n\nReturn self+value.
__aenter__
__aexit__
__aiter__
__aiter__($self, /)\n--\n\nReturn an awaitable, that resolves in asynchronous iterator.
__alloc__
__and__($self, value, /)\n--\n\nReturn self&value.
__anext__
__anext__($self, /)\n--\n\nReturn a value or raise StopAsyncIteration.
__annotations__
__annotations__ must be set to a dict object
__author__
__await__
__await__ returned a non-iterable
__await__($self, /)\n--\n\nReturn an iterator to be used in await expression.
__await__() returned a coroutine
__await__() returned non-iterator of type '%.100s'
__bases__
__bases__ is not tuple
__basicsize__
__bool__ should return bool, returned %s
__bool__($self, /)\n--\n\nTrue if self else False
__breakpointhook__
__build_class__
__build_class__ not found
__build_class__(func, name, /, *bases, [metaclass], **kwds) -> class\n\nInternal helper function used by the class statement.
__build_class__: func must be a function
__build_class__: name is not a string
__build_class__: not enough arguments
__builtins__
__bytes__
__bytes__ returned non-bytes (type %.200s)
__bytes__($self, /)\n--\n\nConvert this value to exact type bytes.
__cached__
__call__($self, /, *args, **kwargs)\n--\n\nCall self as a function.
__callback__
__cantrace__
__cause__
__cause__ may not be deleted
__ceil__($self, /)\n--\n\nReturn the ceiling as an Integral.
__check_eager_loader
__class__
__class__ assignment only supported for mutable types or ModuleType subclasses
__class__ must be set to a class, not '%s' object
__class__ not set defining %.200R as %.200R. Was __classcell__ propagated to type.__new__?
__class__ set to %.200R defining %.200R as %.200R
__class_getitem__
__classcell__
__classcell__ must be a nonlocal cell, not %.200R
__closure__
__code__ must be set to a code object
__complex__
__complex__ returned non-complex (type %.200s)
__complex__ returned non-complex (type %.200s).  The ability to return an instance of a strict subclass of complex is deprecated, and may be removed in a future version of Python.
__complex__($self, /)\n--\n\nConvert this value to exact type complex.
__contains__
__contains__($self, key, /)\n--\n\nReturn key in self.
__contains__($self, key, /)\n--\n\nTrue if the dictionary has the specified key, else False.
__context__
__context__ may not be deleted
__copy__($self, /)\n--\n\n
__copy__($self, /)\n--\n\nReturn a copy of the array.
__copy__() takes no arguments
__create_codec
__create_codec($module, arg, /)\n--\n\n
__daylight
__debug__
__deepcopy__
__deepcopy__($self, memo, /)\n--\n\n
__deepcopy__($self, unused, /)\n--\n\nReturn a copy of the array.
__defaults__
__defaults__ must be set to a tuple object
__delattr__
__delattr__($self, name, /)\n--\n\nImplement delattr(self, name).
__delete__
__delete__($self, instance, /)\n--\n\nDelete an attribute of instance.
__delitem__
__delitem__($self, key, /)\n--\n\nDelete self[key].
__dict__ must be set to a dictionary, not a '%.200s'
__dict__ slot disallowed: we already got one
__dictoffset__
__dir__($self, /)\n--\n\nDefault dir() implementation.
__dir__($self, /)\n--\n\nSpecialized __dir__ implementation for types.
__dir__() -> list\nspecialized dir() implementation
__displayhook__
__divmod__
__divmod__($self, value, /)\n--\n\nReturn divmod(self, value).
__enter__
__enter__($self, /)\n--\n\n
__eq__($self, value, /)\n--\n\nReturn self==value.
__excepthook__
__exit__($self, /, exc_type, exc_value, traceback)\n--\n\n
__flags__
__float__
__float__($self, /)\n--\n\nfloat(self)
__floor__
__floor__($self, /)\n--\n\nReturn the floor as an Integral.
__floordiv__
__floordiv__($self, value, /)\n--\n\nReturn self//value.
__format__
__format__ must return a str, not %.200s
__format__($self, format_spec, /)\n--\n\n
__format__($self, format_spec, /)\n--\n\nConvert to a string according to format_spec.
__format__($self, format_spec, /)\n--\n\nDefault object formatter.
__format__($self, format_spec, /)\n--\n\nFormats the float according to format_spec.
__format__($self, format_spec, /)\n--\n\nReturn a formatted version of the string as described by format_spec.
__fpe_flt_rounds
__fspath__
__fspath__($self, /)\n--\n\nReturns the path for the entry.
__future__
__ge__($self, value, /)\n--\n\nReturn self>=value.
__get__($self, instance, owner=None, /)\n--\n\nReturn an attribute of instance, which is of type owner.
__get__(None, None) is invalid
__getattr__
__getattribute__
__getattribute__($self, name, /)\n--\n\nReturn getattr(self, name).
__getformat__
__getformat__($type, typestr, /)\n--\n\nYou probably don't want to use this function.\n\n  typestr\n    Must be 'double' or 'float'.\n\nIt exists mainly to be used in Python's test suite.\n\nThis function returns whichever of 'unknown', 'IEEE, big-endian' or 'IEEE,\nlittle-endian' best describes the format of floating point numbers used by the\nC type named by typestr.
__getformat__() argument 1 must be 'double' or 'float'
__getinitargs__
__getitem__
__getitem__($self, key, /)\n--\n\nReturn self[key].
__getnewargs__
__getnewargs__ should return a tuple, not '%.200s'
__getnewargs__($self, /)\n--\n\n
__getnewargs_ex__
__getnewargs_ex__ should return a tuple of length 2, not %zd
__getnewargs_ex__ should return a tuple, not '%.200s'
__getstate__
__getstate__($self, /)\n--\n\nHelper for pickle.
__globals__
__gt__($self, value, /)\n--\n\nReturn self>value.
__hash__ method should return an integer
__hash__($self, /)\n--\n\nReturn hash(self).
__hello__
__hello_alias__
__hello_only__
__iadd__($self, value, /)\n--\n\nImplement self+=value.
__iadd__($self, value, /)\n--\n\nReturn self+=value.
__iand__($self, value, /)\n--\n\nReturn self&=value.
__ifloordiv__
__ifloordiv__($self, value, /)\n--\n\nReturn self//=value.
__ilshift__
__ilshift__($self, value, /)\n--\n\nReturn self<<=value.
__imatmul__
__imatmul__($self, value, /)\n--\n\nReturn self@=value.
__imod__($self, value, /)\n--\n\nReturn self%=value.
__import__
__import__ not found
__import__($module, /, name, globals=None, locals=None, fromlist=(),\n           level=0)\n--\n\nImport a module.\n\nBecause this function is meant for use by the Python\ninterpreter and not for general use, it is better to use\nimportlib.import_module() to programmatically import a module.\n\nThe globals argument is only used to determine the context;\nthey are not modified.  The locals argument is unused.  The fromlist\nshould be a list of names to emulate ``from name import ...``, or an\nempty list to emulate ``import name``.\nWhen importing a module from a package, note that __import__('A.B', ...)\nreturns package A when fromlist is empty, but its submodule B when\nfromlist is not empty.  The level argument is used to determine whether to\nperform absolute or relative imports: 0 is absolute, while a positive number\nis the number of parent directories to search relative to the current module.
__imul__($self, value, /)\n--\n\nImplement self*=value.
__imul__($self, value, /)\n--\n\nReturn self*=value.
__index__
__index__ returned non-int (type %.200s)
__index__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.
__index__($self, /)\n--\n\nReturn self converted to an integer, if self is suitable for use as an index into a list.
__init__($self, /, *args, **kwargs)\n--\n\nInitialize self.  See help(type(self)) for accurate signature.
__init__() should return None, not '%.200s'
__init__.py
__init__.pyc
__init_subclass__
__initializing__
__instancecheck__
__instancecheck__($self, instance, /)\n--\n\nCheck if an object is an instance.
__int__ returned non-int (type %.200s)
__int__ returned non-int (type %.200s).  The ability to return an instance of a strict subclass of int is deprecated, and may be removed in a future version of Python.
__int__($self, /)\n--\n\nint(self)
__interactivehook__
__invert__
__invert__($self, /)\n--\n\n~self
__ior__($self, value, /)\n--\n\nReturn self|=value.
__ipow__($self, value, /)\n--\n\nReturn self**=value.
__irshift__
__irshift__($self, value, /)\n--\n\nReturn self>>=value.
__isabstractmethod__
__isub__($self, value, /)\n--\n\nReturn self-=value.
__itemsize__
__iter__($self, /)\n--\n\nImplement iter(self).
__itruediv__
__itruediv__($self, value, /)\n--\n\nReturn self/=value.
__ixor__($self, value, /)\n--\n\nReturn self^=value.
__kwdefaults__
__kwdefaults__ must be set to a dict object
__lO%0g_Q_FQU_X_Y_\_P
__le__($self, value, /)\n--\n\nReturn self<=value.
__len__($self, /)\n--\n\nReturn len(self).
__len__() should return >= 0
__length_hint__
__length_hint__ must be an integer, not %.100s
__length_hint__() should return >= 0
__lltrace__
__loader__
__lshift__
__lshift__($self, value, /)\n--\n\nReturn self<<value.
__lt__($self, value, /)\n--\n\nReturn self<value.
__map_big5
__map_cp949
__map_gb2312
__map_gbcommon
__map_jisx0208
__map_jisx0212
__map_jisx0213_1_bmp
__map_jisx0213_1_emp
__map_jisx0213_2_bmp
__map_jisx0213_2_emp
__map_jisx0213_bmp
__map_jisx0213_emp
__map_jisx0213_pair
__map_jisxcommon
__map_ksx1001
__match_args__
__match_args__ elements must be strings (got %s)
__matmul__
__matmul__($self, value, /)\n--\n\nReturn self@value.
__missing__
__missing__(key) # Called by __getitem__ for missing key; pseudo-code:\n  if self.default_factory is None: raise KeyError((key,))\n  self[key] = value = self.default_factory()\n  return value\n
__mod__($self, value, /)\n--\n\nReturn self%value.
__module__
__mro_entries__
__mro_entries__ must return a tuple
__mul__($self, value, /)\n--\n\nReturn self*value.
__name__ must be a string
__name__ must be set to a string object
__ne__($self, value, /)\n--\n\nReturn self!=value.
__neg__($self, /)\n--\n\n-self
__new__($type, *args, **kwargs)\n--\n\nCreate and return a new object.  See help(type) for accurate signature.
__new__() called with non-type 'self'
__new__(type, /, *args, **kwargs)\n--\n\nCreate and return new object.  See help(type) for accurate signature.
__newobj__
__newobj__ arglist is empty
__newobj_ex__
__next__($self, /)\n--\n\nImplement next(self).
__notes__
__objclass__
__or__($self, value, /)\n--\n\nReturn self|value.
__orig_bases__
__orig_class__
__origin__
__origname__
__p__wenviron
__package__
__package__ != __spec__.parent
__package__ != __spec__.parent (
__package__ not set to a string
__parameters__
__path__ attribute not found on 
__phello__
__phello__.__init__
__phello__.ham
__phello__.ham.__init__
__phello__.ham.eggs
__phello__.spam
__phello_alias__
__phello_alias__.spam
__pos__($self, /)\n--\n\n+self
__pow__($self, value, mod=None, /)\n--\n\nReturn pow(self, value, mod).
__prepare__
__prepare__() -> dict\nused to create the namespace for the class statement
__pycache__
__qualname__
__qualname__ must be set to a string object
__radd__($self, value, /)\n--\n\nReturn value+self.
__rand__($self, value, /)\n--\n\nReturn value&self.
__rdivmod__
__rdivmod__($self, value, /)\n--\n\nReturn divmod(value, self).
__reduce__
__reduce__ must return a string or tuple
__reduce__($self, /)\n--\n\n
__reduce__($self, /)\n--\n\nHelper for pickle.
__reduce__($self, /)\n--\n\nImplement pickle support.
__reduce__($self, /)\n--\n\nImplement pickling support.
__reduce__($self, /)\n--\n\nReturn state information for pickling.
__reduce__() -> (cls, state)
__reduce__() takes no arguments
__reduce_ex__
__reduce_ex__ argument should be an integer
__reduce_ex__($self, proto=0, /)\n--\n\nReturn state information for pickling.
__reduce_ex__($self, protocol, /)\n--\n\nHelper for pickle.
__reduce_ex__($self, value, /)\n--\n\nReturn state information for pickling.
__reduce_ex__(proto) -> (cls, state)
__repr__ returned non-string (type %.200s)
__repr__($self, /)\n--\n\nReturn repr(self).
__reversed__
__reversed__($self, /)\n--\n\nReturn a reverse iterator over the dict keys.
__reversed__($self, /)\n--\n\nReturn a reverse iterator over the list.
__rfloordiv__
__rfloordiv__($self, value, /)\n--\n\nReturn value//self.
__rlshift__
__rlshift__($self, value, /)\n--\n\nReturn value<<self.
__rmatmul__
__rmatmul__($self, value, /)\n--\n\nReturn value@self.
__rmod__($self, value, /)\n--\n\nReturn value%self.
__rmul__($self, value, /)\n--\n\nReturn value*self.
__ror__($self, value, /)\n--\n\nReturn value|self.
__round__
__round__($self, ndigits=<unrepresentable>, /)\n--\n\nRounding an Integral returns itself.\n\nRounding with an ndigits argument also returns an integer.
__round__($self, ndigits=None, /)\n--\n\nReturn the Integral closest to x, rounding half toward even.\n\nWhen an argument is passed, work like built-in round(x, ndigits).
__rpow__($self, value, mod=None, /)\n--\n\nReturn pow(value, self, mod).
__rrshift__
__rrshift__($self, value, /)\n--\n\nReturn value>>self.
__rshift__
__rshift__($self, value, /)\n--\n\nReturn self>>value.
__rsub__($self, value, /)\n--\n\nReturn value-self.
__rtruediv__
__rtruediv__($self, value, /)\n--\n\nReturn value/self.
__rxor__($self, value, /)\n--\n\nReturn value^self.
__self_class__
__set__($self, instance, value, /)\n--\n\nSet an attribute of instance to value.
__set_name__
__set_name__() takes 2 positional arguments but %d were given
__setattr__
__setattr__($self, name, value, /)\n--\n\nImplement setattr(self, name, value).
__setitem__
__setitem__($self, key, value, /)\n--\n\nSet self[key] to value.
__setstate__
__setstate__($self, state, /)\n--\n\nSet state information for unpickling.
__setup
__sizeof__
__sizeof__($self, /)\n--\n\nReturn memory consumption of the type object.
__sizeof__($self, /)\n--\n\nReturn the size of the list in memory, in bytes.
__sizeof__($self, /)\n--\n\nReturn the size of the string in memory, in bytes.
__sizeof__($self, /)\n--\n\nReturns size in memory, in bytes.
__sizeof__($self, /)\n--\n\nReturns the size of the bytearray object in memory, in bytes.
__sizeof__($self, /)\n--\n\nSize of object in memory, in bytes.
__sizeof__($self, /)\n--\n\nSize of the array in memory, in bytes.
__sizeof__() should return >= 0
__slotnames__
__slots__
__slots__ items must be strings, not '%.200s'
__slots__ must be identifiers
__slotsname__ changed size during iteration
__spec__.parent must be a string
__std_type_info_destroy_list
__stderr__
__stdin__
__stdio_common_vfprintf
__stdio_common_vsprintf
__stdio_common_vswprintf
__stdout__
__str__ returned non-string (type %.200s)
__str__($self, /)\n--\n\nReturn str(self).
__sub__($self, value, /)\n--\n\nReturn self-value.
__subclasscheck__
__subclasscheck__($self, subclass, /)\n--\n\nCheck if a class is a subclass.
__subclasses__
__subclasses__($self, /)\n--\n\nReturn a list of immediate subclasses.
__subclasses__() must return a list
__subclasshook__
__subclasshook__ must return either False, True, or NotImplemented
__suppress_context__
__sys_errlist
__sys_nerr
__text_signature__
__thisclass__
__timezone
__traceback__
__traceback__ may not be deleted
__traceback__ must be a traceback or None
__truediv__
__truediv__($self, value, /)\n--\n\nReturn self/value.
__trunc__
__trunc__ returned non-Integral (type %.200s)
__trunc__($self, /)\n--\n\nReturn the Integral closest to x between 0 and x.
__typing_is_unpacked_typevartuple__
__typing_prepare_subst__
__typing_subst__
__typing_unpacked_tuple_args__
__unpacked__
__unraisablehook__
__vectorcalloffset__
__version__
__warningregistry__
__weaklistoffset__
__weakref__
__weakref__ slot disallowed: either we already got one, or __itemsize__ != 0
__weakrefoffset__
__wrapped__
__xor__($self, value, /)\n--\n\nReturn self^value.
_a\:`a2;IBaa
_abc
_abc._abc_data
_abc_cache
_abc_cache: 
_abc_caches_clear
_abc_impl
_abc_impl is set to a wrong type
_abc_init
_abc_init($module, self, /)\n--\n\nInternal ABC helper for class set-up. Should be never used outside abc module.
_abc_instancecheck
_abc_instancecheck($module, self, instance, /)\n--\n\nInternal ABC helper for instance checks. Should be never used outside abc module.
_abc_negative_cache
_abc_negative_cache: 
_abc_negative_cache_version
_abc_negative_cache_version: 
_abc_register
_abc_register($module, self, subclass, /)\n--\n\nInternal ABC helper for subclasss registration. Should be never used outside abc module.
_abc_registry
_abc_registry: 
_abc_registry_clear
_abc_subclasscheck
_abc_subclasscheck($module, self, subclass, /)\n--\n\nInternal ABC helper for subclasss checks. Should be never used outside abc module.
_abspath_fallback
_acquire_restore
_acquire_restore(state) -> None\n\nFor internal use by `threading.Condition`.
_add
_add_dll_directory
_add_dll_directory($module, /, path)\n--\n\nAdd a path to the DLL search path.\n\nThis search path is used when resolving dependencies for imported\nextension modules (the module itself is resolved through sys.path),\nand also by ctypes.\n\nReturns an opaque value that may be passed to os.remove_dll_directory\nto remove this directory from the search path.
_aix_support
_annotation
_array_reconstructor
_array_reconstructor($module, arraytype, typecode, mformat_code, items,\n                     /)\n--\n\nInternal. Used for pickling support.
_ast
_asyncio
_attributes
_avh
_base_executable
_beginthreadex
_bisect
_blake2
_blake2.blake2b
_blake2.blake2s
_blake2b provides BLAKE2b for hashlib\n
_blksize
_blocking_on
_bootstrap
_bootstrap_external
_bootstrap_module
_bootsubprocess
_buffer_decode
_buffer_encode
_builtin_from_name
_bz2
_cache_bytecode
_cached
_calc___package__
_calc_mode
_call_with_frames_removed
_capacity_bits
_cexit
_channel_id
_checkClosed
_checkReadable
_checkSeekable
_checkWritable
_check_arg_types
_check_bytes
_check_methods
_check_name
_check_name.<locals>._check_name_wrapper
_check_name.<locals>._wrap
_check_name_wrapper
_chsize_s
_classify_pyc
_clear
_clear() -> None\n\nClear the list of previously registered exit functions.
_clear_type_cache
_clear_type_cache($module, /)\n--\n\nClear the internal type lookup cache.
_clearcache
_clearcache($module, /)\n--\n\nClear the internal cache.
_close
_co_code_adaptive
_code_to_hash_pyc
_code_to_timestamp_pyc
_code_type
_codecs
_codecs_cn
_codecs_hk
_codecs_iso2022
_codecs_jp
_codecs_kr
_codecs_tw
_collections
_collections._deque_iterator
_collections._deque_reverse_iterator
_collections._tuplegetter
_collections_abc
_commit
_compare_digest
_compare_digest($module, a, b, /)\n--\n\nReturn 'a == b'.\n\nThis function uses an approach designed to prevent\ntiming analysis, making it appropriate for cryptography.\n\na and b must both be of the same type: either str (ASCII only),\nor any bytes-like object.\n\nNote: If a and b are of different lengths, or if an error occurs,\na timing attack could theoretically reveal information about the\ntypes and lengths of a and b--but not their values.
_compat_pickle
_compat_pickle.IMPORT_MAPPING should be a dict, not %.200s
_compat_pickle.IMPORT_MAPPING values should be strings, not %.200s
_compat_pickle.NAME_MAPPING should be a dict, not %.200s
_compat_pickle.NAME_MAPPING values should be 2-tuples, not %.200s
_compat_pickle.NAME_MAPPING values should be pairs of str, not (%.200s, %.200s)
_compat_pickle.REVERSE_IMPORT_MAPPING should be a dict, not %.200s
_compat_pickle.REVERSE_IMPORT_MAPPING values should be strings, not %.200s
_compat_pickle.REVERSE_NAME_MAPPING should be a dict, not %.200s
_compat_pickle.REVERSE_NAME_MAPPING values should be 2-tuples, not %.200s
_compat_pickle.REVERSE_NAME_MAPPING values should be pairs of str, not (%.200s, %.200s)
_compile_bytecode
_compile_source
_compression
_config_init
_configure_narrow_argv
_contextvars
_contextvars.Context
_contextvars.ContextVar
_contextvars.Token
_cookie
_coro
_count
_count() -> integer\n\nReturn the number of currently running Python threads, excluding\nthe main thread. The returned number comprises all threads created\nthrough `start_new_thread()` as well as `threading.Thread`, and not\nyet finished.\n\nThis function is meant for internal and specialized purposes only.\nIn most applications `threading.enumerate()` should be used instead.
_count_elements
_count_elements($module, mapping, iterable, /)\n--\n\nCount elements in the iterable, updating the mapping
_createenviron
_createenviron.<locals>.check_str
_createenviron.<locals>.decode
_createenviron.<locals>.encode
_createenviron.<locals>.encodekey
_crypt
_csv
_csv.Dialect
_csv.Error
_csv.reader
_csv.writer
_ctypes
_current_exceptions
_current_exceptions($module, /)\n--\n\nReturn a dict mapping each thread's identifier to its current raised exception.\n\nThis function should be used for specialized purposes only.
_current_frames
_current_frames($module, /)\n--\n\nReturn a dict mapping each thread's thread id to its current stack frame.\n\nThis function should be used for specialized purposes only.
_current_indent_level
_curses
_curses_panel
_cwait
_d.pyd
_data
_datetime
_dbm
_dclass
_dealloc_warn
_debugmallocstats
_debugmallocstats($module, /)\n--\n\nPrint summary info to stderr about the state of pymalloc's structures.\n\nIn Py_DEBUG mode, also perform some expensive internal consistency\nchecks.
_decimal
_defaultaction
_destroy
_dialects
_dump_registry
_dup
_dup2
_e`zf`l
_elementtree
_empty_charbuffer
_enablelegacywindowsfsencoding
_enablelegacywindowsfsencoding($module, /)\n--\n\nChanges the default filesystem encoding to mbcs:replace.\n\nThis is done for consistency with earlier versions of Python. See PEP\n529 for more information.\n\nThis is equivalent to defining the PYTHONLEGACYWINDOWSFSENCODING\nenvironment variable before launching Python.
_endthreadex
_enter_buffered_busy
_epoch
_eq_mtime
_errno
_excepthook
_exec
_execute_onexit_table
_execvpe
_exists
_exit
_exit($module, /, status)\n--\n\nExit to the system with specified status, without normal exit processing.
_expand
_extension_cache
_extension_registry
_f><B9[f'QM
_fTfAfOfVfafWfwf
_false
_fatal_error_c_thread
_fdclass
_fdopen
_feature_version
_fields
_filemode_table
_fileno
_files
_fill_cache
_filters_mutated
_finalizing
_find_and_load
_find_and_load_unlocked
_find_module_shim
_find_parent_path_names
_find_spec
_find_spec_from_path
_find_spec_legacy
_fix_co_filename
_fix_co_filename($module, code, path, /)\n--\n\nChanges code.co_filename to specify the passed-in file path.\n\n  code\n    Code object to change.\n  path\n    File path to use.
_fix_up_module
_framework
_from_iterable
_frozen_importlib
_frozen_importlib_external
_frozen_module_names
_frozen_module_names($module, /)\n--\n\nReturns the list of available frozen modules.
_fscodec
_fscodec.<locals>.fsdecode
_fscodec.<locals>.fsencode
_fspath
_functools
_fwalk
_gcd_import
_gdbm
_get_bothseps
_get_cached
_get_code_from_file
_get_data
_get_decompress_func
_get_dump
_get_dump($module, self, /)\n--\n\nInternal ABC helper for cache and registry debugging.\n\nReturn shallow copies of registry, of both caches, and\nnegative cache version. Don't call this function directly,\ninstead use ABC._dump_registry() for a nice repr.
_get_exports_list
_get_exports_list.<locals>.<listcomp>
_get_main_module_details
_get_module_code
_get_module_details
_get_module_info
_get_module_lock
_get_module_lock.<locals>.cb
_get_module_path
_get_mtime_and_size_of_source
_get_object_traceback
_get_object_traceback($module, obj, /)\n--\n\nGet the traceback where the Python object obj was allocated.\n\nReturn a tuple of (filename: str, lineno: int) tuples.\nReturn None if the tracemalloc module is disabled or did not\ntrace the allocation of the object.
_get_osfhandle
_get_parent_path
_get_path
_get_pyc_source
_get_sep
_get_sourcefile
_get_spec
_get_supported_file_loaders
_get_traces
_get_traces($module, /)\n--\n\nGet traces of all memory blocks allocated by Python.\n\nReturn a list of (size: int, traceback: tuple) tuples.\ntraceback is a tuple of (filename: str, lineno: int) tuples.\n\nReturn an empty list if the tracemalloc module is disabled.
_getch
_getche
_getdefaultlocale
_getdefaultlocale($module, /)\n--\n\n
_getdiskusage
_getdiskusage($module, /, path)\n--\n\nReturn disk usage statistics about the given path as a (total, free) tuple.
_getfinalpathname
_getfinalpathname($module, path, /)\n--\n\nA helper function for samepath on windows.
_getfinalpathname_nonstrict
_getframe
_getframe($module, depth=0, /)\n--\n\nReturn a frame object from the call stack.\n\nIf optional integer depth is given, return the frame object that many\ncalls below the top of the stack.  If that is deeper than the call\nstack, ValueError is raised.  The default for depth is zero, returning\nthe frame at the top of the call stack.\n\nThis function should be used for internal and specialized purposes\nonly.
_getfullpathname
_getfullpathname($module, path, /)\n--\n\n
_getpid
_getquickenedcount
_getquickenedcount($module, /)\n--\n\n
_getuserbase
_getuserbase.<locals>.joinuser
_getvolumepathname
_getvolumepathname($module, /, path)\n--\n\nA helper function for ismount on Win32.
_getwch
_getwche
_git
_globals
_gmtime64_s
_grouper
_handle_fromlist
_hash
_hashlib
_have_functions
_heapify_max
_heapify_max($module, heap, /)\n--\n\nMaxheap variant of heapify.
_heapmin
_heappop_max
_heappop_max($module, heap, /)\n--\n\nMaxheap variant of heappop.
_heapq
_heapreplace_max
_heapreplace_max($module, heap, item, /)\n--\n\nMaxheap variant of heapreplace.
_home
_iHIZHbi
_iJC
_idfunc
_idfunc($module, x, /)\n--\n\n
_imp
_imp_module
_importing_zlib
_init_main
_init_module_attrs
_init_pathinfo
_initialize_narrow_environment
_initialize_onexit_table
_initializing
_initterm
_initterm_e
_install
_install_external_importers
_install_importlib
_inverted_registry
_inverted_registry[%ld] isn't a 2-tuple of strings
_io.BufferedRWPair
_io.BufferedRandom
_io.BufferedReader
_io.BufferedWriter
_io.BytesIO
_io.FileIO
_io.IncrementalNewlineDecoder
_io.StringIO
_io.TextIOWrapper
_io._BufferedIOBase
_io._BytesIOBuffer
_io._IOBase
_io._RawIOBase
_io._TextIOBase
_io._WindowsConsoleIO
_is_dir
_is_owned
_is_owned() -> bool\n\nFor internal use by `threading.Condition`.
_is_param_expr
_is_param_expr.<locals>.<genexpr>
_is_python_build
_is_python_buildc
_is_text_encoding
_isatty
_isdir
_isolated_interpreter
_iterencode(obj, _current_indent_level) -> iterable
_iterencode_list needs a sequence
_joinrealpath
_json
_json.Encoder
_json.Scanner
_kbhit
_last_epoch
_last_parent_path
_legacy_get_spec
_load
_load_backward_compatible
_load_module_shim
_load_unlocked
_loaders
_localdummy_destroyed
_locale
_localtime64_s
_lock
_lock_unlock_module
_locking
_lseek
_lseeki64
_lsprof
_lsprof.Profiler
_lsprof.profiler_entry
_lsprof.profiler_subentry
_lzma
_mZ@h4k
_make_relax_case
_make_relax_case.<locals>._relax_case
_mapping
_markupbase
_md5
_md5.md5
_memory_release(): negative export count
_mimetypes_read_windows_registry
_mimetypes_read_windows_registry($module, /, on_type_read)\n--\n\nOptimized function for reading all known MIME types from the registry.\n\n*on_type_read* is a callable taking *type* and *ext* arguments, as for\nMimeTypes.add_type.
_mktime64
_mode
_module_locks
_module_repr
_module_repr_from_spec
_module_to_load
_module_type
_msi
_multibytecodec
_multibytecodec.MultibyteCodec
_multibytecodec.MultibyteIncrementalDecoder
_multibytecodec.MultibyteIncrementalEncoder
_multibytecodec.MultibyteStreamReader
_multibytecodec.MultibyteStreamWriter
_multiprocessing
_name
_names
_ncallbacks
_ncallbacks() -> int\n\nReturn the number of registered exit functions.
_new_module
_normal_dist_inv_cdf
_normal_dist_inv_cdf($module, p, mu, sigma, /)\n--\n\n
_normalize_line_endings
_nt_readlink
_object_name
_onceregistry
_opcode
_open
_open_osfhandle
_open_registry
_operator
_optimize
_orR
_osx_support
_overlapped
_override_frozen_modules_for_tests
_override_frozen_modules_for_tests($module, override, /)\n--\n\n(internal-only) Override PyConfig.use_frozen_modules.\n\n(-1: "off", 1: "on", 0: no override)\nSee frozen_modules() in Lib/test/support/import_helper.py.
_pDx
_pack_uint32
_parse_dostime
_path
_path_cache
_path_finder
_path_hooks
_path_importer_cache
_path_is_mode_type
_path_isabs
_path_isdir
_path_isfile
_path_join
_path_join.<locals>.<listcomp>
_path_mtime
_path_normpath
_path_normpath($module, /, path)\n--\n\nBasic path normalization.
_path_split
_path_split.<locals>.<genexpr>
_path_splitroot
_path_splitroot($module, /, path)\n--\n\nRemoves everything after the root on Win32.
_path_stat
_pathseps_with_colon
_pickle
_pickle.Pdata
_pickle.PickleError
_pickle.Pickler
_pickle.PicklerMemoProxy
_pickle.PicklingError
_pickle.Unpickler
_pickle.UnpicklerMemoProxy
_pickle.UnpicklingError
_posixshmem
_posixsubprocess
_proc
_putch
_putwch
_py_abc
_pydecimal
_pyio
_queue
_raise_exception
_random
_random.Random
_rate_bits
_read
_read_directory
_read_null
_read_null(): read from NULL, raise a SIGSEGV or SIGBUS signal depending on the platform
_readlink_deep
_recalculate
_recursion_count
_recursion_count() -> int\n\nFor internal use by reentrancy checks.
_reduce_ex
_register_builtins_for_crossinterpreter_data
_relax_case
_relaxed_path_cache
_release_save
_release_save() -> tuple\n\nFor internal use by `threading.Condition`.
_remove_dead_weakref
_remove_dead_weakref($module, dct, key, /)\n--\n\nAtomically remove key from dict if it points to a dead weakref.
_remove_dll_directory
_remove_dll_directory($module, /, cookie)\n--\n\nRemoves a path from the DLL search path.\n\nThe parameter is an opaque value that was returned from\nos.add_dll_directory. You can only remove directories that you added\nyourself.
_requires_builtin
_requires_builtin.<locals>._requires_builtin_wrapper
_requires_builtin_wrapper
_requires_frozen
_requires_frozen.<locals>._requires_frozen_wrapper
_requires_frozen_wrapper
_reset_caches
_reset_caches($module, self, /)\n--\n\nInternal ABC helper to reset both caches of a given class.\n\nShould be only used by refleak.py
_reset_registry
_reset_registry($module, self, /)\n--\n\nInternal ABC helper to reset registry of a given class.\n\nShould be only used by refleak.py
_resolve
_resolve_filename
_resolve_name
_run_code
_run_exitfuncs
_run_exitfuncs() -> None\n\nRun all registered exit functions.\n\nIf a callback raises an exception, it is logged with sys.unraisablehook.
_run_module_as_main
_run_module_code
_sanity_check
_saved_module
_saved_value
_scproxy
_script
_script.<locals>.exists
_search_registry
_seh_filter_dll
_sentinel
_set
_set_abort_behavior
_set_bootstrap_module
_set_fileattr
_set_sentinel
_set_sentinel() -> lock\n\nSet a sentinel lock that will be released when the current thread\nstate is finalized (after it is untied from the interpreter).\n\nThis is a private API for the threading module.
_set_thread_local_invalid_parameter_handler
_setmode
_setup
_sha1
_sha1.sha1
_sha256
_sha256.sha224
_sha256.sha256
_sha3
_sha3.sha3_224
_sha3.sha3_256
_sha3.sha3_384
_sha3.sha3_512
_sha3.shake_128
_sha3.shake_256
_sha512
_sha512.sha384
_sha512.sha512
_showwarnmsg
_shutdown
_sigabrt
_sigabrt(): raise a SIGABRT signal
_sigfpe
_sigfpe(): raise a SIGFPE signal
_signal
_sigsegv
_sigsegv(release_gil=False): raise a SIGSEGV signal
_sitebuiltins
_slotnames
_socket
_spawnvef
_spec_from_module
_splitext
_sqlite3
_sre
_sre.SRE_Scanner
_ssl
_stat
_statistics
_stderr
_stdlib_dir
_stream
_stricmp
_string
_strptime
_strptime_datetime
_strptime_time
_struct
_struct.Struct
_struct.unpack_iterator
_subx
_suffix
_symtable
_tee
_tee(iterable, /)\n--\n\nIterator wrapped to make it copyable.
_thread
_thread.RLock
_thread._ExceptHookArgs
_thread._local
_thread._localdummy
_thread.excepthook argument type must be ExceptHookArgs
_thread.lock
_threading_local
_time64
_tkinter
_tokenize
_tokenize.TokenizerIter
_trace
_tracemalloc
_tuplegetter
_type_repr
_typing
_tzset
_u`vaga
_umask
_ungetch
_ungetwch
_uninitialized_submodules
_unmarshal_code
_unpack_uint16
_unpack_uint32
_uuid
_v`vavbvcvdvp@evfvgvhviv
_vagana]aUa
_validate_hash_pyc
_validate_timestamp_pyc
_varname_from_oparg
_varname_from_oparg($self, /, oparg)\n--\n\n(internal-only) Return the local variable name for the given oparg.\n\nWARNING: this method is for internal use only and may change or go away.
_varprog
_varprogb
_verbose_message
_vpath
_walk
_warn_unawaited_coroutine
_warnings
_warnings provides basic warning filtering support.\nIt is a helper module to speed up interpreter start-up.
_warnings.defaultaction must be a string, not '%.200s'
_warnings.filters item %zd isn't a 5-tuple
_warnings.filters must be a list
_warnings.onceregistry must be a dict, not '%.200s'
_wcsicmp
_weakref
_weakrefset
_wexecv
_wexecve
_wfopen
_wgetcwd
_wgetenv
_winapi
_winapi.CreateFile
_winapi.CreateJunction
_winapi.CreateNamedPipe
_winapi.CreatePipe
_winapi.CreateProcess
_winapi.OpenProcess
_winapi.Overlapped
_winapi.TerminateProcess
_wopen
_wputenv
_wputenv_s
_wrap
_wrap_close
_wrap_close.__enter__
_wrap_close.__exit__
_wrap_close.__getattr__
_wrap_close.__init__
_wrap_close.__iter__
_wrap_close.close
_write
_write_atomic
_wspawnv
_wspawnve
_wstat64i32
_wsystem
_xoptions
_xxsubinterpreters
_xxsubinterpreters.ChannelClosedError
_xxsubinterpreters.ChannelEmptyError
_xxsubinterpreters.ChannelError
_xxsubinterpreters.ChannelID
_xxsubinterpreters.ChannelNotEmptyError
_xxsubinterpreters.ChannelNotFoundError
_xxsubinterpreters.RunFailedError
_zip_directory_cache
_zip_searchorder
_zoneinfo
`!a!b!c!d!e!f!g!h!i!
`!a!b!c!d!e!f!g!h!i!!0"0#0$0%0&0'0(0)0ASDSES!
`!a!b!c!d!e!f!g!h!i!j!k!
`"`#`$`,`-`.`0`1`2`3`4`6`7`8`9`:`=`>`@`D`E`F`G`H`I`J`L`N`O`Q`S`T`V`W`X`[`\`^`_```a`e`f`n`q`r`t`u`w`~`
`$`-`3`5`@`G`H`I`L`Q`T`V`W`]`a`g`q`~`
`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$`!a!b!c!d!e!f!g!h!i!
`$a$b$c$d$e$f$g$h$i$t$u$v$w$x$y$z${$|$}$BN\N
`(`M`p`h`b`F`C`l`k`j`d`Ab
`0a0
`0aLaCfDf
`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2
`2cec
`3IC7
`3a3
`4[Vz
`5ktk
`7|Q-NP
`8l4zI2HY5X
`9g=s
`:NMo
`:`Z`A`j`w`_`J`F`M`c`C`d`B`l`k`Y`
`:c?ete
`>Huz8D
`@LtQWu
`BwAK
`G&vj
`IaIh
`IaJa+aEa6a2a.aFa/aOa)a@a bh
`Ibyb
`JfT
`K^RC
`LqCfL^M`
`Oom^
`P9A
`QhajXn=r@r
`UJvJ}VXOt
`\nqWlIl/Ymg*
`\r`)`+`\n`?`!`x`y`{`z`B`j`}`
`]dBt
``from list''
`abc
`cGI
`eqWv
`gaIS
`hah
`i-b*br
`le_3
`nan4
`pL0j=N
`plMWJd*
`rIq
`tAX
`vbwe
`zaz
a ContextVar key was expected, got %R
a __bases__ item causes an inheritance cycle
a byte string of length 1
a bytes-like object is required
a bytes-like object is required, not '%.100s'
a number is required
a real number
a strictly positive integer is required
a tzinfo subclass must implement %s()
a unicode character
a!a"a%a(a)a*a,a-a.a/a0a1a2a3a4a5a6a7a8a9a:a;a<a=a>a@aAaBaCaDaEaFaGaIaKaMaOaPaRaSaTaVaWaXaYaZa[a\a^a_a`aaacadaeafaiajakalamanaoaqarasatavaxayaza{a|a}a~a
a!bbe
a"a*a+a0a1a5a6a7a9aAaEaFaIa^a`alaraxa{a|a
a#oIq>|
a$e\nkakQpXp
a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%
a+R*vl_
a+a0a7a>
a+aJaua
a-bndpd
a.bidodyd
a0n4
a1b^f
a2YT
a2b2J
a2b4b
a2b_base64
a2b_base64($module, data, /, *, strict_mode=False)\n--\n\nDecode a line of base64 data.\n\n  strict_mode\n    When set to True, bytes that are not part of the base64 standard are not allowed.\n    The same applies to excess data after padding (= / ==).
a2b_hex
a2b_hex($module, hexstr, /)\n--\n\nBinary data of hexadecimal representation.\n\nhexstr must contain an even number of hex digits (upper or lower case).\nThis function is also available as "unhexlify()".
a2b_qp
a2b_qp($module, /, data, header=False)\n--\n\nDecode a string of qp-encoded data.
a2b_uu
a2b_uu($module, data, /)\n--\n\nDecode a line of uuencoded data.
a7a!b"b
a7a0a
a7lX
a:ao9AaFa`a|a
a<3L^[S0kNX79WBFm
a@;dH
a@yc
aAigp
aC"Z_H
aFbFcFf
aGa>a(a'aJa?a<a,a4a=aBaDasawaXaYaZakataoaeaqa_a]aSaua
aGe_h_H>!
aH\W,X0XeL~
aIJ7rZ
aIbyb
aKp~p
aNaLaDaMa>a4a'a\ra
aNkXp
aO@pZl
aOIX
aQ'6/
aR#T]
aScS}S
aT_T
aVRO
aWFZ
aWiq
aWo^hCaLI
aWuz
aXdX9
aZqZ
a\na\fa
a\na\va\fa
a\ra]a
a\rbKb
a\vaJb
a^ML~F
a^\njiq
aaOSvt
ab7Lbb
ab\aH{
abbreviation of timezone name
abort
abort($module, /)\n--\n\nAbort the interpreter immediately.\n\nThis function 'dumps core' or otherwise fails in the hardest way possible\non the hosting operating system.  This function never returns.
abs($module, a, /)\n--\n\nSame as abs(a).
abs($module, x, /)\n--\n\nReturn the absolute value of the argument.
abs_paths
abs_tol
absolute value too large
absolute_import
abspath
abstractclassmethod
abstractclassmethod.__init__
abstractmethod
abstractproperty
abstracts
abstractstaticmethod
abstractstaticmethod.__init__
access
access violation
access($module, /, path, mode, *, dir_fd=None, effective_ids=False,\n       follow_symlinks=True)\n--\n\nUse the real uid/gid to test for access to a path.\n\n  path\n    Path to be tested; can be string, bytes, or a path-like object.\n  mode\n    Operating-system mode bitfield.  Can be F_OK to test existence,\n    or the inclusive-OR of R_OK, W_OK, and X_OK.\n  dir_fd\n    If not None, it should be a file descriptor open to a directory,\n    and path should be relative; path will then be relative to that\n    directory.\n  effective_ids\n    If True, access will use the effective uid/gid instead of\n    the real uid/gid.\n  follow_symlinks\n    If False, and the last element of the path is a symbolic link,\n    access will examine the symbolic link itself instead of the file\n    the link points to.\n\ndir_fd, effective_ids, and follow_symlinks may not be implemented\n  on your platform.  If they are unavailable, using them will raise a\n  NotImplementedError.\n\nNote that most operations will use the effective uid/gid, therefore this\n  routine can be used in a suid/sgid environment to test if the invoking user\n  has the specified access to the path.
accumulate
accumulate(iterable, func=None, *, initial=None)\n--\n\nReturn series of accumulated sums (or other binary function results).
aclose
aclose() -> raise GeneratorExit inside generator.
aclose(): asynchronous generator is already running
acos
acos($module, x, /)\n--\n\nReturn the arc cosine (measured in radians) of x.\n\nThe result is between 0 and pi.
acos($module, z, /)\n--\n\nReturn the arc cosine of z.
acosh
acosh($module, x, /)\n--\n\nReturn the inverse hyperbolic cosine of x.
acosh($module, z, /)\n--\n\nReturn the inverse hyperbolic cosine of z.
acquire
acquire(blocking=True) -> bool\n\nLock the lock.  `blocking` indicates whether we should wait\nfor the lock to be available or not.  If `blocking` is False\nand another thread holds the lock, the method will return False\nimmediately.  If `blocking` is True and another thread holds\nthe lock, the method will wait for the lock to be released,\ntake it and then return True.\n(note: the blocking operation is interruptible.)\n\nIn all other cases, the method will return True immediately.\nPrecisely, if the current thread already holds the lock, its\ninternal counter is simply incremented. If nobody holds the lock,\nthe lock is taken and its internal counter initialized to 1.
acquire(blocking=True, timeout=-1) -> bool\n(acquire_lock() is an obsolete synonym)\n\nLock the lock.  Without argument, this blocks if the lock is already\nlocked (even by the same thread), waiting for another thread to release\nthe lock, and return True once the lock is acquired.\nWith an argument, this will only block if the argument is true,\nand the return value reflects whether the lock is acquired.\nThe blocking operation is interruptible.
acquire_lock
acquire_lock($module, /)\n--\n\nAcquires the interpreter's import lock for the current thread.\n\nThis lock should be used by import hooks to ensure thread-safety when importing\nmodules. On platforms without threads, this function does nothing.
action must be a string, not '%.200s'
add($module, a, b, /)\n--\n\nSame as a + b.
add($module, fragment1, fragment2, width, /)\n--\n\nReturn a fragment which is the addition of the two samples passed as parameters.
add_dll_directory
add_main_module
add_note
addaudithook
addaudithook($module, /, hook)\n--\n\nAdds a new audit hook callback.
addpackage
addsitedir
addsitedir.<locals>.<listcomp>
addsitepackages
addusersitepackages
adjustable
adler32
adler32($module, data, value=1, /)\n--\n\nCompute an Adler-32 checksum of data.\n\n  value\n    Starting value of the checksum.\n\nThe returned checksum is an integer.
adpcm2lin
adpcm2lin($module, fragment, width, state, /)\n--\n\nDecode an Intel/DVI ADPCM coded fragment to a linear fragment.
af`f0Di
ag_await
ag_code
ag_frame
ag_running
ahxI
aibi
aifc
aiter
aiter($module, async_iterable, /)\n--\n\nReturn an AsyncIterator for an AsyncIterable object.
aiter() returned not an async iterator of type '%.100s'
akEx
alaw2lin
alaw2lin($module, fragment, width, /)\n--\n\nConvert sound fragments in a-LAW encoding to linearly encoded sound fragments.
algorithm
alias
alias(identifier name, identifier? asname)
all arguments to joinpath() must be str or None
all($module, iterable, /)\n--\n\nReturn True if bool(x) is True for all values x in the iterable.\n\nIf the iterable is empty, return True.
all_suffixes
all_threads
allocate
allocate_lock
allocate_lock() -> lock object\n(allocate() is an obsolete synonym)\n\nCreate a new lock object. See help(type(threading.Lock())) for\ninformation about locks.
allocator
allow programmer to define multiple exit functions to be executed\nupon normal program termination.\n\nTwo public functions, register and unregister, are defined.\n
allow_nan
allowed_winerror
almost_filename
alt_path_sep
alter_argv
alter_sys
alternative patterns bind different names
altsep
altsepIndex
altzone
always
am\nv
an instance of Context was expected
an instance of ContextVar was expected
an instance of Token was expected
an int variable for demonstration purposes
an integer
an integer is required
and %zd more exception%s\n
and_
and_($module, a, b, /)\n--\n\nSame as a & b.
anext
anext($module, aiterator, default=<unrepresentable>, /)\n--\n\nasync anext(aiterator[, default])\n\nReturn the next item from the async iterator.  If default is given and the async\niterator is exhausted, it is returned instead of raising StopAsyncIteration.
anext(): asynchronous generator is already running
anext_awaitable
annotated name '%U' can't be global
annotated name '%U' can't be nonlocal
annotation
annotations
antigravity
any($module, iterable, /)\n--\n\nReturn True if bool(x) is True for any x in the iterable.\n\nIf the iterable is empty, return False.
api-ms-win-core-path-l1-1-0.dll
api-ms-win-crt-conio-l1-1-0.dll
api-ms-win-crt-convert-l1-1-0.dll
api-ms-win-crt-environment-l1-1-0.dll
api-ms-win-crt-filesystem-l1-1-0.dll
api-ms-win-crt-heap-l1-1-0.dll
api-ms-win-crt-locale-l1-1-0.dll
api-ms-win-crt-math-l1-1-0.dll
api-ms-win-crt-process-l1-1-0.dll
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-stdio-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-time-l1-1-0.dll
api_version
append
append($self, item, /)\n--\n\nAppend a single item to the end of the bytearray.\n\n  item\n    The item to be appended.
append($self, object, /)\n--\n\nAppend object to the end of the list.
append($self, v, /)\n--\n\nAppend new value v to the end of the array.
appendleft
aq6l
aqgPh
arc_offset
archive
archive path is empty
arg 1 must be an integer
arg 3 (name) must be None or string
arg 4 (defaults) must be None or tuple
arg 5 (closure) expected cell, found %s
arg 5 (closure) must be None or tuple
arg 5 (closure) must be tuple
arg must be a sequence object
arg must be list
arg(identifier arg, expr? annotation, string? type_comment)
argdefs
argparse
argrest
args
args may not be deleted
args[0] from __newobj__ args has the wrong class
args[0] from __newobj__ args is not a type
argtypes
argument
argument %zd
argument 'arguments'
argument 'buffer'
argument 'byteorder'
argument 'co_cellvars'
argument 'co_code'
argument 'co_consts'
argument 'co_exceptiontable'
argument 'co_filename'
argument 'co_freevars'
argument 'co_linetable'
argument 'co_name'
argument 'co_names'
argument 'co_qualname'
argument 'co_varnames'
argument 'code'
argument 'command'
argument 'data'
argument 'encoding'
argument 'errors'
argument 'format'
argument 'globals'
argument 'groupindex'
argument 'indexgroup'
argument 'input'
argument 'key'
argument 'mode'
argument 'name'
argument 'newline'
argument 'operation'
argument 'order'
argument 'path'
argument 'person'
argument 'salt'
argument 'source'
argument 'tb_frame'
argument 'zdict'
argument 1
argument 1 must have a "write" method
argument 10
argument 11
argument 12
argument 13
argument 15
argument 16
argument 17
argument 18
argument 2
argument 3
argument 7
argument 8
argument 9
argument for %.200s%s given by name ('%U') and position (%d)
argument for %.200s%s given by name ('%s') and position (%d)
argument for 'p' must be a bytes object
argument for 's' must be a bytes object
argument list must be a tuple
argument must be an int, or have a fileno() method.
argument must be callable
argument must be iterable
argument must be str or None, not %.50s
argument must be str, not %.50s
argument of type '%.200s' is not iterable
argument out of range
argument should be a contiguous buffer, not '%.100s'
argument should be bytes, buffer or ASCII string, not '%.100s'
argument should be integer or None, not %.200s
argument should be integer or None, not '%.200s'
argument should be integer or bytes-like object, not '%.200s'
argument type invalid
arguments
arguments cannot follow var-keyword argument
arguments field "args" changed size during iteration
arguments field "args" must be a list, not a %.200s
arguments field "defaults" changed size during iteration
arguments field "defaults" must be a list, not a %.200s
arguments field "kw_defaults" changed size during iteration
arguments field "kw_defaults" must be a list, not a %.200s
arguments field "kwonlyargs" changed size during iteration
arguments field "kwonlyargs" must be a list, not a %.200s
arguments field "posonlyargs" changed size during iteration
arguments field "posonlyargs" must be a list, not a %.200s
arguments(arg* posonlyargs, arg* args, arg? vararg, arg* kwonlyargs, expr* kw_defaults, arg? kwarg, expr* defaults)
argv
argv first element cannot be empty
argv must be a tuple or a list
array
array assignment index out of range
array index out of range
array indices must be integers
array item must be unicode character
array(typecode [, initializer]) -> array\n\nReturn a new array whose items are restricted by typecode, and\ninitialized from the optional initializer value, which must be a list,\nstring or iterable over elements of the appropriate type.\n\nArrays represent basic values and behave very much like lists, except\nthe type of objects stored in them is constrained. The type is specified\nat object creation time by using a type code, which is a single character.\nThe following type codes are defined:\n\n    Type code   C Type             Minimum size in bytes\n    'b'         signed integer     1\n    'B'         unsigned integer   1\n    'u'         Unicode character  2 (see note)\n    'h'         signed integer     2\n    'H'         unsigned integer   2\n    'i'         signed integer     2\n    'I'         unsigned integer   2\n    'l'         signed integer     4\n    'L'         unsigned integer   4\n    'q'         signed integer     8 (see note)\n    'Q'         unsigned integer   8 (see note)\n    'f'         floating point     4\n    'd'         floating point     8\n\nNOTE: The 'u' typecode corresponds to Python's unicode character. On\nnarrow builds this is 2-bytes on wide builds this is 4-bytes.\n\nNOTE: The 'q' and 'Q' type codes are only available if the platform\nC compiler used to build Python supports 'long long', or, on Windows,\n'__int64'.\n\nMethods:\n\nappend() -- append a new item to the end of the array\nbuffer_info() -- return information giving the current memory info\nbyteswap() -- byteswap all the items of the array\ncount() -- return number of occurrences of an object\nextend() -- extend array by appending multiple elements from an iterable\nfromfile() -- read items from a file object\nfromlist() -- append items from the list\nfrombytes() -- append items from the string\nindex() -- return index of first occurrence of an object\ninsert() -- insert a new item into the array at a provided position\npop() -- remove and return item (default last)\nremove() -- remove first occurrence of an object\nreverse() -- reverse the order of the items in the array\ntofile() -- write all items to a file object\ntolist() -- return the array converted to an ordinary list\ntobytes() -- return the array converted to a string\n\nAttributes:\n\ntypecode -- the typecode character used to create the array\nitemsize -- the length in bytes of one array item\n
array.__new__
array.array
array.arrayiterator
array.index(x): x not in array
array.remove(x): x not in array
array_buffer_getbuf: view==NULL argument is obsolete
as_integer_ratio
as_integer_ratio($self, /)\n--\n\nReturn integer ratio.\n\nReturn a pair of integers, whose ratio is exactly equal to the original float\nand with a positive denominator.\n\nRaise OverflowError on infinities and a ValueError on NaNs.\n\n>>> (10.0).as_integer_ratio()\n(10, 1)\n>>> (0.0).as_integer_ratio()\n(0, 1)\n>>> (-.25).as_integer_ratio()\n(-1, 4)
as_integer_ratio($self, /)\n--\n\nReturn integer ratio.\n\nReturn a pair of integers, whose ratio is exactly equal to the original int\nand with a positive denominator.\n\n>>> (10).as_integer_ratio()\n(10, 1)\n>>> (-10).as_integer_ratio()\n(-10, 1)\n>>> (0).as_integer_ratio()\n(0, 1)
as_integer_ratio() must return a 2-tuple
asbs!
ascii
ascii($module, obj, /)\n--\n\nReturn an ASCII-only representation of an object.\n\nAs repr(), return a string containing a printable representation of an\nobject, but escape the non-ASCII characters in the string returned by\nrepr() using \\x, \\u or \\U escapes. This generates a string similar\nto that returned by repr() in Python 2.
ascii->hash == -1
ascii->length == 0
ascii->state.ascii == 0
ascii->state.interned == 0
ascii->state.ready == 0
ascii->state.ready == 1
ascii->wstr != ((void *)0)
ascii->wstr != data
ascii->wstr == data
ascii_decode
ascii_decode($module, data, errors=None, /)\n--\n\n
ascii_encode
ascii_encode($module, str, errors=None, /)\n--\n\n
ascii_iscased
ascii_iscased($module, character, /)\n--\n\n
ascii_letters
ascii_tolower
ascii_tolower($module, character, /)\n--\n\n
asctime
asctime([tuple]) -> string\n\nConvert a time tuple to a string, e.g. 'Sat Jun 06 16:26:11 1998'.\nWhen the time tuple is not present, current time as returned by localtime()\nis used.
asend
asend(v) -> send 'v' in generator.
asin
asin($module, x, /)\n--\n\nReturn the arc sine (measured in radians) of x.\n\nThe result is between -pi/2 and pi/2.
asin($module, z, /)\n--\n\nReturn the arc sine of z.
asinh
asinh($module, x, /)\n--\n\nReturn the inverse hyperbolic sine of x.
asinh($module, z, /)\n--\n\nReturn the inverse hyperbolic sine of z.
asname
assert
assertion is always true, perhaps remove parentheses?
assign to
assignment expression cannot be used in a comprehension iterable expression
assignment expression cannot rebind comprehension iteration variable '%U'
assignment expression within a comprehension cannot be used in a class body
assignment to yield expression not possible
ast.AST
astimezone
async generator already executing
async generator ignored GeneratorExit
async generator raised StopAsyncIteration
async generator raised StopIteration
async_generator
async_generator_asend
async_generator_athrow
async_generator_wrapped_value
asyncgen_hooks
asyncgen_hooks\n\nA named tuple providing information about asynchronous\ngenerators hooks.  The attributes are read only.
asynchat
asynchronous comprehension outside of an asynchronous function
asynchronous generator ignored GeneratorExit
asyncio
asyncore
at least
at least 
at least one argument must precede /
at most
at most 
at5y
ataTaza[aea;ajaaaVa)b'b+b+dMd[d]dtdvdrdsd}dudfd
atan
atan($module, x, /)\n--\n\nReturn the arc tangent (measured in radians) of x.\n\nThe result is between -pi/2 and pi/2.
atan($module, z, /)\n--\n\nReturn the arc tangent of z.
atan2
atan2($module, y, x, /)\n--\n\nReturn the arc tangent (measured in radians) of y/x.\n\nUnlike atan(y/x), the signs of both x and y are considered.
atanh
atanh($module, x, /)\n--\n\nReturn the inverse hyperbolic tangent of x.
atanh($module, z, /)\n--\n\nReturn the inverse hyperbolic tangent of z.
atexit
athrow
athrow(): asynchronous generator is already running
athrow(typ[,val[,tb]]) -> raise exception in generator.
attempt to assign array of size %zd to extended slice of size %zd
attempt to assign bytes of size %zd to extended slice of size %zd
attempt to assign sequence of size %zd to extended slice of size %zd
attempted relative import beyond top-level package
attempted relative import with no known parent package
attempting to create PyCFunction with class but no METH_METHOD flag
attempting to create PyCMethod with a METH_METHOD flag but no class
attr
attrgetter
attrgetter(attr, ...) --> attrgetter object\n\nReturn a callable object that fetches the given attribute(s) from its operand.\nAfter f = attrgetter('name'), the call f(r) returns r.name.\nAfter g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).\nAfter h = attrgetter('name.first', 'name.last'), the call h(r) returns\n(r.name.first, r.name.last).
attribute
attribute '%V' of '%.100s' objects is not readable
attribute '%V' of '%.100s' objects is not writable
attribute deletion is not supported
attribute name
attribute name must be a string
attribute name must be string, not '%.200s'
attribute name repeated in class pattern: %U
attribute of type '%.200s' is not callable
attribute value type must be bool
attrs_now
attrs_then
attrs_updated
auZm
audioop
audioop.error
audit
audit() missing 1 required positional argument: 'event'
audit(event, *args)\n\nPasses the event to any audit hooks that are attached.
auto
auto-releasing thread-state, but no thread-state for this thread
avail_out is non-zero in _BlocksOutputBuffer_Grow().
avg($module, fragment, width, /)\n--\n\nReturn the average over all samples in the fragment.
avgpp
avgpp($module, fragment, width, /)\n--\n\nReturn the average peak-peak value over all samples in the fragment.
await 
await expression
awbw
awbwO
awiwm#p
az"}r
a|0mQ};v
b b"b#b'b)b+b9b=bBbCbDbFbLbPbQbRbTbVbZb\bdbmbobsbzb}b
b b#b&b'b(b)b+b-b/b0b1b2b5b6b8b9b:b;b<bBbDbEbFbJbObPbUbVbWbYbZb\b]b^b_b`babbbdbebhbqbrbtbubwbxbzb{b}b
b!b*b.b0b2b3bAbNb^bcb[b`bhb|b
b"C"E"H"v"w"
b"b!b%b$b,b
b#b)bFbLbQbRbabdb{bmbsb
b#e#oIq
b#e+e*e
b$C4 
b)e%e
b-dqgCh
b-f~b
b0c0
b1c1t
b2a_base64
b2a_base64($module, data, /, *, newline=True)\n--\n\nBase64-code line of data.
b2a_hex
b2a_hex($module, /, data, sep=<unrepresentable>, bytes_per_sep=1)\n--\n\nHexadecimal representation of binary data.\n\n  sep\n    An optional single character or byte to separate hex bytes.\n  bytes_per_sep\n    How many bytes between separators.  Positive values count from the\n    right, negative values count from the left.\n\nThe return value is a bytes object.  This function is also\navailable as "hexlify()".\n\nExample:\n>>> binascii.b2a_hex(b'\xb9\x01\xef')\nb'b901ef'\n>>> binascii.hexlify(b'\xb9\x01\xef', ':')\nb'b9:01:ef'\n>>> binascii.b2a_hex(b'\xb9\x01\xef', b'_', 2)\nb'b9_01ef'
b2a_qp
b2a_qp($module, /, data, quotetabs=False, istext=True, header=False)\n--\n\nEncode a string using quoted-printable encoding.\n\nOn encoding, when istext is set, newlines are not encoded, and white\nspace at end of lines is.  When istext is not set, \r and \n (CR/LF)\nare both encoded.  When quotetabs is set, space and tabs are encoded.
b2a_uu
b2a_uu($module, data, /, *, backtick=False)\n--\n\nUuencode line of data.
b4c4d4
b5h\\
b5lTl\lJl
b5r]d
b6bKbNb/e
b6c6
b6gUi5
b7eEere
b8GL\tO
b8c8T
b9NUS
b9cKcCc
b9e;e8e
b9eA
b:iaBRBq92r
b:write_byte
b;array item must be integer
b?&SW5Rbj5
b?b>b@b
b?ete
b@IF|
bAeCe
bB!g
bBcB
bCkAZ
bDcDD
bF_1
bGj9
bHTXN\vz
bIvtU
bJDOz
bN33
bNc>c/cUcBcFcOcIc:cPc=c*c+c(cMcLcHeIe
bOvM
bPc>cMc
bPjPdPQNkPAOZ
bSSLh"t
bTZUq
bUFMY
bX]Xl
bXb1
bYmdv
bYr;u
b[Xf
b\fb\rb
b\fp\v0
b\r.lc
b\rc\vc
b\tb\rb\fb
b_f_h_4SS
baFQ
backslashreplace
backslashreplace_errors
backtick
bad "quoting" value
bad BUILD_CONST_KEY_MAP keys argument
bad ID: Allocated using API '%c', verified using API '%c'
bad RAISE_VARARGS oparg
bad argument to internal function
bad argument type for built-in operation
bad central directory offset: 
bad central directory size or offset: 
bad central directory size: 
bad char in struct format
bad file descriptor
bad format char passed to Py_BuildValue
bad format string: %.200s
bad leading pad byte
bad local file header: 
bad local header offset: 
bad magic number in 
bad marshal data (bytes object size out of range)
bad marshal data (digit out of range in long)
bad marshal data (index list too large)
bad marshal data (invalid reference)
bad marshal data (list size out of range)
bad marshal data (long size out of range)
bad marshal data (set size out of range)
bad marshal data (string size out of range)
bad marshal data (tuple size out of range)
bad marshal data (unknown type code)
bad marshal data (unnormalized long data)
bad memberdescr type
bad memberdescr type for %s
bad operand type
bad operand type for abs(): '%.200s'
bad operand type for unary +: '%.200s'
bad operand type for unary -: '%.200s'
bad operand type for unary ~: '%.200s'
bad state
bad trailing pad byte
bad typecode (must be b, B, u, h, H, i, I, l, L, q, Q, f or d)
bad tzinfo state arg
bad value for option -X frozen_modules (expected "on" or "off")
bare * has associated type comment
barry_as_FLUFL
base
base is not invertible for the given modulus
base64
base_exe
base_exec_prefix
base_executable
base_executabler
base_filename
base_path
base_prefix
basename
bases
bases must be types
bb>V|M&C
bboi
bcb[bXb6e
bck?e'^
bcrypt.dll
bede
bench
bg7;VOo
bgc>e
bgcg
bhcheh55ghEGkhmh0=.WD
bias
bias($module, fragment, width, bias, /)\n--\n\nReturn a fragment that is the original fragment with a bias added to each sample.
bicijQei}
big5
big5hkscs
big5hkscs_bmp
big5hkscs_nonbmp
bin($module, number, /)\n--\n\nReturn the binary representation of an integer.\n\n   >>> bin(2796202)\n   '0b1010101010101010101010'
binary
binary mode doesn't take a newline argument
binary mode doesn't take an encoding argument
binary mode doesn't take an errors argument
binascii
binascii.Error
binascii.Incomplete
bind ^I rl_complete
bisect
bisect_left
bisect_left($module, /, a, x, lo=0, hi=None, *, key=None)\n--\n\nReturn the index where to insert item x in list a, assuming a is sorted.\n\nThe return value i is such that all e in a[:i] have e < x, and all e in\na[i:] have e >= x.  So if x already appears in the list, a.insert(i, x) will\ninsert just before the leftmost x already there.\n\nOptional args lo (default 0) and hi (default len(a)) bound the\nslice of a to be searched.
bisect_right
bisect_right($module, /, a, x, lo=0, hi=None, *, key=None)\n--\n\nReturn the index where to insert item x in list a, assuming a is sorted.\n\nThe return value i is such that all e in a[:i] have e <= x, and all e in\na[i:] have e > x.  So if x already appears in the list, a.insert(i, x) will\ninsert just after the rightmost x already there.\n\nOptional args lo (default 0) and hi (default len(a)) bound the\nslice of a to be searched.
bit_count
bit_count($self, /)\n--\n\nNumber of ones in the binary representation of the absolute value of self.\n\nAlso known as the population count.\n\n>>> bin(13)\n'0b1101'\n>>> (13).bit_count()\n3
bit_length
bit_length($self, /)\n--\n\nNumber of bits necessary to represent self in binary.\n\n>>> bin(37)\n'0b100101'\n>>> (37).bit_length()\n6
bits
bits_per_digit
bl:1Y7i
blake2b
blake2b(data=b'', /, *, digest_size=_blake2.blake2b.MAX_DIGEST_SIZE,\n        key=b'', salt=b'', person=b'', fanout=1, depth=1, leaf_size=0,\n        node_offset=0, node_depth=0, inner_size=0, last_node=False,\n        usedforsecurity=True)\n--\n\nReturn a new BLAKE2b hash object.
blake2s
blake2s(data=b'', /, *, digest_size=_blake2.blake2s.MAX_DIGEST_SIZE,\n        key=b'', salt=b'', person=b'', fanout=1, depth=1, leaf_size=0,\n        node_offset=0, node_depth=0, inner_size=0, last_node=False,\n        usedforsecurity=True)\n--\n\nReturn a new BLAKE2s hash object.
blkI
block_size
blocking
bmgAh
bmvnOjnp|c
boao,
bocoMAdoeofogohoiojokoloX@I
body
bool
bool(x) -> bool\n\nReturns True when the argument x is true, False otherwise.\nThe builtins True and False are the only two instances of the class bool.\nThe class bool is a subclass of the class int, and cannot be subclassed.
bool_dealloc
boolop
boolop = And | Or
bopq4O
both
both destination and source must be bytes-like objects
both points must have the same number of dimensions
bqb{bzbpb
brace
braces
brc\nk
break
breakpoint
breakpoint(*args, **kws)\n\nCall sys.breakpointhook(*args, **kws).  sys.breakpointhook() must accept\nwhatever arguments are passed.\n\nBy default, this drops you into the pdb debugger.
breakpointhook
breakpointhook(*args, **kws)\n\nThis hook function is called by built-in breakpoint().\n
buSa
buffer
buffer error
buffer size must be strictly positive
buffer_callback
buffer_callback needs protocol >= 5
buffer_info
buffer_info($self, /)\n--\n\nReturn a tuple (address, length) giving the current memory address and the length in items of the buffer used to hold array's contents.\n\nThe length should be multiplied by the itemsize attribute to calculate\nthe buffer length in bytes.
buffer_size
buffered_stdio
buffering
buffers
bufsize
bufsize must be non-negative
bugni
build
build_stdlib_prefix
built-in
builtin type %.200s has no __module__ attribute
builtin_function_or_method
builtin_method
builtin_module
builtin_module_names
builtin_name
builtins
builtins.ExceptionGroup
builtins.breakpoint
builtins.id
builtins.input
builtins.input/result
bwb}brbtb7e
bwouGO
bxBO
bxcx
byte array too long to convert to int
byte format requires -128 <= number <= 127
byte indices must be integers or slices, not %.200s
byte must be in range(0, 256)
byte string is too large
byte string is too long
bytearray
bytearray index out of range
bytearray indices must be integers or slices, not %.200s
bytearray object is too large to make repr
bytearray(iterable_of_ints) -> bytearray\nbytearray(string, encoding[, errors]) -> bytearray\nbytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer\nbytearray(int) -> bytes array of size given by the parameter initialized with null bytes\nbytearray() -> empty bytes array\n\nConstruct a mutable bytearray object from:\n  - an iterable yielding integers in range(256)\n  - a text string encoded using the specified encoding\n  - a bytes or a buffer object\n  - any object implementing the buffer API.\n  - an integer
bytearray_getbuffer: view==NULL argument is obsolete
bytearray_iterator
bytebuffer
bytecode
bytecode is stale for 
bytecode_path
byteorder
byteorder must be either 'little' or 'big'
bytes
bytes can only contain ASCII literal characters
bytes expected, not %s
bytes length not a multiple of item size
bytes must be in range(0, 256)
bytes object is too large to make repr
bytes(iterable_of_ints) -> bytes\nbytes(string, encoding[, errors]) -> bytes\nbytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer\nbytes(int) -> bytes object of size given by the parameter initialized with null bytes\nbytes() -> empty bytes object\n\nConstruct an immutable array of bytes from:\n  - an iterable yielding integers in range(256)\n  - a text string encoded using the specified encoding\n  - any object implementing the buffer API.\n  - an integer
bytes-like object
bytes_data
bytes_iterator
bytes_per_sep
bytes_warning
bytesdecoded
bytesencoded
bytesiobuf_getbuffer: view==NULL argument is obsolete
byteswap
byteswap($module, fragment, width, /)\n--\n\nConvert big-endian samples to little-endian and vice versa.
byteswap($self, /)\n--\n\nByteswap all items of the array.\n\nIf the items in the array are not 1, 2, 4, or 8 bytes in size, RuntimeError is\nraised.
bzlToP}:
b|b~bybsb
c nZ
c&c'c)c,c-c.c0c1c3c4c5c6c7c8c;c<c>c?c@cAcDcGcHcJcQcRcScTcVcWcXcYcZc[c\c]c`cdcecfchcjckclcocpcrcsctcucxcyc|c}c~c
c)c*c-c5c6c9c<cAcBcCcDcFcJcKcNcRcScTcXc[cecfclcmcqctcucxc|c}c
c0i:r6
c2RiSiL
c2egejede\eheee
c4fsg:n+s
c6JKg
c7yB2_;G
c8e\tg
c9JxM3.
c9Ob
c9cCcec|c
c9cKcJc<c)cAc4cXcTcYc-cGc3cZcQc8cWc@cHcJeFe
c9d9Q
c:dleofBh
c<l6wCU
c<wM
c=#eS
c=C9&fUP/N
c=hsk
c?eEe
cAW@
cAdA
cBYs[sZsu
cBf!k
cB|9s
cC&X
cCdC
cEdAd\vd
cFC83K
cFec\
cGdGA
cIs^Z0!Rw1
cJ5a
cJv_GpFp
cM;X[ewx
cO"i
cP=Ke
cProfile
cT7?T
cTbL
cVc,cDcEc6cCc
cVeVfVgVmVnVoVpVrVsVtVuVwVxVyVzV}V~V
cVu4&
cW?E@u
cWeog
cWiWaW
cX[k[\n\\rdQg\
cYeKj
cYm=
c\nc\vc\fc\rc
c\nc\vc\rc
c\td\nd
c^efebece
c_call
c_contiguous
c_exception
c_return
c`e`P`U`m`i`o`
cache
cache_clear
cache_from_source
cache_info
cache_info_type
cache_module
cache_path
cache_tag
cached
cakefSh
calcsize
calcsize($module, format, /)\n--\n\nReturn size in bytes of the struct described by the format string.
calendar
call
call stack is not deep enough
call($module, obj, /, *args, **kwargs)\n--\n\nSame as obj(*args, **kwargs).
call_tracing
call_tracing($module, func, args, /)\n--\n\nCall func(*args), while tracing is enabled.\n\nThe tracing state is saved, and restored afterwards.  This is intended\nto be called from a debugger from a checkpoint, to recursively debug\nsome other code.
callable
callable finalizer expected, got %.50s
callable firstiter expected, got %.50s
callable($module, obj, /)\n--\n\nReturn whether the object is callable (i.e., some kind of function).\n\nNote that classes are callable, as are instances of classes with a\n__call__() method.
callable_iterator
callbacks
callcount
called code object or built-in function name
called match pattern must be a type
calling %R should have returned an instance of BaseException, not %R
calling %R should have returned an instance of BaseException, not %s
calloc
calls
can assign only bytes, buffers, or iterables of ints in range(0, 256)
can only append array (not "%.200s") to array
can only assign an iterable
can only assign array (not "%.200s") to array slice
can only assign non-empty tuple to %s.__bases__, not ()
can only assign string to %s.__name__, not '%s'
can only assign string to %s.__qualname__, not '%s'
can only assign tuple to %s.__bases__, not %s
can only concatenate deque (not "%.200s") to deque
can only concatenate list (not "%.200s") to list
can only concatenate str (not "%.200s") to str
can only concatenate tuple (not "%.200s") to tuple
can only extend array with array (not "%.200s")
can only extend with array of same kind
can only join an iterable
can only jump from a 'line' trace event
can't allocate lock
can't allocate read lock
can't apply this %s to %s object
can't assign sys.argv
can't assign sys.path
can't capture name '_' in patterns
can't compare %s to %s
can't compare offset-naive and offset-aware datetimes
can't compare offset-naive and offset-aware times
can't compute path0 from argv
can't concat %.100s to %.100s
can't convert negative int to unsigned
can't convert negative value to size_t
can't convert negative value to unsigned int
can't create __main__ module
can't create sys.path
can't decompress data; zlib not available
can't delete __class__ attribute
can't delete attribute
can't delete numeric/char attribute
can't delete tb_next attribute
can't do nonzero cur-relative seeks
can't do nonzero end-relative seeks
can't extend bytearray with %.100s
can't find 
can't find module 
can't get read buffer before GetOverlappedResult() signals the operation completed
can't have text and binary mode at once
can't have unbuffered text I/O
can't init context types
can't init float info type
can't init int info type
can't initialize builtins module
can't initialize io.open
can't initialize mutex for channel management
can't initialize mutex for new channel
can't initialize signals
can't initialize sys module
can't initialize sys standard streams
can't initialize tracemalloc
can't initialize warnings
can't intern %.400s
can't jump from the 'call' trace event of a new frame
can't jump from unreachable code
can't jump into a re-raising block as there's no location
can't jump into an 'except' block as there's no exception
can't jump into an exception handler, or code may be unreachable
can't jump into the body of a for loop
can't make main interpreter
can't multiply sequence by non-int of type '%.200s'
can't open Zip file: 
can't pickle '%.200s' object: %R
can't pickle global identifier '%S' using pickle protocol %i
can't pickle module identifier '%S' using pickle protocol %i
can't prepend path0 to sys.path
can't re-enter readline
can't read Zip file: 
can't reconstruct logical file position
can't resolve package from __spec__ or __package__, falling back on __name__ and __path__
can't restore logical file position
can't send non-None value to a just-started async generator
can't send non-None value to a just-started coroutine
can't send non-None value to a just-started generator
can't serialize %s
can't set attribute
can't set bytearray slice from %.100s
can't set preliminary stderr
can't specify a timeout for a non-blocking call
can't start new thread
can't subtract offset-naive and offset-aware datetimes
can't translate character '\U%08x' in position %zd: %U
can't translate character '\u%04x' in position %zd: %U
can't translate character '\x%02x' in position %zd: %U
can't translate characters in position %zd-%zd: %U
can't unpack IEEE 754 special value on non-IEEE platform
can't use MatchStar here
can't use NULL keys in MatchMapping (set 'rest' parameter instead)
can't use starred expression here
cancel
cancel($self, /)\n--\n\n
cancel_dump_traceback_later
cancel_dump_traceback_later():\ncancel the previous call to dump_traceback_later().
candidate_confs
cannot 'yield from' a coroutine object in a non-coroutine generator
cannot access free variable '%s' where it is not associated with a value in enclosing scope
cannot access local variable '%s' where it is not associated with a value
cannot access submodule '%U' of module '%U' (most likely due to a circular import)
cannot add more objects to bytearray
cannot allocate lock
cannot assign to %s
cannot assign to %s here. Maybe you meant '==' instead of '='?
cannot assign to __debug__
cannot calculate path configuration without GIL
cannot clear an executing frame
cannot close exported pointers exist
cannot convert '%.200s' object to bytearray
cannot convert '%.200s' object to bytes
cannot convert Infinity to integer ratio
cannot convert NaN to integer ratio
cannot convert dictionary update sequence element #%zd to a sequence
cannot convert float NaN to integer
cannot convert float infinity to integer
cannot create '%s' instances
cannot create weak reference to '%s' object
cannot decode %s
cannot decode PYTHONIOENCODING environment variable
cannot decode _Py_StandardStreamEncoding
cannot decode _Py_StandardStreamErrors
cannot decode command line arguments
cannot decode string
cannot delete %s
cannot delete '%s' attribute of immutable type '%s'
cannot delete __debug__
cannot delete __dict__
cannot delete attribute
cannot delete memory
cannot destroy the current interpreter
cannot enter context: %R is already entered
cannot exit context: %R has not been entered
cannot exit context: thread state references a different context object
cannot extract raw buffer from non-contiguous buffer
cannot find bytecode for specified line
cannot fit '%.200s' into an index-sized integer
cannot fit '%.200s' into an offset-sized integer
cannot hash writable memoryview object
cannot have both 'except' and 'except*' on the same 'try'
cannot import name %R from %R (%S)
cannot import name %R from %R (unknown location)
cannot import name %R from partially initialized module %R (most likely due to a circular import) (%S)
cannot index %zd-dimension view with %zd-element tuple
cannot initialize filesystem codec
cannot iteratively unpack with a struct of length 0
cannot load module {!r} when get_code() returns None
cannot mix bytes and nonbytes literals
cannot mmap an empty file
cannot modify read-only memory
cannot pickle %.200s objects
cannot pickle '%.100s' instances
cannot pickle '%.200s' object
cannot re-enter the tee iterator
cannot read file larger than 32KB during initialization
cannot read more than %d bytes
cannot release un-acquired lock
cannot resize an array that is exporting buffers
cannot reuse already awaited __anext__()/asend()
cannot reuse already awaited aclose()/athrow()
cannot reuse already awaited coroutine
cannot set %R attribute of immutable type '%s'
cannot set '%s' attribute of immutable type '%s'
cannot set '__annotations__' attribute of immutable type '%s'
cannot set the recursion limit to %i at the recursion depth %i: the limit is too low
cannot switch from automatic field numbering to manual field specification
cannot switch from manual field specification to automatic field numbering
cannot unpack non-iterable %.200s object
cannot use '_' as a target
cannot use a bytes pattern on a string-like object
cannot use a closure with this code object
cannot use a starred expression in a dictionary value
cannot use a str to initialize an array with typecode '%c'
cannot use a string pattern on a bytes-like object
cannot use a unicode array to initialize an array with typecode '%c'
cannot use assignment expressions with %s
cannot use double starred expression here
cannot use starred expression here
capitalize
capitalize($self, /)\n--\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower\ncase.
case
casefold
casefold($self, /)\n--\n\nReturn a version of the string suitable for caseless comparisons.
cases
cast
cast($self, /, format, shape=<unrepresentable>)\n--\n\nCast a memoryview to a new format or shape.
catch_warnings
catching ExceptionGroup with except* is not allowed. Use except instead.
catching classes that do not inherit from BaseException is not allowed
category
category must be a Warning subclass, not '%s'
cause
cbrt
cbrt($module, x, /)\n--\n\nReturn the cube root of x.
cc=E$AYBW2h
cdNu
cdSO
cdir
ceeeV
ceil
ceil($module, x, /)\n--\n\nReturn the ceiling of x as an Integral.\n\nThis is the smallest integer >= x.
cell
cell([contents])\n--\n\nCreate a new cell object.\n\n  contents\n    the contents of the cell. If not specified, the cell will be empty,\n    and \n further attempts to access its cell_contents attribute will\n    raise a ValueError.
cell_contents
center
center($self, width, fillchar=' ', /)\n--\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).
center($self, width, fillchar=b' ', /)\n--\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character.
cgitb
chain
chain(*iterables) --> chain object\n\nReturn a chain object whose .__next__() method returns elements from the\nfirst iterable until it is exhausted, then elements from the next\niterable, until all of the iterables are exhausted.
channel %lld closed
channel %lld is empty
channel %lld not found
channel ID must be a non-negative int, got %R
channel ID must be an int, got %.100s
channel already closed
channel closed
channel_close
channel_close(cid, *, send=None, recv=None, force=False)\n\nClose the channel for all interpreters.\n\nIf the channel is empty then the keyword args are ignored and both\nends are immediately closed.  Otherwise, if 'force' is True then\nall queued items are released and both ends are immediately\nclosed.\n\nIf the channel is not empty *and* 'force' is False then following\nhappens:\n\n * recv is True (regardless of send):\n   - raise ChannelNotEmptyError\n * recv is None and send is None:\n   - raise ChannelNotEmptyError\n * send is True and recv is not True:\n   - fully close the 'send' end\n   - close the 'recv' end to interpreters not already receiving\n   - fully close it once empty\n\nClosing an already closed channel results in a ChannelClosedError.\n\nOnce the channel's ID has no more ref counts in any interpreter\nthe channel will be destroyed.
channel_create
channel_create() -> cid\n\nCreate a new cross-interpreter channel and return a unique generated ID.
channel_destroy
channel_destroy(cid)\n\nClose and finalize the channel.  Afterward attempts to use the channel\nwill behave as though it never existed.
channel_list_all
channel_list_all() -> [cid]\n\nReturn the list of all IDs for active channels.
channel_list_interpreters
channel_list_interpreters(cid, *, send) -> [id]\n\nReturn the list of all interpreter IDs associated with an end of the channel.\n\nThe 'send' argument should be a boolean indicating whether to use the send or\nreceive end.
channel_recv
channel_recv(cid, [default]) -> obj\n\nReturn a new object from the data at the front of the channel's queue.\n\nIf there is nothing to receive then raise ChannelEmptyError, unless\na default value is provided.  In that case return it.
channel_release
channel_release(cid, *, send=None, recv=None, force=True)\n\nClose the channel for the current interpreter.  'send' and 'recv'\n(bool) may be used to indicate the ends to close.  By default both\nends are closed.  Closing an already closed end is a noop.
channel_send
channel_send(cid, obj)\n\nAdd the object's data to the channel's queue.
char
char format requires a bytes object of length 1
character
character U+%x is not in range [U+0000; U+%x]
character argument not in range(0x110000)
character mapping must be in range(0x%x)
character mapping must be in range(256)
character mapping must return integer, None or str
character mapping must return integer, bytes or None, not %.400s
character maps to <undefined>
character out of range
characters_written
charbuffer
charbuffertype
charmap
charmap_build
charmap_build($module, map, /)\n--\n\n
charmap_decode
charmap_decode($module, data, errors=None, mapping=None, /)\n--\n\n
charmap_encode
charmap_encode($module, str, errors=None, mapping=None, /)\n--\n\n
chars
chdir
chdir($module, /, path)\n--\n\nChange the current working directory to the specified path.\n\npath may always be specified as a string.\nOn some platforms, path may also be specified as an open file descriptor.\n  If this functionality is unavailable, using it raises an exception.
check_enableusersite
check_hash_based_pycs
check_hash_pycs_mode
check_source
check_str
checked
chflags
child
children
children_system
children_user
chmod
chmod($module, /, path, mode, *, dir_fd=None, follow_symlinks=True)\n--\n\nChange the access permissions of a file.\n\n  path\n    Path to be modified.  May always be specified as a str, bytes, or a path-like object.\n    On some platforms, path may also be specified as an open file descriptor.\n    If this functionality is unavailable, using it raises an exception.\n  mode\n    Operating-system mode bitfield.\n  dir_fd\n    If not None, it should be a file descriptor open to a directory,\n    and path should be relative; path will then be relative to that\n    directory.\n  follow_symlinks\n    If False, and the last element of the path is a symbolic link,\n    chmod will modify the symbolic link itself instead of the file\n    the link points to.\n\nIt is an error to use dir_fd or follow_symlinks when specifying path as\n  an open file descriptor.\ndir_fd and follow_symlinks may not be implemented on your platform.\n  If they are unavailable, using them will raise a NotImplementedError.
chown
chr($module, i, /)\n--\n\nReturn a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.
chr() arg not in range(0x110000)
chunk
ciUC+r
cj5M
ckcic
ckkkdk
clUUPl
class
class   size   num pools   blocks in use  avail blocks\n-----   ----   ---------   -------------  ------------\n
classmeth
classmeth(*args, **kw)
classmethod
classmethod(function) -> method\n\nConvert a function to be a class method.\n\nA class method receives the class as implicit first argument,\njust like an instance method receives the instance.\nTo declare a class method, use this idiom:\n\n  class C:\n      @classmethod\n      def f(cls, arg1, arg2, argN):\n          ...\n\nIt can be called either on the class (e.g. C.f()) or on an instance\n(e.g. C().f()).  The instance is ignored except for its class.\nIf a class method is called for a derived class, the derived class\nobject is passed as the implied first argument.\n\nClass methods are different than C++ or Java static methods.\nIf you want those, see the staticmethod builtin.
classmethod_descriptor
clear
clear($self, /)\n--\n\nRemove all items from list.
clear($self, /)\n--\n\nRemove all items from memo.
clear($self, /)\n--\n\nRemove all items from the bytearray.
clear()\n\nClear all profiling information collected so far.\n
clear_memo
clear_memo($self, /)\n--\n\nClears the pickler's "memo".\n\nThe memo is the data structure that remembers which objects the\npickler has already seen, so that shared or recursive objects are\npickled by reference and not by value.  This method is useful when\nre-using picklers.
clear_traces
clear_traces($module, /)\n--\n\nClear traces of memory blocks allocated by Python.
clearerr
clock
close
close($module, /, fd)\n--\n\nClose a file descriptor.
close($self, /)\n--\n\n
close($self, /)\n--\n\nClose the IO object.\n\nAttempting any further operation after the object is closed\nwill raise a ValueError.\n\nThis method has no effect if the file is already closed.
close($self, /)\n--\n\nClose the console object.\n\nA closed console object cannot be used for further I/O operations.\nclose() may be called more than once without error.
close($self, /)\n--\n\nClose the file.\n\nA closed file cannot be used for further I/O operations.  close() may be\ncalled more than once without error.
close($self, /)\n--\n\nDisable all I/O operations.
close($self, /)\n--\n\nFlush and close the IO object.\n\nThis method has no effect if the file is already closed.
close() -> raise GeneratorExit inside coroutine.
close() -> raise GeneratorExit inside generator.
closed
closefd
closerange
closerange($module, fd_low, fd_high, /)\n--\n\nCloses all file descriptors in [fd_low, fd_high), ignoring errors.
closing parenthesis '%c' does not match opening parenthesis '%c'
closing parenthesis '%c' does not match opening parenthesis '%c' on line %d
closure
closure can only be used when source is a code object
cmath
cmp_to_key
cmpop
cmpop = Eq | NotEq | Lt | LtE | Gt | GtE | Is | IsNot | In | NotIn
cn=W
co_argcount
co_argcount must be a positive integer
co_cellvars
co_code
co_consts
co_exceptiontable
co_filename
co_firstlineno
co_firstlineno must be a positive integer
co_flags
co_flags must be a positive integer
co_freevars
co_kwonlyargcount
co_kwonlyargcount must be a positive integer
co_lines
co_linetable
co_lnotab
co_name
co_names
co_nlocals
co_nlocals must be a positive integer
co_positions
co_posonlyargcount
co_posonlyargcount must be a positive integer
co_qualname
co_stacksize
co_stacksize must be a positive integer
co_varnames
cod/e
code
code 0x
code object from {!r}
code object from {}
code object or built-in function name
code object passed to eval() may not contain free variables
code object requires a closure of exactly length %zd
code point in surrogate code point range(0xd800, 0xe000)
code point not in range(0x110000)
code(argcount, posonlyargcount, kwonlyargcount, nlocals, stacksize,\n     flags, codestring, constants, names, varnames, filename, name,\n     qualname, firstlineno, linetable, exceptiontable, freevars=(),\n     cellvars=(), /)\n--\n\nCreate a code object.  Not for the faint of heart.
code.__new__
code: argcount must not be negative
code: co_code is malformed
code: co_code larger than INT_MAX
code: co_nlocals != len(co_varnames)
code: co_varnames is too small
code: kwonlyargcount must not be negative
code: nlocals must not be negative
code: posonlyargcount must not be negative
code_debug_ranges
code_object
code_page_decode
code_page_decode($module, codepage, data, errors=None, final=False, /)\n--\n\n
code_page_encode
code_page_encode($module, code_page, str, errors=None, /)\n--\n\n
codec
codec is unexpected type
codec must pass exception instance
codec search functions must return 4-tuples
codecs
codecs.decode()
codecs.encode should be a callable, not %.200s
codecs.encode()
codecs.open()
codeop
coerce_c_locale
coerce_c_locale_warn
cogCn
col_offset
collect
collect($module, /, generation=2)\n--\n\nRun the garbage collector.\n\nWith no arguments, run a full collection.  The optional argument\nmay be an integer specifying which generation to collect.  A ValueError\nis raised if the generation number is invalid.\n\nThe number of unreachable objects is returned.
collectable
collected
collections
collections.OrderedDict
collections.abc
collections.abc.Callable[[
collections.defaultdict
collections.deque
colon
colon_sep
colorsys
columns
comb
comb($module, n, k, /)\n--\n\nNumber of ways to choose k items from n items without repetition and without order.\n\nEvaluates to n! / (k! * (n - k)!) when k <= n and evaluates\nto zero when k > n.\n\nAlso called the binomial coefficient because it is equivalent\nto the coefficient of k-th term in polynomial expansion of the\nexpression (1 + x)**n.\n\nRaises TypeError if either of the arguments are not integers.\nRaises ValueError if either of the arguments are negative.
combinations
combinations(iterable, r)\n--\n\nReturn successive r-length combinations of elements in the iterable.\n\ncombinations(range(4), 3) --> (0,1,2), (0,1,3), (0,2,3), (1,2,3)
combinations_with_replacement
combinations_with_replacement(iterable, r)\n--\n\nReturn successive r-length combinations of elements in the iterable allowing individual elements to have successive repeats.\n\ncombinations_with_replacement('ABC', 2) --> ('A','A'), ('A','B'), ('A','C'), ('B','B'), ('B','C'), ('C','C')
combine
command
comment_size
common
commonpath
commonpath() arg is an empty sequence
commonpath.<locals>.<genexpr>
commonpath.<locals>.<listcomp>
commonpath.<locals>.<listcomp>.<listcomp>
commonprefix
comp
compact->utf8 != data
compact->utf8 == ((void *)0)
compact->utf8 == data
compact->utf8_length == 0
compact->utf8_length == ascii->length
compact->wstr_length == 0
compact->wstr_length == ascii->length
comparators
comparing strings with non-ASCII characters is not supported
comparison
compile
compile($module, /, pattern, flags, code, groups, groupindex,\n        indexgroup)\n--\n\n
compile($module, /, source, filename, mode, flags=0,\n        dont_inherit=False, optimize=-1, *, _feature_version=-1)\n--\n\nCompile source into a code object that can be executed by exec() or eval().\n\nThe source code may represent a Python module, statement or expression.\nThe filename will be used for run-time error messages.\nThe mode must be 'exec' to compile a module, 'single' to compile a\nsingle (interactive) statement, or 'eval' to compile an expression.\nThe flags argument, if present, controls which future statements influence\nthe compilation of the code.\nThe dont_inherit argument, if true, stops the compilation inheriting\nthe effects of any future statements in effect in the code calling\ncompile; if absent or false these statements do influence the compilation,\nin addition to any features explicitly specified.
compile() mode 'func_type' requires flag PyCF_ONLY_AST
compile() mode must be 'exec', 'eval' or 'single'
compile() mode must be 'exec', 'eval', 'single' or 'func_type'
compile(): invalid optimize value
compile(): unrecognised flags
compile.c compiler unit
compileall
compiled module 
compiler stack_effect(opcode=%d, arg=%i) failed
compiler_lookup_arg(name=%R) with reftype=%d failed in %S; freevars of code %S: %R
complex
complex division by zero
complex exponentiation
complex modulo
complex() arg is a malformed string
complex() argument must be a string or a number, not '%.200s'
complex() can't take second arg if first is a string
complex() first argument must be a string or a number, not '%.200s'
complex() second arg can't be a string
complex() second argument must be a number, not '%.200s'
complex(real=0, imag=0)\n--\n\nCreate a complex number from a real part and an optional imaginary part.\n\nThis is equivalent to (real + imag*1j) where imag defaults to 0.
comprehension
comprehension field "ifs" changed size during iteration
comprehension field "ifs" must be a list, not a %.200s
comprehension inner loop cannot rebind assignment expression target '%U'
comprehension with no generators
comprehension(expr target, expr iter, expr* ifs, int is_async)
compress
compress($module, data, /, level=Z_DEFAULT_COMPRESSION, wbits=MAX_WBITS)\n--\n\nReturns a bytes object containing compressed data.\n\n  data\n    Binary data to be compressed.\n  level\n    Compression level, in 0-9 or -1.\n  wbits\n    The window buffer size and container format.
compress($self, data, /)\n--\n\nReturns a bytes object containing compressed data.\n\n  data\n    Binary data to be compressed.\n\nAfter calling this function, some of the input data may still\nbe stored in internal buffers for later processing.\nCall the flush() method to clear these buffers.
compress(data, selectors)\n--\n\nReturn data elements corresponding to true selector elements.\n\nForms a shorter iterator from selected data elements using the selectors to\nchoose the data elements.
compressobj
compressobj($module, /, level=Z_DEFAULT_COMPRESSION, method=DEFLATED,\n            wbits=MAX_WBITS, memLevel=DEF_MEM_LEVEL,\n            strategy=Z_DEFAULT_STRATEGY, zdict=None)\n--\n\nReturn a compressor object.\n\n  level\n    The compression level (an integer in the range 0-9 or -1; default is\n    currently equivalent to 6).  Higher compression levels are slower,\n    but produce smaller results.\n  method\n    The compression algorithm.  If given, this must be DEFLATED.\n  wbits\n    +9 to +15: The base-two logarithm of the window size.  Include a zlib\n        container.\n    -9 to -15: Generate a raw stream.\n    +25 to +31: Include a gzip container.\n  memLevel\n    Controls the amount of memory used for internal compression state.\n    Valid values range from 1 to 9.  Higher values result in higher memory\n    usage, faster compression, and smaller output.\n  strategy\n    Used to tune the compression algorithm.  Possible values are\n    Z_DEFAULT_STRATEGY, Z_FILTERED, and Z_HUFFMAN_ONLY.\n  zdict\n    The predefined compression dictionary - a sequence of bytes\n    containing subsequences that are likely to occur in the input data.
comps
concat
concat($module, a, b, /)\n--\n\nSame as a + b, for a and b sequences.
concurrent
conditional expression
conf_basename
conffile
config
config_get_locale_encoding
config_init_hash_seed
config_init_int_max_str_digits
config_init_pycache_prefix
config_init_stdio_encoding
config_init_tracemalloc
config_parse_cmdline
config_run_filename_abspath
config_set_bytes_string
config_update_argv
configparser
configure_c_stdio
configure_locale
conjugate
conjugate($self, /)\n--\n\nReturn self, the complex conjugate of any float.
conjugate($self, /)\n--\n\nReturn the complex conjugate of its argument. (3-4j).conjugate() == 3+4j.
constructor requires a sequence
consumed
contains
contains($module, a, b, /)\n--\n\nSame as b in a (note reversed operands).
contents
context
context variable name must be a str
context_expr
contextlib
contextmanager
contextvars
contiguous
contiguous buffer
continue
conversion
cookie
copy
copy($self, /)\n--\n\nCopy the memo to a new object.
copy($self, /)\n--\n\nReturn a copy of B.
copy($self, /)\n--\n\nReturn a copy of the compression object.
copy($self, /)\n--\n\nReturn a copy of the decompression object.
copy($self, /)\n--\n\nReturn a copy of the hash object.
copy($self, /)\n--\n\nReturn a shallow copy of the context object.
copy($self, /)\n--\n\nReturn a shallow copy of the list.
copy() takes no arguments
copy_context
copy_context($module, /)\n--\n\n
copyreg
copyreg._extension_cache should be a dict, not %.200s
copyreg._extension_registry should be a dict, not %.200s
copyreg._inverted_registry should be a dict, not %.200s
copyreg._slotnames didn't return a list or None
copyreg.dispatch_table should be a dict, not %.200s
copyright
copysign
copysign($module, x, y, /)\n--\n\nReturn a float with the magnitude (absolute value) of x but the sign of y.\n\nOn platforms that support signed zeros, copysign(1.0, -0.0)\nreturns -1.0.\n
core initialized
core_read_precmdline
coroutine
coroutine '%S' was never awaited
coroutine already executing
coroutine ignored GeneratorExit
coroutine is being awaited already
coroutine raised StopIteration
coroutine_wrapper
corrupt Zip file: 
cos($module, x, /)\n--\n\nReturn the cosine of x (measured in radians).
cos($module, z, /)\n--\n\nReturn the cosine of z.
cosh
cosh($module, x, /)\n--\n\nReturn the hyperbolic cosine of x.
cosh($module, z, /)\n--\n\nReturn the hyperbolic cosine of z.
could not acquire lock for %s at interpreter shutdown, possibly due to daemon threads
could not convert string to %s: %R
could not convert string to float
could not convert string to float: %R
could not convert string to float: '%.200s'
could not convert string to int
could not create {!r}: {!r}
could not determine default encoding
could not find MARK
could not find io module state (interpreter shutdown?)
could not register None for cross-interpreter sharing
could not register bytes for cross-interpreter sharing
could not register int for cross-interpreter sharing
could not register str for cross-interpreter sharing
couldn't acquire lock
couldn't convert the object to str.
couldn't convert the object to unicode.
count
count exceeds C integer size
count($self, v, /)\n--\n\nReturn number of occurrences of v in the array.
count($self, value, /)\n--\n\nReturn number of occurrences of value.
count(start=0, step=1)\n--\n\nReturn a count object whose .__next__() method returns consecutive values.\n\nEquivalent to:\n    def count(firstval=0, step=1):\n        x = firstval\n        while 1:\n            yield x\n            x += step
countOf
countOf($module, a, b, /)\n--\n\nReturn the number of items in a which are, or which equal, b.
cp%u
cp437_table
cp932
cp932ext
cp949
cp949ext
cp950
cp950ext
cp`=murfb
cpathname
cpcSe
cpnUV
cpu_count
cpu_count($module, /)\n--\n\nReturn the number of CPUs in the system; return None if indeterminable.\n\nThis number is not equivalent to the number of CPUs the current process can\nuse.  The number of usable CPUs can be obtained with\n``len(os.sched_getaffinity(0))``
cpython
cpython-311
cpython.PyInterpreterState_Clear
cpython.PyInterpreterState_New
cpython._PySys_ClearAuditHooks
cpython.run_command
cpython.run_file
cpython.run_interactivehook
cpython.run_module
cpython.run_startup
cpython.run_stdin
cqczc
cqnU
cr_await
cr_code
cr_frame
cr_origin
cr_running
cr_suspended
crar-C@
crc32
crc32($module, data, crc=0, /)\n--\n\nCompute CRC-32 incrementally.
crc32($module, data, value=0, /)\n--\n\nCompute a CRC-32 checksum of data.\n\n  value\n    Starting value of the checksum.\n\nThe returned checksum is an integer.
crc_hqx
crc_hqx($module, data, crc, /)\n--\n\nCompute CRC-CCITT incrementally.
create
create() -> ID\n\nCreate a new interpreter and return a unique generated ID.
create_builtin
create_builtin($module, spec, /)\n--\n\nCreate an extension module.
create_dynamic
create_dynamic($module, spec, file=<unrepresentable>, /)\n--\n\nCreate an extension module.
create_gil
create_module
created {!r}
creation of module %s failed without setting an exception
creation of module %s raised unreported exception
credits
cross
cross($module, fragment, width, /)\n--\n\nReturn the number of zero crossings in the fragment passed as an argument.
crypt
csbsj
ctetA
ctime
ctime(seconds) -> string\n\nConvert a time in seconds since the Epoch to a string in local time.\nThis is equivalent to asctime(localtime(seconds)). When the time tuple is\nnot present, current time as returned by localtime() is used.
ctypes
curdir
currency_symbol
current_user
curses
cut_off
cutoff
cv)w
cwcgc
cycle
cycle(iterable, /)\n--\n\nReturn elements from the iterable until it is exhausted. Then repeat the sequence indefinitely.
cygwin
czdv
c{cichczc]eVeQeYeWe_UOeXeUeTe
c}3N
d RXw
d d"d$d%d)d*d/d0d5d=d?dKdOdQdRdSdTdZd[d\d]d_d`dadcdmdsdtd{d}d
d d\fd&d!d^d
d!e7
d"d#d$d
d"dydQd`dmd
d"e)eA
d#e7
d#l"m,Z,m-Z.
d$nQo|v
d%d)d/dZd[d]dsd}d
d%e8
d&d6d
d'n'i'ilKo
d*Z%e9rbe
d*Z%e\nr
d*Z<e
d*Z<g
d*ZN[Nn
d*ZN[Nw
d*d-d=d,d
d+e;e7e<
d,Z!eSZ
d,Za\t
d.d!d
d.l"m7Z8
d/Z:n
d0e0f0
d1nD/W
d3e3
d3e=
d4g8j
d4ggrfwFz
d5d6
d5eB
d6d,
d6d5
d6e6
d6exe9j
d7Wr
d7e=
d8e8f8U
d9d7d"d#d\fd&d0d(dAd5d/d\nd
d9e;
d:eG
d;array item must be float
d;eFeB
d;lST
d<cUs4RF)LdU
d<h8h
d=eFeB
d>eIeH
d?dldkdYdedwdse
d?eFe=
d@d%d'd\vd
d@eIeG
dAeE
dBeIeG
dCe9e=
dEeEv
dEeL
dFeFl
dGeL
dH-Z
dH6s
dJN`/T=O7U$j^U%jAP<9e
dJd[]
dJfjN
dR(WPgj
dRPC\fh
dS`ScSO
dSwv
dT65s5VXPHU
dXcX
dXdTd
dZcZd
dZdK:
d\nd\vg
d\nl\fT
d\rd6d
d\rd\rf
d\tZ#Y
d\td d$d
d\td\nd\rd
d\td\nz
d\tl\fT
d\tl\fZ\fd
d\tl\nZ\nd
d\tl\tZ\td
d\tl\vZ\vd
d]opqvpz
d^d\dKdSd`dPd
d_2J
daGh
daeaTC
dagVgDm
darwin
darwinz
data
data != ((void *)0)
data == ((void *)0)
data error
data out of range
data_encoding
data_info
data_size
dataclasses
datapath
date
date value out of range
date(year, month, day) --> date object
date, time -> datetime with same date and time fields
datetime
datetime -> DST offset as timedelta positive east of UTC.
datetime -> string name of time zone.
datetime -> timedelta showing offset from UTC, negative values indicating West of UTC
datetime in UTC -> datetime in local time.
datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])\n\nThe year, month and day arguments are required. tzinfo may be None, or an\ninstance of a tzinfo subclass. The remaining arguments may be ints.\n
datetime.IsoCalendarDate
datetime.date
datetime.datetime
datetime.datetime_CAPI
datetime.time
datetime.timedelta
datetime.timezone
datetime.tzinfo
datetime_CAPI
day is out of range for month
day of month out of range
day of month, range [1, 31]
day of week out of range
day of week, range [0, 6], Monday is 0
day of year out of range
day of year, range [1, 366]
daylight
days
days=%d
days=%d; must have magnitude <= %d
dc;i
dce_h
dclcW
deadlock detected by %r
deallocated BytesIO object has exported buffers
deallocated bytearray object has exported buffers
deallocating <dummy key>
deallocating None
deallocating NotImplemented
deallocating True or False
debug
debug_override
debug_override or optimization must be set to None
decimal
decimal_point
decode
decode($module, /, obj, encoding='utf-8', errors='strict')\n--\n\nDecodes obj using the codec registered for encoding.\n\nDefault encoding is 'utf-8'.  errors may be given to set a\ndifferent error handling scheme.  Default is 'strict' meaning that encoding\nerrors raise a ValueError.  Other possible values are 'ignore', 'replace'\nand 'backslashreplace' as well as any other name registered with\ncodecs.register_error that can handle ValueErrors.
decode($self, /, encoding='utf-8', errors='strict')\n--\n\nDecode the bytearray using the codec registered for encoding.\n\n  encoding\n    The encoding with which to decode the bytearray.\n  errors\n    The error handling scheme to use for the handling of decoding errors.\n    The default is 'strict' meaning that decoding errors raise a\n    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\n    as well as any other name registered with codecs.register_error that\n    can handle UnicodeDecodeErrors.
decode($self, /, encoding='utf-8', errors='strict')\n--\n\nDecode the bytes using the codec registered for encoding.\n\n  encoding\n    The encoding with which to decode the bytes.\n  errors\n    The error handling scheme to use for the handling of decoding errors.\n    The default is 'strict' meaning that decoding errors raise a\n    UnicodeDecodeError. Other possible values are 'ignore' and 'replace'\n    as well as any other name registered with codecs.register_error that\n    can handle UnicodeDecodeErrors.
decode($self, /, input, errors=None)\n--\n\nDecodes 'input'.\n\n'errors' may be given to set a different error handling scheme. Default is\n'strict' meaning that encoding errors raise a UnicodeDecodeError. Other possible\nvalues are 'ignore' and 'replace' as well as any other name registered with\ncodecs.register_error that is able to handle UnicodeDecodeErrors."
decode($self, /, input, final=False)\n--\n\n
decode_source
decoded result is too long for a Python string
decoded_path
decodedbytes
decodekey
decoder
decoder must return a tuple (object,integer)
decoder should return a string result, not '%.200s'
decodevalue
decoding
decoding error
decoding error handler must return (str, int) tuple
decoding error; unknown error handling code: %.400s
decoding str is not supported
decoding to str: need a bytes-like object, %.80s found
decoding_map
decompress
decompress($module, data, /, wbits=MAX_WBITS, bufsize=DEF_BUF_SIZE)\n--\n\nReturns a bytes object containing the uncompressed data.\n\n  data\n    Compressed data.\n  wbits\n    The window buffer size and container format.\n  bufsize\n    The initial output buffer size.
decompress($self, data, /, max_length=0)\n--\n\nReturn a bytes object containing the decompressed version of the data.\n\n  data\n    The binary data to decompress.\n  max_length\n    The maximum allowable length of the decompressed data.\n    Unconsumed input data will be stored in\n    the unconsumed_tail attribute.\n\nAfter calling this function, some of the input data may still be stored in\ninternal buffers for later processing.\nCall the flush() method to clear these buffers.
decompressobj
decompressobj($module, /, wbits=MAX_WBITS, zdict=b'')\n--\n\nReturn a decompressor object.\n\n  wbits\n    The window buffer size and container format.\n  zdict\n    The predefined compression dictionary.  This must be the same\n    dictionary as used by the compressor that produced the input data.
decorator_list
dedent
default
default 'except:' must be last
default_factory
default_int_handler
default_int_handler($module, signalnum, frame, /)\n--\n\nThe default handler for SIGINT installed by Python.\n\nIt raises KeyboardInterrupt.
default_max_str_digits
defaultaction
defaultdict(default_factory=None, /, [...]) --> dict with default factory\n\nThe default factory is called without arguments to produce\na new value when a key is not present, in __getitem__ only.\nA defaultdict compares equal to a dict with the same items.\nAll remaining arguments are treated the same as if they were\npassed to the dict constructor, including keyword arguments.\n
defaults
deflateSetDictionary()
defpath
degrees
degrees($module, x, /)\n--\n\nConvert angle x from radians to degrees.
delattr
delattr($module, obj, name, /)\n--\n\nDeletes the named attribute from the given object.\n\ndelattr(x, 'y') is equivalent to ``del x.y``
delete
deleter
deletion of interned string failed
delimiter
delitem
delitem($module, a, b, /)\n--\n\nSame as del a[b].
denominator
depth
depth must be >= 0
depth must be between 1 and 255
deq_
deque already at its maximum size
deque index out of range
deque mutated during iteration
deque([iterable[, maxlen]]) --> deque object\n\nA list-like sequence optimized for data accesses near its endpoints.
deque.rotate
derive
derive must return an instance of BaseExceptionGroup
descriptor '%V' for '%.100s' objects doesn't apply to a '%.100s' object
descriptor '%V' for type '%.100s' needs a type, not a '%.100s' as arg 2
descriptor '%V' for type '%.100s' needs either an object or a type
descriptor '%V' needs a type, not '%s', as arg 2
descriptor '%V' of '%.100s' object needs an argument
descriptor '%V' requires a '%.100s' object but received a '%.100s'
descriptor '%V' requires a subtype of '%.100s' but received '%.100s'
descriptor for index '%zd' for tuple subclasses doesn't apply to '%s' object
destination is too small to receive data from source
destroy
destroy(id)\n\nDestroy the identified interpreter.\n\nAttempting to destroy the current interpreter results in a RuntimeError.\nSo does an unrecognized ID.
destroy_gil
detach
detach($self, /)\n--\n\n
detach($self, /)\n--\n\nDisconnect this buffer from its underlying raw stream and return it.\n\nAfter the raw stream has been detached, the buffer is in an unusable\nstate.
details of the calls
detect_encoding
dev1
dev2
dev_mode
device
device_encoding
device_encoding($module, /, fd)\n--\n\nReturn a string describing the encoding of a terminal's file descriptor.\n\nThe file descriptor must be attached to a terminal.\nIf the device is not a terminal, return None.
devnull
dfir
dgdodvdNd*e
dheD
dialect
dialect name must be a string
dialect_new
dict
dict comprehension
dict expected
dict items iterator must return 2-tuples
dict literal
dict mutated during update
dict unpacking cannot be used in dict comprehension
dict() -> new empty dictionary\ndict(mapping) -> new dictionary initialized from a mapping object's\n    (key, value) pairs\ndict(iterable) -> new dictionary initialized as if via:\n    d = {}\n    for k, v in iterable:\n        d[k] = v\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\n    in the keyword argument list.  For example:  dict(one=1, two=2)
dict_itemiterator
dict_items
dict_keyiterator
dict_keys
dict_reverseitemiterator
dict_reversekeyiterator
dict_reversevalueiterator
dict_valueiterator
dict_values
dictcomp
dictionary changed size during iteration
dictionary for instance variables (if defined)
dictionary is empty
dictionary keys changed during iteration
dictionary of keyword arguments to future partial calls
dictionary that this view refers to
dictionary update sequence element #%zd has length %zd; 2 is required
did you forget parentheses around the comprehension target?
difference
difference_update
difflib
digest
digest($self, /)\n--\n\nReturn the digest value as a bytes object.
digest($self, length, /)\n--\n\nReturn the digest value as a bytes object.
digest_size
digest_size must be between 1 and %d bytes
digits
dir(): expected keys() of locals to be a list, not '%.200s'
dir([object]) -> list of strings\n\nIf called without an argument, return the names in the current scope.\nElse, return an alphabetized list of names comprising (some of) the attributes\nof the given object, and of attributes reachable from it.\nIf the object supplies a method named __dir__, it will be used; otherwise\nthe default dir() logic is used and returns:\n  for a module object: the module's attributes.\n  for a class object:  its attributes, and recursively the attributes\n    of its bases.\n  for any other object: its attributes, its class's attributes, and\n    recursively the attributes of its class's base classes.
dir_fd
dircase
dirfd
dirname
dirname)
dirpath
dirs
disable
disable($module, /)\n--\n\nDisable automatic garbage collection.
disable(): disable the fault handler
disable()\n\nStop collecting profiling information.\n
discard
dispatch_table
displayhook
displayhook($module, object, /)\n--\n\nPrint an object to sys.stdout and also save it in builtins._
dist
distutils
division
division by zero
divmod
divmod($module, x, y, /)\n--\n\nReturn the tuple (x//y, x%y).  Invariant: div*y + mod == x.
divmod()
divmod() returned a tuple of size %zd
divmod() returned a value out of range
divmod() returned non-tuple (type %.200s)
djej
dk:RP
dleof
dllhandle
dllz
dnfnD
doctest
doesn't exist
dollar
don't know how to byteswap this array type
don't know how to handle %.200s in error callback
dont_inherit
dont_write_bytecode
dotIndex
dot_count
dotdot
double
doublequote
dp4snT
drive
drivesplits
drjrX
drop_gil
drop_gil: GIL is not locked
dropwhile
dropwhile(predicate, iterable, /)\n--\n\nDrop items from the iterable while predicate(item) is true.\n\nAfterwards, return every element until the iterable is exhausted.
dsesfs
dst_dir_fd
dtf0l
duewexe
dummy_dealloc
dump
dump($module, /, obj, file, protocol=None, *, fix_imports=True,\n     buffer_callback=None)\n--\n\nWrite a pickled representation of obj to the open file object file.\n\nThis is equivalent to ``Pickler(file, protocol).dump(obj)``, but may\nbe more efficient.\n\nThe optional *protocol* argument tells the pickler to use the given\nprotocol; supported protocols are 0, 1, 2, 3, 4 and 5.  The default\nprotocol is 4. It was introduced in Python 3.4, and is incompatible\nwith previous versions.\n\nSpecifying a negative protocol version selects the highest protocol\nversion supported.  The higher the protocol used, the more recent the\nversion of Python needed to read the pickle produced.\n\nThe *file* argument must have a write() method that accepts a single\nbytes argument.  It can thus be a file object opened for binary\nwriting, an io.BytesIO instance, or any other custom object that meets\nthis interface.\n\nIf *fix_imports* is True and protocol is less than 3, pickle will try\nto map the new Python 3 names to the old module names used in Python\n2, so that the pickle data stream is readable with Python 2.\n\nIf *buffer_callback* is None (the default), buffer views are serialized\ninto *file* as part of the pickle stream.  It is an error if\n*buffer_callback* is not None and *protocol* is None or smaller than 5.
dump($module, value, file, version=version, /)\n--\n\nWrite the value on the open file.\n\n  value\n    Must be a supported type.\n  file\n    Must be a writeable binary file.\n  version\n    Indicates the data format that dump should use.\n\nIf the value has (or contains an object that has) an unsupported type, a\nValueError exception is raised - but garbage data will also be written\nto the file. The object will not be properly read back by load().
dump($self, obj, /)\n--\n\nWrite a pickled representation of the given object to the open file.
dump_refs
dump_traceback
dump_traceback(file=sys.stderr, all_threads=True): dump the traceback of the current thread, or of all threads if all_threads is True, into file
dump_traceback_later
dump_traceback_later(timeout, repeat=False, file=sys.stderrn, exit=False):\ndump the traceback of all threads in timeout seconds,\nor each timeout seconds if repeat is True. If exit is True, call _exit(1) which is not safe.
dumps
dumps($module, /, obj, protocol=None, *, fix_imports=True,\n      buffer_callback=None)\n--\n\nReturn the pickled representation of the object as a bytes object.\n\nThe optional *protocol* argument tells the pickler to use the given\nprotocol; supported protocols are 0, 1, 2, 3, 4 and 5.  The default\nprotocol is 4. It was introduced in Python 3.4, and is incompatible\nwith previous versions.\n\nSpecifying a negative protocol version selects the highest protocol\nversion supported.  The higher the protocol used, the more recent the\nversion of Python needed to read the pickle produced.\n\nIf *fix_imports* is True and *protocol* is less than 3, pickle will\ntry to map the new Python 3 names to the old module names used in\nPython 2, so that the pickle data stream is readable with Python 2.\n\nIf *buffer_callback* is None (the default), buffer views are serialized\ninto *file* as part of the pickle stream.  It is an error if\n*buffer_callback* is not None and *protocol* is None or smaller than 5.
dumps($module, value, version=version, /)\n--\n\nReturn the bytes object that would be written to a file by dump(value, file).\n\n  value\n    Must be a supported type.\n  version\n    Indicates the data format that dumps should use.\n\nRaise a ValueError exception if value has (or contains an object that has) an\nunsupported type.
dup($module, fd, /)\n--\n\nReturn a duplicate of a file descriptor.
dup2
dup2($module, /, fd, fd2, inheritable=True)\n--\n\nDuplicate file descriptor.
duplicate argument '%U' in function definition
duplicate base class
duplicate base class %U
dvezeye{e
dwFlags
dwew1
dxd_dzdQdgd4dmd{dre
dyfyiyjykylynypyqyrysytyuyvyyy{y|y}y~y
dynamic module does not define module export function (%s_%s)
d|d}g
d}Nz
e e!e
e!d6f
e"d6f
e"e&e)e.e1e:e<e=eCeGeIePeReTe_e`egekeze}e
e#k=k4t
e$Z&Y
e$d9f
e$e#e+e4e5e7e6e8eKuHeVeUeMeXe^e]erexe
e%f-f f'f/f
e(d.d0
e(d1d
e(d2d3
e(d4d
e(d5d
e(d6d7
e(d6d8
e(d9d:
e(d=d
e(d>d
e(dCdA
e(dDdE
e(dFd
e(dHd
e(dId
e(dJd
e(dKd
e(f|p
e)Z+Y
e)d4f
e*d5f
e*j'k
e+Z1Y
e+d7f
e+e!z
e+e2d3
e+e2d4
e,e2
e-d4f
e.d5f
e.g,g*g+g-gck
e.lFO
e.u7
e/d0
e/d1
e/d2
e/d3
e/d7f
e/e"z
e/e2
e/fBf
e12_<U(?,BUX1Bk
e1d4f
e1f/h\q6z
e1f1x
e26V;V
e2d5f
e2eDeTekeze
e2e\nd)
e2f2g
e2n}q
e3d7f
e3e$
e3e$e
e3e$z
e3e2e
e3e4
e3e4e
e3e4eM
e3e<e
e3e=e
e3ePe
e3eSeB
e3eUd
e3eVd
e3eYe
e4ZPe"
e4e"v
e4e\feX
e4f4g4h4i4
e4p\n
e4s5e
e5f5
e6f!f2f5f
e6p8iL
e6r1e
e8e.
e8e2
e8e9
e8e=
e=-n+A*Af
e>e2
e>g9g8g;g:g?g<g3g
e@I7K
e@RgK<o
e@eAf
eBaNJ0
eBfIfOfCfRfLfEfAf
eDd*
eDd3
eDe\
eDea
eEgGgYgUgLgHg]gMgZgKg
eEyTv
eFeHjL
eHCHY
eHfHs
eHyAy
eI%g;
eIe.
eIeP
eJf_fGfQf
eJr1dl
eKeMeKeM
eLqm
eM*J
eM1f4f3f
eOd1e
eOd9
eOd:
eOd;
eOdB
eQDS
eQd2
eQd7
eQd8
eSE3V
eTdTfTgThTiT
eUZVn\t
eUr:e
eVdVgV
eVdq
eWgNW;
eWl"o
eXe%
eYifk
eZ@7tQuRsUW=p
eZPZ
eZcZdZ0
eZl%u
e\frOe
e\g!n{v
e\ne\ve\fe\re
e\nj3
e\nr'e\vr%e
e\rd1f
e\re\te\fe
e\te\ne
e\ve\re
e]fZfdfhfff^f
e^5Q
ead'z\r
eayn
ec^ce
ed!42
ed_e
eeUP
ee\a\
eeedef
eefaf[fYf\fbf
ef8Off
effective_ids
efgU
eg)7gg
eg;F
eijimit
eir7ei
ekt=
elapsed
elapsed time since an arbitrary point in the past
elem
elif
ellipsis
else
elts
email
embedded null byte
embedded null character
embedded null character in errors
eme_e~0
empty
empty %s on %s
empty separator
emscripten
enable
enable($module, /)\n--\n\nEnable automatic garbage collection.
enable(file=sys.stderr, all_threads=True): enable the fault handler
enable(subcalls=True, builtins=True)\n\nStart collecting profiling information.\nIf 'subcalls' is True, also records for each function\nstatistics separated according to its current caller.\nIf 'builtins' is True, records the time spent in\nbuilt-in functions separately from their caller.\n
enablerlcompleter
enablerlcompleter.<locals>.register_readline
enablerlcompleter.<locals>.register_readline.<locals>.write_history
encode
encode($module, /, obj, encoding='utf-8', errors='strict')\n--\n\nEncodes obj using the codec registered for encoding.\n\nThe default encoding is 'utf-8'.  errors may be given to set a\ndifferent error handling scheme.  Default is 'strict' meaning that encoding\nerrors raise a ValueError.  Other possible values are 'ignore', 'replace'\nand 'backslashreplace' as well as any other name registered with\ncodecs.register_error that can handle ValueErrors.
encode($self, /, encoding='utf-8', errors='strict')\n--\n\nEncode the string using the codec registered for encoding.\n\n  encoding\n    The encoding in which to encode the string.\n  errors\n    The error handling scheme to use for encoding errors.\n    The default is 'strict' meaning that encoding errors raise a\n    UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and\n    'xmlcharrefreplace' as well as any other name registered with\n    codecs.register_error that can handle UnicodeEncodeErrors.
encode($self, /, input, errors=None)\n--\n\nReturn an encoded string version of `input'.\n\n'errors' may be given to set a different error handling scheme. Default is\n'strict' meaning that encoding errors raise a UnicodeEncodeError. Other possible\nvalues are 'ignore', 'replace' and 'xmlcharrefreplace' as well as any other name\nregistered with codecs.register_error that can handle UnicodeEncodeErrors.
encode($self, /, input, final=False)\n--\n\n
encode_basestring
encode_basestring(string) -> string\n\nReturn a JSON representation of a Python string
encode_basestring_ascii
encode_basestring_ascii(string) -> string\n\nReturn an ASCII-only JSON representation of a Python string
encoded result is too long for a Python string
encoded string too long (%zd, maximum length %zd)
encoded string without null bytes
encodedkey
encodekey
encoder
encoder %s returned bytearray instead of bytes; use codecs.encode() to encode to arbitrary types
encoder must return a tuple (object, integer)
encoder should return a bytes object, not '%.200s'
encoder() must return a string, not %.80s
encodevalue
encoding
encoding error
encoding error handler must return (str, int) tuple
encoding name must be a string.
encoding problem: %s
encoding problem: %s with BOM
encoding without a string argument
encodings
end is out of bounds
end must be None or a string, not %.200s
end of string while looking for conversion specifier
end($self, group=0, /)\n--\n\nReturn index of the end of the substring matched by group.
end_col_offset
end_lineno
end_offset
end_offset must be provided when end_lineno is provided
endpos
endswith
endswith first arg must be str or a tuple of str, not %.100s
enfnm6r&{P
enfpftfvfof
enq>y
ensurepip
entries
entry
entry->me_hash != -1
entry->me_hash == hash
entry->me_value != ((void *)0)
entry->me_value == ((void *)0)
enum
enumerate
enumerate() missing required argument 'iterable'
enumerate() takes at most 2 arguments (%d given)
enumerate(iterable, start=0)\n--\n\nReturn an enumerate object.\n\n  iterable\n    an object supporting iteration\n\nThe enumerate object yields pairs containing a count (from start, which\ndefaults to zero) and a value yielded by the iterable argument.\n\nenumerate is useful for obtaining an indexed list:\n    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...
env cannot contain 'PATH' and b'PATH' keys
env.keys() or env.values() is not a list
env_base
environ
environ({
environb
environment can only contain strings
environment changed size during iteration
environment must be dictionary or None
environment too long
eobK$T
eodo2
epfpP
epsilon
eq($module, a, b, /)\n--\n\nSame as a == b.
erfc
erfc($module, x, /)\n--\n\nComplementary error function at x.
erg\nf
err_msg
errmap insertion problem.
errno
error
error at start before reading any input
error evaluating initial values
error evaluating path
error getting getpath results
error importing winreg module
error initializing hash state
error reading frozen getpath.py
error return without exception set
errorcode
errors
errors must be a string
errors without a string argument
esNeQ
escape_decode
escape_decode($module, data, errors=None, /)\n--\n\n
escape_encode
escape_encode($module, data, errors=None, /)\n--\n\n
escapechar
esfsjsaBlsoshs}<
esg5f6f4f
etBXP\nL
euc_jis_2004
euc_jisx0213
euc_jp
euc_kr
eval
eval must be given globals and locals when called without a frame
eval($module, source, globals=None, locals=None, /)\n--\n\nEvaluate the given source in the context of globals and locals.\n\nThe source may be a string representing a Python expression\nor a code object as returned by compile().\nThe globals must be a dictionary and locals can be any mapping,\ndefaulting to the current globals and locals.\nIf only globals is given, locals defaults to it.
eval_frame_handle_pending
event
evfxf
ewfw
exactly
exc_details
exc_info
exc_info($module, /)\n--\n\nReturn current exception information: (type, value, traceback).\n\nReturn information about the most recent exception caught by an except\nclause in the current stack frame or in an older stack frame.
exc_traceback
exc_type
exc_value
except
except handler
excepthandler
excepthandler = ExceptHandler(expr? type, identifier? name, stmt* body)
excepthook
excepthook($module, exctype, value, traceback, /)\n--\n\nHandle an exception by displaying it with a traceback on sys.stderr.
excepthook(exc_type, exc_value, exc_traceback, thread)\n\nHandle uncaught Thread.run() exception.
exception
exception cause
exception cause must be None or derive from BaseException
exception causes must derive from BaseException
exception code
exception context
exception context must be None or derive from BaseException
exception encoding
exception end
exception end lineno
exception end offset
exception filename
exception lineno
exception message
exception msg
exception object
exception offset
exception print_file_and_line
exception reason
exception start
exception strerror
exception text
exception($module, /)\n--\n\nReturn the current exception.\n\nReturn the most recent exception caught by an except clause\nin the current stack frame or in an older stack frame, or None\nif no such exception exists.
exceptions
exceptions must be classes or instances deriving from BaseException, not %s
exceptions must derive from BaseException
excess ')' in getargs format
exe_dir
exec
exec($module, source, globals=None, locals=None, /, *, closure=None)\n--\n\nExecute the given source in the context of globals and locals.\n\nThe source may be a string representing one or more Python statements\nor a code object as returned by compile().\nThe globals must be a dictionary and locals can be any mapping,\ndefaulting to the current globals and locals.\nIf only globals is given, locals defaults to it.\nThe closure must be a tuple of cellvars, and can only be used\nwhen source is a code object requiring exactly that many cellvars.
exec() globals must be a dict, not %.100s
exec_builtin
exec_builtin($module, mod, /)\n--\n\nInitialize a built-in module.
exec_dynamic
exec_dynamic($module, mod, /)\n--\n\nInitialize an extension module.
exec_func
exec_module
exec_prefix
execl
execl(file, *args)\n\n    Execute the executable file with argument list args, replacing the\n    current process. 
execle
execle(file, *args, env)\n\n    Execute the executable file with argument list args and\n    environment env, replacing the current process. 
execlp
execlp(file, *args)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args, replacing the current process. 
execlpe
execlpe(file, *args, env)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args and environment env, replacing the current\n    process. 
execsitecustomize
execusercustomize
executable
executable_dir
execution of module %s failed without setting an exception
execution of module %s raised unreported exception
execv
execv($module, path, argv, /)\n--\n\nExecute an executable path with arguments, replacing current process.\n\n  path\n    Path of executable file.\n  argv\n    Tuple or list of strings.
execv() arg 2 first element cannot be empty
execv() arg 2 must be a tuple or list
execv() arg 2 must not be empty
execve
execve($module, /, path, argv, env)\n--\n\nExecute an executable path with arguments, replacing current process.\n\n  path\n    Path of executable file.\n  argv\n    Tuple or list of strings.\n  env\n    Dictionary of strings mapping to strings.
execve: argv first element cannot be empty
execve: argv must be a tuple or list
execve: argv must not be empty
execve: environment must be a mapping object
execvp
execvp(file, args)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args, replacing the current process.\n    args may be a list or tuple of strings. 
execvpe
execvpe(file, args, env)\n\n    Execute the executable file (which is searched for along $PATH)\n    with argument list args and environment env, replacing the\n    current process.\n    args may be a list or tuple of strings. 
exist_ok
existing
exists
exit
exit($module, status=None, /)\n--\n\nExit the interpreter by raising SystemExit(status).\n\nIf the status is omitted or None, it defaults to zero (i.e., success).\nIf the status is an integer, it will be used as the system exit status.\nIf it is another kind of object, it will be printed and the system\nexit status will be one (i.e., failure).
exit()\n(exit_thread() is an obsolete synonym)\n\nThis is synonymous to ``raise SystemExit''.  It will cause the current\nthread to exit silently unless the exception is caught.
exit_thread
exp($module, x, /)\n--\n\nReturn e raised to the power of x.
exp($module, z, /)\n--\n\nReturn the exponential value e**z.
exp2
exp2($module, x, /)\n--\n\nReturn 2 raised to the power of x.
expand
expand($self, /, template)\n--\n\nReturn the string obtained by doing backslash substitution on the string template, as done by the sub() method.
expandtabs
expandtabs($self, /, tabsize=8)\n--\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.
expanduser
expandvars
expect int, got %s
expected %.200s.__fspath__() to return str or bytes, not %.200s
expected %d argument%s, got %zd
expected %s node, got %.400s
expected '%s'
expected ':'
expected ':' after conversion specifier
expected 'else' after 'if' expression
expected 'except' or 'finally' block
expected 'str', not '%.200s'
expected '}' before end of string
expected PickleBuffer, %.200s found
expected a function, exception type or tuple of exception types
expected a message argument
expected a subclass of ImportError
expected a writable bytes-like object
expected an indented block
expected an indented block after 'case' statement on line %d
expected an indented block after 'elif' statement on line %d
expected an indented block after 'else' statement on line %d
expected an indented block after 'except' statement on line %d
expected an indented block after 'except*' statement on line %d
expected an indented block after 'finally' statement on line %d
expected an indented block after 'for' statement on line %d
expected an indented block after 'if' statement on line %d
expected an indented block after 'match' statement on line %d
expected an indented block after 'try' statement on line %d
expected an indented block after 'while' statement on line %d
expected an indented block after 'with' statement on line %d
expected an indented block after class definition on line %d
expected an indented block after function definition on line %d
expected an instance of Token, got %R
expected at most 1 arguments, got %zd
expected bytes, %.200s found
expected comma between / and *
expected default value expression
expected integer from opener
expected long option\n
expected one or more exception types
expected only 2 or 3 dots in 
expected some sort of boolop, but got %R
expected some sort of cmpop, but got %R
expected some sort of excepthandler, but got %R
expected some sort of expr, but got %R
expected some sort of expr_context, but got %R
expected some sort of mod, but got %R
expected some sort of operator, but got %R
expected some sort of pattern, but got %R
expected some sort of stmt, but got %R
expected some sort of type_ignore, but got %R
expected some sort of unaryop, but got %R
expected str for argument 'event'
expected str for argument 'event', not %.200s
expected str, bytes or os.PathLike object, not 
expected str, bytes or os.PathLike object, not %.200s
expected str, got %s
expected str, not 
expected string or bytes-like object, got '%.200s'
expected traceback object or None, got '%s'
expected traceback object, got '%s'
expected tuple for closure, got '%.100s'
expected {}.__fspath__() to return str or bytes, not {}
expm1
expm1($module, x, /)\n--\n\nReturn exp(x)-1.\n\nThis function avoids the loss of precision involved in the direct evaluation of exp(x)-1 for small x.
expr
expr = BoolOp(boolop op, expr* values)\n     | NamedExpr(expr target, expr value)\n     | BinOp(expr left, operator op, expr right)\n     | UnaryOp(unaryop op, expr operand)\n     | Lambda(arguments args, expr body)\n     | IfExp(expr test, expr body, expr orelse)\n     | Dict(expr* keys, expr* values)\n     | Set(expr* elts)\n     | ListComp(expr elt, comprehension* generators)\n     | SetComp(expr elt, comprehension* generators)\n     | DictComp(expr key, expr value, comprehension* generators)\n     | GeneratorExp(expr elt, comprehension* generators)\n     | Await(expr value)\n     | Yield(expr? value)\n     | YieldFrom(expr value)\n     | Compare(expr left, cmpop* ops, expr* comparators)\n     | Call(expr func, expr* args, keyword* keywords)\n     | FormattedValue(expr value, int conversion, expr? format_spec)\n     | JoinedStr(expr* values)\n     | Constant(constant value, string? kind)\n     | Attribute(expr value, identifier attr, expr_context ctx)\n     | Subscript(expr value, expr slice, expr_context ctx)\n     | Starred(expr value, expr_context ctx)\n     | Name(identifier id, expr_context ctx)\n     | List(expr* elts, expr_context ctx)\n     | Tuple(expr* elts, expr_context ctx)\n     | Slice(expr? lower, expr? upper, expr? step)
expr_context
expr_context = Load | Store | Del
expression
expression cannot contain assignment, perhaps you meant "=="?
expression expected after dictionary key and ':'
expression must have %s context but has %s instead
expression which can't be assigned to in %s context
extend
extend($self, bb, /)\n--\n\nAppend items to the end of the array.
extend($self, iterable, /)\n--\n\nExtend list by appending elements from the iterable.
extend($self, iterable_of_ints, /)\n--\n\nAppend all the items from the iterator or sequence to the end of the bytearray.\n\n  iterable_of_ints\n    The iterable of items to append.
extendleft
extension
extension module {!r} executed from {!r}
extension module {!r} loaded from {!r}
extension_suffixes
extension_suffixes($module, /)\n--\n\nReturns the list of file suffixes used to identify extension modules.
extensions
external importer setup failed
extra_size
extsep
ezfz
ezzb
ez}z
f!f"f#f$f&f)f*f+f,f.f0f1f3f9f7f@fEfFfJfLfQfNfWfXfYf[f\f`faf
f!f"f#f$f&f)f*f+f,f.f0f2f3f7f8f9f:f;f=f?f@fBfDfEfFfGfHfIfJfMfNfPfQfXf
f!f*fEfQfNf
f#g4jfjIjgj2jhj>j]jmjvj[jQj(jZj;j?jAjjjdjPjOjTjojij`j<j^jVjUjMjNjFjUkTkVk
f$fefWfYf
f$mkf
f&f"f3f+f:f
f(f1f$f
f-n2rKt
f-string expression
f-string expression part cannot include '#'
f-string expression part cannot include a backslash
f-string: 
f-string: closing parenthesis '%c' does not match opening parenthesis '%c'
f-string: empty expression not allowed
f-string: expecting '}'
f-string: expression required before '%c'
f-string: expressions nested too deeply
f-string: invalid conversion character: expected 's', 'r', or 'a'
f-string: self documenting expressions are only supported in Python 3.8 and greater
f-string: single '}' is not allowed
f-string: too many nested parenthesis
f-string: unexpected end of string
f-string: unmatched '%c'
f-string: unterminated string
f1g1m
f30r@
f3g3
f4f1f6f5f
f4f9f.f
f9YCSJhj@@u>ijjjkj`
f::dW:Me
f:f"f$f+f0f1f3f
f;array item must be float
f;f\tf.f
f<9X<X6
f=j8j:jYjkjXj9jDjbjajKjGj5j_jHjYkwk
fBgBL
fDmQ>
fE_(N
fFNDn7G
fFUjUfUDU^UaUCUJU1UVUOUUU/UdU8U.U\U,UcU3UAUWU
fHfLf
fJNc?
fJq1
fKr:'
fK~RB
fM3j
fMVOV
fOfDfIfAf^f]fdfgfhf_fbfpf
fOrpZK
fPoPL
fQi]Sd
fS]r?O
fScS
fU_Cx
fW]IV
fWsl{
fZ3w
fZZB
f[q[s
f[tz
f[~Wn
f\ff-fvf~g
f\rg\vgmg
f\tf\rf
f\tf\vf\rf
f\tg=g4g1g5g!kdk{k
f\vf\rf
f_back
f_bavail
f_bfree
f_blocks
f_bsize
f_builtins
f_code
f_contiguous
f_f)s
f_favail
f_ffree
f_files
f_flag
f_frsize
f_fsid
f_gNgOgPgQg\gVg^gIgFg`gSgWgek
f_globals
f_k_z
f_lasti
f_lineno
f_lineno can only be set by a trace function
f_locals
f_namemax
f_trace
f_trace_lines
f_trace_opcodes
fa"N
fabs
fabs($module, x, /)\n--\n\nReturn the absolute value of the float x.
factorial
factorial($module, n, /)\n--\n\nFind n!.\n\nRaise a ValueError if x is negative or non-integral.
factorial() argument should not exceed %ld
factorial() not defined for negative values
factory
fail to reconfigure Python
failed to LC_CTYPE locale
failed to add exceptions to builtins
failed to change existing open_code hook
failed to create a module object
failed to create init interpreter ID mutex
failed to enable faulthandler
failed to get a channel ID
failed to get an interpreter ID
failed to get random numbers to initialize Python
failed to get the Python codec name of the stdio encoding
failed to get the Python codec of the filesystem encoding
failed to initialize UnraisableHookArgs type
failed to initialize a type
failed to initialize an exception type
failed to initialize deep-frozen modules
failed to initialize importlib
failed to join paths
failed to make path absolute
failed to read thread state
failed to update the Python config
false
fanout
fanout must be between 0 and 255
fast
fast mode: can't pickle cyclic objects including object type %.200s at %p
fatal_error_c_thread(): call Py_FatalError() in a new C thread.
faulthandler
faulthandler module.
faulthandler_fatal_error_thread
fayw
fb(b
fba+o)
fc)Nf
fclose
fcntl
fd is greater than maximum
fd is less than minimum
fdel
fdnd
fdopen
fege
feof
ferror
fflush
fget
fgets
field 'annotation' is required for AnnAssign
field 'arg' is required for arg
field 'args' is required for AsyncFunctionDef
field 'args' is required for FunctionDef
field 'args' is required for Lambda
field 'attr' is required for Attribute
field 'body' is required for Expression
field 'body' is required for IfExp
field 'body' is required for Lambda
field 'cls' is required for MatchClass
field 'context_expr' is required for withitem
field 'ctx' is required for Attribute
field 'ctx' is required for List
field 'ctx' is required for Name
field 'ctx' is required for Starred
field 'ctx' is required for Subscript
field 'ctx' is required for Tuple
field 'elt' is required for GeneratorExp
field 'elt' is required for ListComp
field 'elt' is required for SetComp
field 'func' is required for Call
field 'id' is required for Name
field 'iter' is required for AsyncFor
field 'iter' is required for For
field 'iter' is required for comprehension
field 'key' is required for DictComp
field 'left' is required for BinOp
field 'left' is required for Compare
field 'name' is required for AsyncFunctionDef
field 'name' is required for ClassDef
field 'name' is required for FunctionDef
field 'name' is required for alias
field 'op' is required for AugAssign
field 'op' is required for BinOp
field 'op' is required for BoolOp
field 'op' is required for UnaryOp
field 'operand' is required for UnaryOp
field 'orelse' is required for IfExp
field 'pattern' is required for match_case
field 'returns' is required for FunctionType
field 'right' is required for BinOp
field 'slice' is required for Subscript
field 'subject' is required for Match
field 'tag' is required for TypeIgnore
field 'target' is required for AnnAssign
field 'target' is required for AsyncFor
field 'target' is required for AugAssign
field 'target' is required for For
field 'target' is required for NamedExpr
field 'target' is required for comprehension
field 'test' is required for Assert
field 'test' is required for If
field 'test' is required for IfExp
field 'test' is required for While
field 'value' is required for Assign
field 'value' is required for Attribute
field 'value' is required for AugAssign
field 'value' is required for Await
field 'value' is required for Constant
field 'value' is required for DictComp
field 'value' is required for Expr
field 'value' is required for FormattedValue
field 'value' is required for MatchSingleton
field 'value' is required for MatchValue
field 'value' is required for NamedExpr
field 'value' is required for Starred
field 'value' is required for Subscript
field 'value' is required for YieldFrom
field 'value' is required for keyword
field larger than field limit (%ld)
field_size_limit
field_size_limit($module, /, new_limit=<unrepresentable>)\n--\n\nSets an upper limit on parsed fields.\n\n    csv.field_size_limit([limit])\n\nReturns old limit. If limit is not given, no new limit is set and\nthe old limit is returned
fieldnameiterator
fifth element of the tuple returned by __reduce__ must be an iterator, not %s
figi
file
file descriptor cannot be a negative integer (%i)
file error
file is not a valid file descripter
file must have 'read' and 'readline' attributes
file must have a 'write' attribute
file.fileno() is not a valid file descriptor
file.read() returned not bytes but %.100s
file_encoding
file_info
file_name
file_offset
file_size
filecmp
fileinput
filemode
filename
filename2
filenameIndex
filename_base
fileno
fileno($self, /)\n--\n\n
fileno($self, /)\n--\n\nReturn the underlying file descriptor (an integer).
fileno($self, /)\n--\n\nReturns underlying file descriptor if one exists.\n\nOSError is raised if the IO object does not use a file descriptor.
fileno() returned a non-integer
filepath
files
filesystem_encoding
filesystem_errors
fill character is bigger than the string maximum character
fillvalue
filter
filter(function or None, iterable) --> filter object\n\nReturn an iterator yielding those items of iterable for which function(item)\nis true. If function is None, return the items that are true.
filterfalse
filterfalse(function, iterable, /)\n--\n\nReturn those items of iterable for which function(item) is false.\n\nIf function is None, return the items that are false.
filters
final
finalbody
finalizer
finalizing (tstate=0x
finally
find
find the module on sys.path or 'path' based on sys.path_hooks and\n        sys.path_importer_cache.\n\n        This method is deprecated.  Use find_spec() instead.\n\n        
find_class
find_class($self, module_name, global_name, /)\n--\n\nReturn an object from a specified module.\n\nIf necessary, the module will be imported. Subclasses may override\nthis method (e.g. to restrict unpickling of arbitrary classes and\nfunctions).\n\nThis method is called whenever a class or a function object is\nneeded.  Both arguments passed are str objects.
find_distributions
find_frozen
find_frozen($module, name, /, *, withdata=False)\n--\n\nReturn info about the corresponding frozen module (if there is one) or None.\n\nThe returned info (a 2-tuple):\n\n * data         the raw marshalled bytes\n * is_package   whether or not it is a package\n * origname     the originally frozen module's name, or None if not\n                a stdlib module (this will usually be the same as\n                the module's current name)
find_loader
find_loader(fullname, path=None) -> self, str or None.\n\n        Search for a module specified by 'fullname'. 'fullname' must be the\n        fully qualified (dotted) module name. It returns the zipimporter\n        instance itself if the module was found, a string containing the\n        full path name if it's possibly a portion of a namespace package,\n        or None otherwise. The optional 'path' argument is ignored -- it's\n        there for compatibility with the importer protocol.\n\n        Deprecated since Python 3.10. Use find_spec() instead.\n        
find_module
find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
find_module(fullname, path=None) -> self or None.\n\n        Search for a module specified by 'fullname'. 'fullname' must be the\n        fully qualified (dotted) module name. It returns the zipimporter\n        instance itself if the module was found, or None if it wasn't.\n        The optional 'path' argument is ignored -- it's there for compatibility\n        with the importer protocol.\n\n        Deprecated since Python 3.10. Use find_spec() instead.\n        
find_spec
findall
findall($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\nReturn a list of all non-overlapping matches of pattern in string.
finder
findfactor
findfactor($module, fragment, reference, /)\n--\n\nReturn a factor F such that rms(add(fragment, mul(reference, -F))) is minimal.
findfit
findfit($module, fragment, reference, /)\n--\n\nTry to match reference as well as possible to a portion of fragment.
finditer
finditer($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\nReturn an iterator over all non-overlapping matches for the RE pattern in string.\n\nFor each match, the iterator returns a match object.
findmax
findmax($module, fragment, length, /)\n--\n\nSearch fragment for a slice of specified number of samples with maximum energy.
first arg must be callable
first argument must be a string, not %.80s
first argument must be a type object, not %.200s
first argument must be callable
first argument must be callable or None
first item from NEWOBJ_EX argument tuple must be a class, not %.200s
first item of the tuple returned by __getnewargs_ex__ must be a tuple, not '%.200s'
first item of the tuple returned by __reduce__ must be callable
first maketrans argument must be a string if there is a second argument
firstiter
firstline
fix_imports
fjN4IV
fjfkflf~fsfuf
flags
flel?7yKb1
float
float argument required, not %.200s
float divide by zero
float division by zero
float divmod()
float floor division by zero
float modulo
float overflow
float too large to pack with d format
float too large to pack with e format
float too large to pack with f format
float() argument must be a string or a real number, not '%.200s'
float(x=0, /)\n--\n\nConvert a string or number to a floating point number, if possible.
float_info
float_repr_style
floor
floor($module, x, /)\n--\n\nReturn the floor of x as an Integral.\n\nThis is the largest integer <= x.
floordiv
floordiv($module, a, b, /)\n--\n\nSame as a // b.
flush
flush of closed file
flush values out of range
flush($self, /)\n--\n\n
flush($self, /)\n--\n\nDoes nothing.
flush($self, /)\n--\n\nFlush write buffers, if applicable.\n\nThis is not implemented for read-only and non-blocking streams.
flush($self, length=zlib.DEF_BUF_SIZE, /)\n--\n\nReturn a bytes object containing any remaining decompressed data.\n\n  length\n    the initial size of the output buffer.
flush($self, mode=zlib.Z_FINISH, /)\n--\n\nReturn a bytes object containing any remaining compressed data.\n\n  mode\n    One of the constants Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH.\n    If mode == Z_FINISH, the compressor object can no longer be\n    used after calling the flush() method.  Otherwise, more data\n    can still be compressed.
fmg!h
fmi@\
fmod
fmod($module, x, y, /)\n--\n\nReturn fmod(x, y), according to platform C.\n\nx % y may differ.
fmpegm$C+?@G
fname
fngnhninjnknln
fnmatch
foP|
fold
fold must be either 0 or 1
follow_symlinks
followlinks
force
fork
format
format %y requires year >= 1900 on Windows
format -> strftime() style string.
format requires a mapping
format($module, value, format_spec='', /)\n--\n\nReturn value.__format__(format_spec)\n\nformat_spec defaults to the empty string.\nSee the Format Specification Mini-Language section of help('FORMATTING') for\ndetails.
format_exception
format_map
format_spec
formatted_items
formatter_field_name_split
formatter_parser
formatteriterator
found_in_pycache_prefix
fourth argument should be bytes, not %.200s
fourth element of the tuple returned by __reduce__ must be an iterator, not %s
fourth item of state should be a dict, got a %.200s
fputc
fputs
fqAm<hQn
fqfyfjfrf
frac_digits
fractions
frame
frame does not exist
fread
free
free %d-sized PyTupleObject
free PyDictObject
free PyFloatObject
free PyListObject
freeze
freeze($module, /)\n--\n\nFreeze all current tracked objects and ignore them for future collections.\n\nThis can be used before a POSIX fork() call to make the gc copy-on-write friendly.\nNote: collection before a POSIX fork() call may free pages for future allocation\nwhich can cause copy-on-write.
frexp
frexp($module, x, /)\n--\n\nReturn the mantissa and exponent of x, as pair (m, e).\n\nm is a float and e is an int, such that x = m * 2.**e.\nIf x is 0, m and e are both 0.  Else 0.5 <= abs(m) < 1.0.
frexp() result out of range
from
from %zd to %zd
from __future__ imports must occur at the beginning of the file
from-import-* object has no __dict__ and no __all__
from_bytes
from_bytes($type, /, bytes, byteorder='big', *, signed=False)\n--\n\nReturn the integer represented by the given array of bytes.\n\n  bytes\n    Holds the array of bytes to convert.  The argument must either\n    support the buffer protocol or be an iterable object producing bytes.\n    Bytes and bytearray are examples of built-in objects that support the\n    buffer protocol.\n  byteorder\n    The byte order used to represent the integer.  If byteorder is 'big',\n    the most significant byte is at the beginning of the byte array.  If\n    byteorder is 'little', the most significant byte is at the end of the\n    byte array.  To request the native byte order of the host system, use\n    `sys.byteorder' as the byte order value.  Default is to use 'big'.\n  signed\n    Indicates whether two's complement is used to represent the integer.
from_iterable
from_iterable($type, iterable, /)\n--\n\nAlternative chain() constructor taking a single iterable argument that evaluates lazily.
from_name
frombytes
frombytes($self, buffer, /)\n--\n\nAppends items from the string, interpreting it as an array of machine values, as if it had been read from a file using the fromfile() method.
fromfile
fromfile($self, f, n, /)\n--\n\nRead n objects from the file object f and append them to the end of the array.
fromhex
fromhex($type, string, /)\n--\n\nCreate a bytearray object from a string of hexadecimal numbers.\n\nSpaces between two numbers are accepted.\nExample: bytearray.fromhex('B9 01EF') -> bytearray(b'\\xb9\\x01\\xef')
fromhex($type, string, /)\n--\n\nCreate a bytes object from a string of hexadecimal numbers.\n\nSpaces between two numbers are accepted.\nExample: bytes.fromhex('B9 01EF') -> b'\\xb9\\x01\\xef'.
fromhex($type, string, /)\n--\n\nCreate a floating-point number from a hexadecimal string.\n\n>>> float.fromhex('0x1.ffffp10')\n2047.984375\n>>> float.fromhex('-0x1p-1074')\n-5e-324
fromisocalendar
fromisoformat
fromisoformat: argument must be str
fromkeys
fromkeys($type, /, iterable, value=None)\n--\n\nCreate a new ordered dictionary with keys from iterable and values set to value.
fromkeys($type, iterable, value=None, /)\n--\n\nCreate a new dictionary with keys from iterable and values set to value.
fromlist
fromlist($self, list, /)\n--\n\nAppend items to array from list.
fromordinal
fromtimestamp
fromtimestamp($type, timestamp, /)\n--\n\nCreate a date from a POSIX timestamp.\n\nThe timestamp is a number, e.g. created via time.time(), that is interpreted\nas local time.
fromunicode
fromunicode($self, ustr, /)\n--\n\nExtends this array with data from the unicode string ustr.\n\nThe array must be a unicode type array; otherwise a ValueError is raised.\nUse array.frombytes(ustr.encode(...)) to append Unicode data to an array of\nsome other type.
fromunicode() may only be called on unicode type arrays
fromutc
fromutc: argument must be a datetime
fromutc: dt.tzinfo is not self
fromutc: non-None dst() result required
fromutc: non-None utcoffset() result required
fromutc: tz.dst() gave inconsistent results; cannot convert
frozen
frozen object %R is not a code object
frozenset
frozenset() -> empty frozenset object\nfrozenset(iterable) -> frozenset object\n\nBuild an immutable unordered collection of unique elements.
fsdecode
fsencode
fset
fspath
fspath($module, /, path)\n--\n\nReturn the file system path representation of the object.\n\nIf the object is str or bytes, then allow it to pass through as-is. If the\nobject defines __fspath__(), then return the result of that method. All other\ntypes raise a TypeError.
fstat
fstat($module, /, fd)\n--\n\nPerform a stat system call on the given file descriptor.\n\nLike stat(), but for an open file descriptor.\nEquivalent to os.stat(fd).
fstatvfs
fsum
fsum($module, seq, /)\n--\n\nReturn an accurate floating point sum of values in the iterable seq.\n\nAssumes IEEE-754 floating point arithmetic.
fsync
fsync($module, /, fd)\n--\n\nForce write of fd to disk.
ftGd$T
ftell
ftplib
ftruncate
ftruncate($module, fd, length, /)\n--\n\nTruncate a file, specified by file descriptor, to a specific length.
fugu
full_path
fullmatch
fullmatch($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\nMatches against all of the string.
fullname
fullpath
func
func_type
funcname
funcobj
function
function call
function object to use in future partial calls
function(code, globals, name=None, argdefs=None, closure=None)\n--\n\nCreate a function object.\n\n  code\n    a code object\n  globals\n    the globals dictionary\n  name\n    a string that overrides the name from the code object\n  argdefs\n    a tuple that specifies the default argument values\n  closure\n    a tuple that supplies the bindings for free variables
function.__new__
functools
functools.KeyWrapper
functools._lru_cache_wrapper
functools._lru_list_elem
functools.partial
future feature %.100s is not defined
fwalk
fwfxfyf{f
fwrite
fxN\
fxf gfi_i8iNibiqi?iEiji9iBiWiYiziHiIi5ili3i=iei
fyzg5
fzf~fwf
g g!g"g#g$g%g'g)g.g0g2g3g6g7g8g9g;g<g>g?gAgDgEgGgJgKgMgRgTgUgWgXgYgZg[g]gbgcgdgfgggkglgngqgtgvg
g g"g3g>gEgGgHgLgTgUg]gfglgngtgvg{g
g!h!f!i!j!U"X"V"Y"W"
g!h8hHhFhSh9hBhTh)h
g"h}v~vD
g&g'g8
g(g kbkyk
g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)
g/e1T
g2Vno
g2h2m
g2h3h`hahNhbhDhdh
g3!?IYNY
g4T6BK0Q<5
g5RM_c
g7h7
g8*M
g86Ej_ZI(ADDX
g8h8a
g9H5_D%11F>L!9yMGE~8
g9YsO
g:3r5r4rdK:O2r4JORlBJ
g;]DY
g<>7FkU
g>lNlHr
gAhA
gAl\vncs&~
gC\\n
gDbd
gGLDP
gHrnb
gI3\v>
gKPLL<0g(<wP1g
gMgj
gPAE
gPh@h<hCh*hEh
gQGYWd]j
gQHY
gS!B
gSlSzS
gUPPPHPZPVPlPxP
gY&ObM
gY9RCU
gZP\OPW
g[TT
g[a[:Fc[q
g\oNq}q
g_Aa
g`isn"
g`s`I
gaiJ
gamma
garbage
gb18030
gb18030ext
gb2312
gbW}
gbcommon
gbk`l
gbkext
gbk{k
gc.get_objects
gc.get_referents
gc.get_referrers
gc: %s <%s %p>\n
gc: %zd uncollectable objects at shutdown
gc: %zd uncollectable objects at shutdown; use gc.set_debug(gc.DEBUG_UNCOLLECTABLE) to list them
gc: collecting generation %d...\n
gc: done, %zd unreachable, %zd uncollectable, %.4fs elapsed\n
gc: objects in each generation:%s\ngc: objects in permanent generation: %zd\n
gcd($module, *integers)\n--\n\nGreatest Common Divisor.
gd4T
ge($module, a, b, /)\n--\n\nSame as a >= b.
geSr
gen.__sizeof__() -> size of gen in memory, in bytes
generation
generation parameter cannot be negative
generation parameter must be less than the number of available generations (%i)
generator
generator already executing
generator expression
generator ignored GeneratorExit
generator raised StopIteration
generator return value
generator_stop
generators
generic_alias_iterator
genericpath
genexpr
get($self, default=<unrepresentable>, /)\n--\n\nReturn a value for the context variable for the current context.\n\nIf there is no value for the variable in the current context, the method will:\n * return the value of the default argument of the method, if provided; or\n * return the default value for the context variable, if it was created\n   with one; or\n * raise a LookupError.
get($self, key, default=None, /)\n--\n\nReturn the value for `key` if `key` has the value in the context object.\n\nIf `key` does not exist, return `default`. If `default` is not given,\nreturn None.
get($self, key, default=None, /)\n--\n\nReturn the value for key if key is in the dictionary, else default.
get_asyncgen_hooks
get_asyncgen_hooks($module, /)\n--\n\nReturn the installed asynchronous generators hooks.\n\nThis returns a namedtuple of the form (firstiter, finalizer).
get_cache_token
get_cache_token($module, /)\n--\n\nReturns the current ABC cache token.\n\nThe token is an opaque object (supporting equality testing) identifying the\ncurrent version of the ABC cache for virtual subclasses. The token changes\nwith every call to register() on any ABC.
get_clock_info
get_clock_info(name: str) -> dict\n\nGet information of the specified clock.
get_code
get_code(fullname) -> code object.\n\n        Return the code object for the specified module. Raise ZipImportError\n        if the module couldn't be imported.\n        
get_coroutine_origin_tracking_depth
get_coroutine_origin_tracking_depth($module, /)\n--\n\nCheck status of origin tracking for coroutine objects in this thread.
get_count
get_count($module, /)\n--\n\nReturn a three-tuple of the current collection counts.
get_current
get_current() -> ID\n\nReturn the ID of current interpreter.
get_current_history_length
get_data
get_data(pathname) -> string with file data.\n\n        Return the data associated with 'pathname'. Raise OSError if\n        the file wasn't found.\n        
get_debug
get_debug($module, /)\n--\n\nGet the garbage collection debugging flags.
get_dialect
get_dialect($module, /, name)\n--\n\nReturn the dialect instance associated with name.\n\n    dialect = csv.get_dialect(name)
get_exec_path
get_filename
get_filename(fullname) -> filename string.\n\n        Return the filename for the specified module or raise ZipImportError\n        if it couldn't be imported.\n        
get_freeze_count
get_freeze_count($module, /)\n--\n\nReturn the number of objects in the permanent generation.
get_frozen_object
get_frozen_object($module, name, data=None, /)\n--\n\nCreate a code object for a frozen module.
get_handle_inheritable
get_handle_inheritable($module, handle, /)\n--\n\nGet the close-on-exe flag of the specified file descriptor.
get_ident
get_ident() -> integer\n\nReturn a non-zero integer that uniquely identifies the current thread\namongst other threads that exist simultaneously.\nThis may be used to identify per-thread resources.\nEven though on some platforms threads identities may appear to be\nallocated consecutive numbers starting at 1, this behavior should not\nbe relied upon, and the number should be seen purely as a magic cookie.\nA thread's identity may be reused for another thread after it exits.
get_importer
get_inheritable
get_inheritable($module, fd, /)\n--\n\nGet the close-on-exe flag of the specified file descriptor.
get_int_max_str_digits
get_int_max_str_digits($module, /)\n--\n\nReturn the maximum string digits limit for non-binary int<->str conversions.
get_main
get_main() -> ID\n\nReturn the ID of main interpreter.
get_native_id
get_native_id() -> integer\n\nReturn a non-negative integer identifying the thread as reported\nby the OS (kernel). This may be used to uniquely identify a\nparticular thread within a system.
get_objects
get_objects($module, /, generation=None)\n--\n\nReturn a list of objects tracked by the collector (excluding the list returned).\n\n  generation\n    Generation to extract the objects from.\n\nIf generation is not None, return only the objects tracked by the collector\nthat are in that generation.
get_osfhandle
get_osfhandle($module, fd, /)\n--\n\nReturn the file handle for the file descriptor fd.\n\nRaises OSError if fd is not recognized.
get_referents
get_referents(*objs) -> list\nReturn the list of objects that are directly referred to by objs.
get_referrers
get_referrers(*objs) -> list\nReturn the list of objects that directly refer to any of objs.
get_resource_reader
get_source
get_source(fullname) -> source string.\n\n        Return the source code for the specified module. Raise ZipImportError\n        if the module couldn't be found, return None if the archive does\n        contain the module, but has no source for it.\n        
get_specialization_stats
get_specialization_stats($module, /)\n--\n\nReturn the specialization stats
get_stats
get_stats($module, /)\n--\n\nReturn a list of dictionaries containing per-generation statistics.
get_terminal_size
get_terminal_size($module, fd=<unrepresentable>, /)\n--\n\nReturn the size of the terminal window as (columns, lines).\n\nThe optional argument fd (default standard output) specifies\nwhich file descriptor should be queried.\n\nIf the file descriptor is not connected to a terminal, an OSError\nis thrown.\n\nThis function will only be defined if an implementation is\navailable for this system.\n\nshutil.get_terminal_size is the high-level function which should\nnormally be used, os.get_terminal_size is the low-level implementation.
get_threshold
get_threshold($module, /)\n--\n\nReturn the current collection thresholds.
get_traceback_limit
get_traceback_limit($module, /)\n--\n\nGet the maximum number of frames stored in the traceback of a trace.\n\nBy default, a trace of an allocated memory block only stores\nthe most recent frame: the limit is 1.
get_traced_memory
get_traced_memory($module, /)\n--\n\nGet the current size and peak size of memory blocks traced by tracemalloc.\n\nReturns a tuple: (current: int, peak: int).
get_tracemalloc_memory
get_tracemalloc_memory($module, /)\n--\n\nGet the memory usage in bytes of the tracemalloc module.\n\nThis memory is used internally to trace memory allocations.
getallocatedblocks
getallocatedblocks($module, /)\n--\n\nReturn the number of memory blocks currently allocated.
getargs: The '%c' format is deprecated. Use 'U' instead.
getatime
getattr
getattr(object, name[, default]) -> value\n\nGet a named attribute from an object; getattr(x, 'y') is equivalent to x.y.\nWhen a default argument is given, it is returned when the attribute doesn't\nexist; without it, an exception is raised in that case.
getbuffer
getbuffer($self, /)\n--\n\n
getbuffer($self, /)\n--\n\nGet a read-write view over the contents of the BytesIO object.
getc
getch
getch($module, /)\n--\n\nRead a keypress and return the resulting character as a byte string.\n\nNothing is echoed to the console. This call will block if a keypress is\nnot already available, but will not wait for Enter to be pressed. If the\npressed key was a special function key, this will return '\000' or\n'\xe0'; the next call will return the keycode. The Control-C keypress\ncannot be read with this function.
getche
getche($module, /)\n--\n\nSimilar to getch(), but the keypress will be echoed if possible.
getcodec
getcodesize
getcodesize($module, /)\n--\n\n
getctime
getcwd
getcwd($module, /)\n--\n\nReturn a unicode string representing the current working directory.
getcwdb
getcwdb($module, /)\n--\n\nReturn a bytes string representing the current working directory.
getdecoder
getdefaultencoding
getdefaultencoding($module, /)\n--\n\nReturn the current default encoding used by the Unicode implementation.
getegid
getencoder
getencoding
getencoding($module, /)\n--\n\nGet the current locale encoding.
getenv
getenvb
geteuid
getfilesystemencodeerrors
getfilesystemencodeerrors($module, /)\n--\n\nReturn the error mode used Unicode to OS filename conversion.
getfilesystemencoding
getfilesystemencoding($module, /)\n--\n\nReturn the encoding used to convert Unicode filenames to OS filenames.
getgid
getincrementaldecoder
getincrementalencoder
getitem
getitem($module, a, b, /)\n--\n\nSame as a[b].
getlogin
getlogin($module, /)\n--\n\nReturn the actual login name.
getmtime
getopt
getpass
getpid
getpid($module, /)\n--\n\nReturn the current process id.
getppid
getppid($module, /)\n--\n\nReturn the parent's process id.\n\nIf the parent process has already exited, Windows machines will still\nreturn its id; others systems will return the id of the 'init' process (1).
getprofile
getprofile($module, /)\n--\n\nReturn the profiling function set with sys.setprofile.\n\nSee the profiler chapter in the library manual.
getpwnam
getpwuid
getrandbits
getrandbits($self, k, /)\n--\n\ngetrandbits(k) -> x.  Generates an int with k random bits.
getreader
getrecursionlimit
getrecursionlimit($module, /)\n--\n\nReturn the current value of the recursion limit.\n\nThe recursion limit is the maximum depth of the Python interpreter\nstack.  This limit prevents infinite recursion from causing an overflow\nof the C stack and crashing Python.
getrefcount
getrefcount($module, object, /)\n--\n\nReturn the reference count of object.\n\nThe count returned is generally one higher than you might expect,\nbecause it includes the (temporary) reference as an argument to\ngetrefcount().
getsample
getsample($module, fragment, width, index, /)\n--\n\nReturn the value of sample index from the fragment.
getset_descriptor
getsignal
getsignal($module, signalnum, /)\n--\n\nReturn the current action for the given signal.\n\nThe return value can be:\n  SIG_IGN -- if the signal is being ignored\n  SIG_DFL -- if the default action for the signal is in effect\n  None    -- if an unknown handler is in effect\n  anything else -- the callable Python object used as a handler
getsitepackages
getsize
getsizeof
getsizeof(object [, default]) -> int\n\nReturn the size of object in bytes.
getstate
getstate($self, /)\n--\n\n
getstate($self, /)\n--\n\ngetstate() -> tuple containing the current state.
getstate() -> state
getstats
getstats($self, /)\n--\n\nlist of profiler_entry objects.\n\ngetstats() -> list of profiler_entry objects\n\nReturn all information collected by the profiler.\nEach profiler_entry is a tuple-like object with the\nfollowing attributes:\n\n    code          code object\n    callcount     how many times this was called\n    reccallcount  how many times called recursively\n    totaltime     total time in this entry\n    inlinetime    inline time in this entry (not in subcalls)\n    calls         details of the calls\n\nThe calls attribute is either None or a list of\nprofiler_subentry objects:\n\n    code          called code object\n    callcount     how many times this is called\n    reccallcount  how many times this is called recursively\n    totaltime     total time spent in this call\n    inlinetime    inline time (not in further subcalls)
getstats() takes no arguments
getswitchinterval
getswitchinterval($module, /)\n--\n\nReturn the current thread switch interval; see sys.setswitchinterval().
getter
gettext
gettrace
gettrace($module, /)\n--\n\nReturn the global debug tracing function set with sys.settrace.\n\nSee the debugger chapter in the library manual.
getuid
getuserbase
getusersitepackages
getvalue
getvalue($self, /)\n--\n\nRetrieve the entire contents of the BytesIO object.
getvalue($self, /)\n--\n\nRetrieve the entire contents of the object.
getwch
getwch($module, /)\n--\n\nWide char variant of getch(), returning a Unicode value.
getwche
getwche($module, /)\n--\n\nWide char variant of getche(), returning a Unicode value.
getweakrefcount
getweakrefcount($module, object, /)\n--\n\nReturn the number of weak references to 'object'.
getweakrefs
getweakrefs($module, object, /)\n--\n\nReturn a list of all weak reference objects pointing to 'object'.
getwindowsversion
getwindowsversion($module, /)\n--\n\nReturn info about the running version of Windows as a named tuple.\n\nThe members are named: major, minor, build, platform, service_pack,\nservice_pack_major, service_pack_minor, suite_mask, product_type and\nplatform_version. For backward compatibility, only the first 5 items\nare available by indexing. All elements are numbers, except\nservice_pack and platform_type which are strings, and platform_version\nwhich is a 3-tuple. Platform is always 2. Product_type may be 1 for a\nworkstation, 2 for a domain controller, 3 for a server.\nPlatform_version is a 3-tuple containing a version number that is\nintended for identifying the OS rather than feature detection.
getwriter
gfifhf%Hk
ggbg
gi_code
gi_frame
gi_running
gi_suspended
gi_yieldfrom
gjC_RQbN
gjgsg
gjm^c
glob
global
global_config
globals
globals and locals cannot be NULL
globals must be a dict
globals must be a real dict; try eval(expr, {}, mapping)
globals($module, /)\n--\n\nReturn the dictionary containing the current scope's global variables.\n\nNOTE: Updates to this dictionary *will* affect name lookups in the current\nglobal scope and vice-versa.
globals_
gm5{lx
gmtime
gmtime([seconds]) -> (tm_year, tm_mon, tm_mday, tm_hour, tm_min,\n                       tm_sec, tm_wday, tm_yday, tm_isdst)\n\nConvert seconds since the Epoch to a time tuple expressing UTC (a.k.a.\nGMT).  When 'seconds' is not passed in, convert the current time instead.\n\nIf the platform supports the tm_gmtoff and tm_zone, they are available as\nattributes only.
gn2t
gnoRr:u:wt
gogpg
got an invalid type in Constant: %s
gpLb
gqr<
graphlib
group
group ID of owner
group([group1, ...]) -> str or tuple.\n    Return subgroup(s) of the match by indices or names.\n    For 0 returns the entire match.
groupby
groupby(iterable, key=None)\n--\n\nmake an iterator that returns consecutive keys and groups from the iterable\n\n  iterable\n    Elements to divide into groups according to the key function.\n  key\n    A function for computing the group category for each element.\n    If the key function is not specified or is None, the element itself\n    is used for grouping.
groupdict
groupdict($self, /, default=None)\n--\n\nReturn a dictionary containing all the named subgroups of the match, keyed by the subgroup name.\n\n  default\n    Is used for groups that did not participate in the match.
groupindex
grouping
groups
groups($self, /, default=None)\n--\n\nReturn a tuple containing all the subgroups of the match, from 1.\n\n  default\n    Is used for groups that did not participate in the match.
gsgwg
gshs%
gs~X
gt($module, a, b, /)\n--\n\nSame as a > b.
guard
gv]R
gvg{g
gwg|g
gxgyg
gzcXAt
gzip
g|gjg
g|gjgrg#kfkgk
g}ow
g~vFdpO%
h h"h#h$h%h&h'h(h+h,h-h.h/h0h1h4h5h6h:h;h?hGhKhMhOhRhVhWhXhYhZh[h\h]h^h_hjhlhmhnhohphqhrhshuhxhyhzh{h|h}h~h
h"i&i
h%Y,Y-Y2Y8Y>Y
h&h(h.hMh:h%h h,k/k-k1k4kmk
h(h'h,h-h/h0h1h3h;h?hDhEhJhLhUhWhXh[hkhnhohphqhrhuhyhzh{h|h
h(i*i
h+hYhchwh
h,h1h[hrhuhD
h0DE`A
h0VI~
h1i1
h3sIM?{PRJ6eB;h
h5h+h-h/hNhDh4h
h5i5
h9i9X
h9k;k?k<k
h;array item must be integer
h>T4T
h>k:k=k
h>kLp/t
h>kSkWl"o
h>lNl
h?HRWk\kl8Xkq
h@z7
hD_Ja
hDb8p9
hE:V
hEiE
hF1G"
hFh)h@hMh2hNh
hFiFx
hGYgkfu
hGiGL
hHiHjHkHv
hIh2h3h;hKhOh
hLhQh=h
hLwF|
hM$5*NwVS
hN[Vs
hNc\rz
hObt
hP+v
hSQ\Ti
hStdError
hStdInput
hStdOutput
hSyU~
hTR"
hU.[6a7x
hUhfhAhgh@h>hJhIh)h
hUlUiU+GM\3?
hUrWrU>D0\rh=o
hViVo>
hVioh
hW@?7
hWXK
hWhZgZt
hWoWsWtWuW{W
hX1:@
hX;Jh
hYWI
h\niIi
h\uHn\
h\vi\ni
h]mS|u
h^jp
h_g\rb
h_j0^
h_j:k#l}l
haU;
had_equ
had_prefix
hamt
hamt_array_node
hamt_bitmap_node
hamt_collision_node
handle
handle cannot be retrieved
handle_list
handle_list must be a sequence or None
handler must be callable
handlers
hardware identifier
has_deadlock
has_location
hasattr
hasattr($module, obj, name, /)\n--\n\nReturn whether the object has an attribute with the given name.\n\nThis is done by calling getattr(obj, name) and catching AttributeError.
hasbytes
hash
hash in bytecode doesn't match hash of source 
hash($module, obj, /)\n--\n\nReturn the hash value for the given object.\n\nTwo objects that compare equal must also have the same hash value, but the\nreverse is not necessarily true.
hash_based
hash_bits
hash_info
hash_info\n\nA named tuple providing parameters used for computing\nhashes. The attributes are read only.
hash_randomization
hash_seed
hashlib
hasstr
hassuffix
hci<nDn\tws|
hcictMG
head
header
header crc mismatch
header_offset
header_position
header_size
heapify
heapify($module, heap, /)\n--\n\nTransform list into a heap, in-place, in O(len(heap)) time.
heapmin
heapmin($module, /)\n--\n\nMinimize the malloc() heap.\n\nForce the malloc() heap to clean itself up and return unused blocks\nto the operating system. On failure, this raises OSError.
heappop
heappop($module, heap, /)\n--\n\nPop the smallest item off the heap, maintaining the heap invariant.
heappush
heappush($module, heap, item, /)\n--\n\nPush item onto heap, maintaining the heap invariant.
heappushpop
heappushpop($module, heap, item, /)\n--\n\nPush item on the heap, then pop and return the smallest item from the heap.\n\nThe combined action runs more efficiently than heappush() followed by\na separate call to heappop().
heapq
heapreplace
heapreplace($module, heap, item, /)\n--\n\nPop and return the current smallest value, and add the new item.\n\nThis is more efficient than heappop() followed by heappush(), and can be\nmore appropriate when using a fixed-size heap.  Note that the value\nreturned may be larger than item!  That constrains reasonable uses of\nthis routine unless written as part of a conditional replacement:\n\n    if item > heap[0]:\n        item = heapreplace(heap, item)
hehNm
height of the terminal window in characters
help
here
hex($module, number, /)\n--\n\nReturn the hexadecimal representation of an integer.\n\n   >>> hex(12648430)\n   '0xc0ffee'
hex($self, /)\n--\n\nReturn a hexadecimal representation of a floating-point number.\n\n>>> (-0.1).hex()\n'-0x1.999999999999ap-4'\n>>> 3.14159.hex()\n'0x1.921f9f01b866ep+1'
hex($self, /, sep=<unrepresentable>, bytes_per_sep=1)\n--\n\nCreate a string of hexadecimal numbers from a bytearray object.\n\n  sep\n    An optional single character or byte to separate hex bytes.\n  bytes_per_sep\n    How many bytes between separators.  Positive values count from the\n    right, negative values count from the left.\n\nExample:\n>>> value = bytearray([0xb9, 0x01, 0xef])\n>>> value.hex()\n'b901ef'\n>>> value.hex(':')\n'b9:01:ef'\n>>> value.hex(':', 2)\n'b9:01ef'\n>>> value.hex(':', -2)\n'b901:ef'
hex($self, /, sep=<unrepresentable>, bytes_per_sep=1)\n--\n\nCreate a string of hexadecimal numbers from a bytes object.\n\n  sep\n    An optional single character or byte to separate hex bytes.\n  bytes_per_sep\n    How many bytes between separators.  Positive values count from the\n    right, negative values count from the left.\n\nExample:\n>>> value = b'\xb9\x01\xef'\n>>> value.hex()\n'b901ef'\n>>> value.hex(':')\n'b9:01:ef'\n>>> value.hex(':', 2)\n'b9:01ef'\n>>> value.hex(':', -2)\n'b901:ef'
hex($self, /, sep=<unrepresentable>, bytes_per_sep=1)\n--\n\nReturn the data in the buffer as a str of hexadecimal numbers.\n\n  sep\n    An optional single character or byte to separate hex bytes.\n  bytes_per_sep\n    How many bytes between separators.  Positive values count from the\n    right, negative values count from the left.\n\nExample:\n>>> value = memoryview(b'\xb9\x01\xef')\n>>> value.hex()\n'b901ef'\n>>> value.hex(':')\n'b9:01:ef'\n>>> value.hex(':', 2)\n'b9:01ef'\n>>> value.hex(':', -2)\n'b901:ef'
hexadecimal
hexadecimal string too long to convert
hexadecimal value too large to represent as a float
hexdigest
hexdigest($self, /)\n--\n\nReturn the digest value as a string of hexadecimal digits.
hexdigest($self, length, /)\n--\n\nReturn the digest value as a string of hexadecimal digits.
hexlify
hexlify($module, /, data, sep=<unrepresentable>, bytes_per_sep=1)\n--\n\nHexadecimal representation of binary data.\n\n  sep\n    An optional single character or byte to separate hex bytes.\n  bytes_per_sep\n    How many bytes between separators.  Positive values count from the\n    right, negative values count from the left.\n\nThe return value is a bytes object.  This function is also\navailable as "b2a_hex()".
hexversion
hgWhxZKT
hhVY
hhkh
history
hk;GsML
hkey
hmac
hmhnh
hn^Z
hoiSj
home
hook
hour
hour must be in 0..23
hour out of range
hours
hours, range [0, 23]
how many times called recursively
how many times this is called
how many times this is called recursively
how many times this was called
how to treat errors
how_many cannot be negative
hpep
hpgpdp!2[
hp~Qhl
hqgq
hqh~h
hq{8iqD:ETR0\
hr;q;{;\tiCi\rdi
hsidq
hthwh
html
http
huge integer: number of bits overflows a Py_ssize_t
huhth
hw4B
hwmppLu
hxh{h
hxi4iii@ioiDiviXiAitiLi;iKi7i\iOiQi2iRi/i{i<iFkEkCkBkHkAk
hyiwi\ixikiTi~ini9iti=iYi0iai^i]i
hypot
hypot(*coordinates) -> value\n\nMultidimensional Euclidean distance from the origin to a point.\n\nRoughly equivalent to:\n    sqrt(sum(x**2 for x in coordinates))\n\nFor a two dimensional point (x, y), gives the hypotenuse\nusing the Pythagorean theorem:  sqrt(x*x + y*y).\n\nFor example, the hypotenuse of a 3/4/5 right triangle is:\n\n    >>> hypot(3.0, 4.0)\n    5.0\n
h{htte<tUt6_
h|hkhrh
h|xC~l
h}h6k3k7k8k
i!i"i#i%i&i'i(i)i*i+i,i.i/i1i2i3i5i6i7i8i:i;i<i>i@iAiCiDiEiFiGiHiIiJiKiLiMiNiOiPiQiRiSiUiViXiYi[i\i_iaibidieigihiiijilimioipirisitiuivizi{i}i~i
i!j!V
i#i!i
i&J9t
i)j}r
i0jkjFjsj~j
i1i3i5i8i;iBiEiIiNiWi[icidieifihiiilipiqirizi{i
i4280
i915
i:13
i:__reduce_ex__
i:fromordinal
i:setstate
i;array item must be integer
i<}Ke
i>j>B
i?Gf
iAnT
iCO,o
iCjc<
iCr3Z
iDj>j
iE.X"
iG0c
iIRTAmBmCmEml
iIb:W9
iIkLk3l3o
iJihiki^iSiyi
iJkMkKk
iO!;ratecv(): illegal state argument
iOOO
iS4f
iSIb
iSzS
iUJ>`
iVnV
iWvm
iY6*!Ej
iZi5j
i[wm&l
i\l\f\w
i\ti\ni
i\ti\ni\fi
i]Wb
i]ici[iGkrk
i^\N5rdPQ]
i_l*mim/n
iadd
iadd($module, a, b, /)\n--\n\nSame as a += b.
iakalamau
iand
iand($module, a, b, /)\n--\n\nSame as a &= b.
ibJ\4l@z
iconcat
iconcat($module, a, b, /)\n--\n\nSame as a += b, for a and b sequences.
id($module, obj, /)\n--\n\nReturn the identity of an object.\n\nThis is guaranteed to be unique among simultaneously existing objects.\n(CPython uses the object's memory address.)
identifier field can't represent '%s' constant
idgd
idlelib
idx cannot be negative
ieni
iesx
if you give only one argument to maketrans it must be a dict
if<d
ificiyi
ifloordiv
ifloordiv($module, a, b, /)\n--\n\nSame as a //= b.
igLo
ignore
ignore_environment
ignore_errors
ii;adpcm2lin(): illegal state argument
ii;lin2adpcm(): illegal state argument
ii;ratecv(): illegal state argument
iicix
iii:fromisocalendar
iiiiO
iiiiiiiO
iiiiiiiii
iiiiiiiii;asctime(): illegal time tuple argument
iiiiiiiii;mktime(): illegal time tuple argument
iiiiiiiii;strftime(): illegal time tuple argument
iii|iiiiO$i
iiji
ill-formed sequence
illegal UTF-16 surrogate
illegal Unicode character
illegal decoder state
illegal decoder state: the first item should be a bytes object, not '%.200s'
illegal encoding
illegal environment variable name
illegal multibyte sequence
illegal newline value: %R
illegal newline value: %s
illegal state argument
illegal target for annotation
illl
ilshift
ilshift($module, a, b, /)\n--\n\nSame as a <<= b.
imag
imaginary
imaginary number required in complex literal
imaplib
imatmul
imatmul($module, a, b, /)\n--\n\nSame as a @= b.
imghdr
imod
imod($module, a, b, /)\n--\n\nSame as a %= b.
implementation
import
import 
import %U # previously loaded (%R)\n
import * only allowed at module level
import _frozen_importlib # frozen\n
import _imp # builtin\n
import of {} halted; None in sys.modules
import time: %9ld | %10ld | %*s%s\n
import time: self [us] | cumulative | imported package\n
import z'unsupported 'import' line in ._pth file
import {!r} # {!r}
import {} # loaded from Zip {}
import\t
import_
import_error
import_time
importer
importlib
importlib._bootstrap
importlib._bootstrap_external
importlib.machinery
importlib.metadata
importlib.readers
importlib.util
impossible module node
impossible<bad format char>
imul
imul($module, a, b, /)\n--\n\nSame as a *= b.
in PyEval_SetProfile
in PyEval_SetTrace
in atexit callback
in audit hook
in garbage collection
in new thread
in thread started by
in tp_clear of
in:kill
include-system-site-packages
incompatible stacks
incompatible version
incomplete format
incomplete format key
incomplete input
incomplete multibyte sequence
incomplete or truncated stream
inconsistent stream state
inconsistent use of tabs and spaces in indentation
incorrect data check
incorrect header check
incorrect length check
incrementaldecoder
incrementalencoder
indent
index
index exceeds C integer size
index out of bounds on dimension %d
index out of range
index($module, a, /)\n--\n\nSame as a.__index__()
index($self, v, start=0, stop=sys.maxsize, /)\n--\n\nReturn index of first occurrence of v in the array.\n\nRaise ValueError if the value is not present.
index($self, value, start=0, stop=sys.maxsize, /)\n--\n\nReturn first index of value.\n\nRaises ValueError if the value is not present.
index2
indexOf
indexOf($module, a, b, /)\n--\n\nReturn the first index of b in a.
indexgroup
indices
infj
info
inheritable
iniL
init function of %s returned uninitialized object
init_filename
init_frozen
init_frozen($module, name, /)\n--\n\nInitializes a frozen module.
init_fs_encoding
init_globals
init_import_site
init_importlib_external
init_interp_main
init_interpreter
init_runtime
init_set_builtins_open
init_stdio_encoding
init_sys_streams
init_threadstate
initial
initial_bytes
initial_slashes
initial_value
initial_value must be str or None, not %.200s
initial_winerror
initialization config is NULL
initialization of %s did not return PyModuleDef
initialization of %s did not return an extension module
initialization of %s failed without raising an exception
initialization of %s raised unreported exception
initialized
initializing zipimport failed
inity
inline time (not in further subcalls)
inline time in this entry (not in subcalls)
inlinetime
inner_size
inner_size must be between 0 and is %d
ino1
ino2
inode
inode($self, /)\n--\n\nReturn inode of the entry; cached per entry.
inplace
input
input line too long
input string is too long
input too long
input($module, prompt='', /)\n--\n\nRead a string from standard input.  The trailing newline is stripped.\n\nThe prompt string, if given, is printed to standard output without a\ntrailing newline before reading input.\n\nIf the user hits EOF (*nix: Ctrl-D, Windows: Ctrl-Z+Return), raise EOFError.\nOn *nix systems, readline is used if available.
input(): lost sys.stderr
input(): lost sys.stdin
input(): lost sys.stdout
input: input too long
insane float_format or double_format
insert
insert($self, i, v, /)\n--\n\nInsert a new item v into the array before position i.
insert($self, index, item, /)\n--\n\nInsert a single item into the bytearray before the given index.\n\n  index\n    The index where the value is to be inserted.\n  item\n    The item to be inserted.
insert($self, index, object, /)\n--\n\nInsert object before index.
insort_left
insort_left($module, /, a, x, lo=0, hi=None, *, key=None)\n--\n\nInsert item x in list a, and keep it sorted assuming a is sorted.\n\nIf x is already in a, insert it to the left of the leftmost x.\n\nOptional args lo (default 0) and hi (default len(a)) bound the\nslice of a to be searched.
insort_right
insort_right($module, /, a, x, lo=0, hi=None, *, key=None)\n--\n\nInsert item x in list a, and keep it sorted assuming a is sorted.\n\nIf x is already in a, insert it to the right of the rightmost x.\n\nOptional args lo (default 0) and hi (default len(a)) bound the\nslice of a to be searched.
inspect
install_signal_handlers
instance
instance exception may not have a separate value
instance must not be None
instancemethod
instancemethod(function, /)\n--\n\nBind a function to a class.
insufficient memory
int -> date corresponding to a proleptic Gregorian ordinal.
int divide by zero
int has too many bits to express in a platform size_t
int string too large to convert
int too big to convert
int too large to convert
int too large to convert to float
int too large to format
int too large to pickle
int() arg 2 must be >= 2 and <= 36
int() argument must be a string, a bytes-like object or a real number, not '%.200s'
int() base must be >= 2 and <= 36, or 0
int() can't convert non-string with explicit base
int() missing string argument
int([x]) -> integer\nint(x, base=10) -> integer\n\nConvert a number or string to an integer, or return 0 if no arguments\nare given.  If x is a number, return x.__int__().  For floating point\nnumbers, this truncates towards zero.\n\nIf x is not a number or if base is given, then x must be a string,\nbytes, or bytearray instance representing an integer literal in the\ngiven base.  The literal can be preceded by '+' or '-' and be surrounded\nby whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\nBase 0 means to interpret the base from the string as an integer literal.\n>>> int('0b100', base=0)\n4
int, int, int -> Construct a date from the ISO year, week number and weekday.\n\nThis is the inverse of the date.isocalendar() function
int_curr_symbol
int_frac_digits
int_info
int_max_str_digits
integer argument expected, got '%s'
integer division or modulo by zero
integer division result too large for a float
integer modulo by zero
integer overflow
integer time of last access
integer time of last change
integer time of last modification
interactive
interactive prompt objects for printing the license text, a list of\n    contributors and the copyright notice.
intermediate overflow during division
intermediate overflow in fsum
intern
intern($module, string, /)\n--\n\n``Intern'' the given string.\n\nThis enters the string in the (global) table of interned strings whose\npurpose is to speed up dictionary lookups. Return the string itself or\nthe previously interned string object with the same value.
internal codec error
internal error in SHA3 Final()
internal error in SHA3 Update()
internal error in regular expression engine
internal output size of hash algorithm
interp is freed
interpreter ID must be a non-negative int, got %R
interpreter ID must be an int, got %.100s
interpreter already initialized
interpreter already running
interpreter creation failed
interpreter has more than one thread
interpreter has no modules dictionary
interpreter not initialized
interpreters
interrupt_main
interrupt_main(signum=signal.SIGINT, /)\n\nSimulate the arrival of the given signal in the main thread,\nwhere the corresponding signal handler will be executed.\nIf *signum* is omitted, SIGINT is assumed.\nA subthread can use this function to interrupt the main thread.\n\nNote: the default signal handler for SIGINT raises ``KeyboardInterrupt``.
intersection
intersection_update
inv($module, a, /)\n--\n\nSame as ~a.
inv_cdf undefined for these parameters
invalid %s literal
invalid -X utf8 option value
invalid PYTHONUTF8 environment variable value
invalid SRE code
invalid \x escape at position %zd
invalid arguments
invalid binary literal
invalid bit length repeat
invalid block type
invalid buffering size
invalid character
invalid character '%c' (U+%s)
invalid cmd type (%s, expected string)
invalid code -- missing end-of-block
invalid code lengths set
invalid code page number
invalid config type: %s
invalid config value: %s
invalid continuation byte
invalid decimal literal
invalid digit '%c' in binary literal
invalid digit '%c' in octal literal
invalid distance code
invalid distance too far back
invalid distances set
invalid escape sequence '\%c'
invalid exit code: %llu
invalid fd
invalid fd type (%s, expected integer)
invalid file: %R
invalid flags 
invalid generation
invalid hexadecimal floating-point string
invalid hexadecimal literal
invalid indexing of 0-dim memory
invalid input data
invalid integer value: %R
invalid keyword argument for %.200s%s
invalid kind
invalid literal for int() with base %d: %.200R
invalid literal/length code
invalid literal/lengths set
invalid load key, '%c'.
invalid load key, '\x%02x'.
invalid locale category
invalid match pattern node in AST (kind=%d)
invalid maximum character passed to PyUnicode_New
invalid mode %r
invalid mode: %.200s
invalid mode: '%s'
invalid module index
invalid node type (%d) for annotated assignment
invalid node type (%d) for augmented assignment
invalid non-printable character U+%s
invalid octal escape sequence '\%.3s'
invalid octal literal
invalid opcode or oparg
invalid partial state
invalid pattern target
invalid signal value
invalid slot offset
invalid start byte
invalid state
invalid stored block lengths
invalid syntax
invalid syntax. Maybe you meant '==' or ':=' instead of '='?
invalid syntax. Perhaps you forgot a comma?
invalid token
invalid whence (%d, should be %d, %d or %d)
invalid whence (%i, should be 0, 1 or 2)
invalid window size
invalidate_caches
invert
invert($module, a, /)\n--\n\nSame as ~a.
in|ziL
ior($module, a, b, /)\n--\n\nSame as a |= b.
ipaddress
ipjp
ipow
ipow($module, a, b, /)\n--\n\nSame as a **= b.
iqi9i`iBi]i
iqkqjq
irshift
irshift($module, a, b, /)\n--\n\nSame as a >>= b.
is not retrievable
is0b1b2b
is_($module, a, b, /)\n--\n\nSame as a is b.
is_NullImporter
is_async
is_builtin
is_builtin($module, name, /)\n--\n\nReturns True if the module name corresponds to a built-in module.
is_dir
is_dir($self, /, *, follow_symlinks=True)\n--\n\nReturn True if the entry is a directory; cached per entry.
is_enabled
is_enabled()->bool: check if the handler is enabled
is_file
is_file($self, /, *, follow_symlinks=True)\n--\n\nReturn True if the entry is a file; cached per entry.
is_finalized
is_finalized($module, obj, /)\n--\n\nReturns true if the object has been already finalized by the GC.
is_finalizing
is_finalizing($module, /)\n--\n\nReturn True if Python is exiting.
is_frozen
is_frozen($module, name, /)\n--\n\nReturns True if the module name corresponds to a frozen module.
is_frozen_package
is_frozen_package($module, name, /)\n--\n\nReturns True if the module name is of a frozen package.
is_integer
is_integer($self, /)\n--\n\nReturn True if the float is an integer.
is_link
is_namespace
is_not
is_not($module, a, b, /)\n--\n\nSame as a is not b.
is_package
is_package(fullname) -> bool.\n\n        Return True if the module specified by fullname is a package.\n        Raise ZipImportError if the module couldn't be found.\n        
is_reload
is_running
is_running(id) -> bool\n\nReturn whether or not the identified interpreter is running.
is_shareable
is_shareable(obj) -> bool\n\nReturn True if the object's data may be shared between interpreters and\nFalse otherwise.
is_symlink
is_symlink($self, /)\n--\n\nReturn True if the entry is a symbolic link; cached per entry.
is_symlink() takes no arguments
is_tracing
is_tracing($module, /)\n--\n\nReturn True if the tracemalloc module is tracing Python memory allocations.
is_tracked
is_tracked($module, obj, /)\n--\n\nReturns true if the object is tracked by the garbage collector.\n\nSimple atomic objects will return false.
isabs
isalnum
isalnum($self, /)\n--\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and\nthere is at least one character in the string.
isalpha
isalpha($self, /)\n--\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there\nis at least one character in the string.
isascii
isascii($self, /)\n--\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F.\nEmpty string is ASCII too.
isatty
isatty($module, fd, /)\n--\n\nReturn True if the fd is connected to a terminal.\n\nReturn True if the file descriptor is an open file descriptor\nconnected to the slave end of a terminal.
isatty($self, /)\n--\n\n
isatty($self, /)\n--\n\nAlways True.
isatty($self, /)\n--\n\nAlways returns False.\n\nBytesIO objects are not connected to a TTY-like device.
isatty($self, /)\n--\n\nReturn whether this is an 'interactive' stream.\n\nReturn False if it can't be determined.
isatty($self, /)\n--\n\nTrue if the file is connected to a TTY device.
isbytecode
isbytes
isclose
isclose($module, /, a, b, *, rel_tol=1e-09, abs_tol=0.0)\n--\n\nDetermine whether two complex numbers are close in value.\n\n  rel_tol\n    maximum difference for being considered "close", relative to the\n    magnitude of the input values\n  abs_tol\n    maximum difference for being considered "close", regardless of the\n    magnitude of the input values\n\nReturn True if a is close in value to b, and False otherwise.\n\nFor the values to be considered close, the difference between them must be\nsmaller than at least one of the tolerances.\n\n-inf, inf and NaN behave similarly to the IEEE 754 Standard. That is, NaN is\nnot close to anything, even itself. inf and -inf are only close to themselves.
isclose($module, /, a, b, *, rel_tol=1e-09, abs_tol=0.0)\n--\n\nDetermine whether two floating point numbers are close in value.\n\n  rel_tol\n    maximum difference for being considered "close", relative to the\n    magnitude of the input values\n  abs_tol\n    maximum difference for being considered "close", regardless of the\n    magnitude of the input values\n\nReturn True if a is close in value to b, and False otherwise.\n\nFor the values to be considered close, the difference between them\nmust be smaller than at least one of the tolerances.\n\n-inf, inf and NaN behave similarly to the IEEE 754 Standard.  That\nis, NaN is not close to anything, even itself.  inf and -inf are\nonly close to themselves.
isdecimal
isdecimal($self, /)\n--\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and\nthere is at least one character in the string.
isdigit
isdigit($self, /)\n--\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there\nis at least one character in the string.
isdir
isdisjoint
isenabled
isenabled($module, /)\n--\n\nReturns true if automatic garbage collection is enabled.
isfile
isfiler
isfinite
isfinite($module, x, /)\n--\n\nReturn True if x is neither an infinity nor a NaN, and False otherwise.
isfinite($module, z, /)\n--\n\nReturn True if both the real and imaginary parts of z are finite, else False.
isiOOOO
isidentifier
isidentifier($self, /)\n--\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier,\nsuch as "def" or "class".
isinf
isinf($module, x, /)\n--\n\nReturn True if x is a positive or negative infinity, and False otherwise.
isinf($module, z, /)\n--\n\nChecks if the real or imaginary part of z is infinite.
isinstance
isinstance($module, obj, class_or_tuple, /)\n--\n\nReturn whether an object is an instance of a class or of a subclass thereof.\n\nA tuple, as in ``isinstance(x, (A, B, ...))``, may be given as the target to\ncheck against. This is equivalent to ``isinstance(x, A) or isinstance(x, B)\nor ...`` etc.
isinstance() arg 2 must be a type, a tuple of types, or a union
isinstance() argument 2 cannot be a parameterized generic
isisOOO
isisssO
islice
islice(iterable, stop) --> islice object\nislice(iterable, start, stop[, step]) --> islice object\n\nReturn an iterator whose next() method returns selected values from an\niterable.  If start is specified, will skip all preceding elements;\notherwise, start defaults to zero.  Step defaults to one.  If\nspecified as another value, step determines how many values are\nskipped between successive calls.  Works like a slice() on a list\nbut returns an iterator.
islink
islower
islower($self, /)\n--\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and\nthere is at least one cased character in the string.
ismount
isnan
isnan($module, x, /)\n--\n\nReturn True if x is a NaN (not a number), and False otherwise.
isnan($module, z, /)\n--\n\nChecks if the real or imaginary part of z not a number (NaN).
isnumeric
isnumeric($self, /)\n--\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at\nleast one character in the string.
iso-8859-1
iso-8859-1-
iso-latin-1
iso-latin-1-
iso2022_jp
iso2022_jp_1
iso2022_jp_2
iso2022_jp_2004
iso2022_jp_3
iso2022_jp_ext
iso2022_kr
iso8859-1
iso8859_1
iso_8859_1
isocalendar
isoformat
isolated
isoweekday
ispackage
ispkg
isprintable
isprintable($self, /)\n--\n\nReturn True if the string is printable, False otherwise.\n\nA string is printable if all of its characters are considered printable in\nrepr() or if it is empty.
isqrt
isqrt($module, n, /)\n--\n\nReturn the integer part of the square root of the input.
isqrt() argument must be nonnegative
isspace
isspace($self, /)\n--\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there\nis at least one character in the string.
issubclass
issubclass($module, cls, class_or_tuple, /)\n--\n\nReturn whether 'cls' is derived from another class or is the same class.\n\nA tuple, as in ``issubclass(x, (A, B, ...))``, may be given as the target to\ncheck against. This is equivalent to ``issubclass(x, A) or issubclass(x, B)\nor ...``.
issubclass() arg 1 must be a class
issubclass() arg 2 must be a class, a tuple of classes, or a union
issubclass() argument 2 cannot be a parameterized generic
issubset
issuperset
istext
istitle
istitle($self, /)\n--\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only\nfollow uncased characters and lowercase characters only cased ones.
isub
isub($module, a, b, /)\n--\n\nSame as a -= b.
isupper
isupper($self, /)\n--\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and\nthere is at least one cased character in the string.
isxdigit
isxfile
item
item_separator
itemcase
itemgetter
itemgetter(item, ...) --> itemgetter object\n\nReturn a callable object that fetches the given item(s) from its operand.\nAfter f = itemgetter(2), the call f(r) returns r[2].\nAfter g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
items
items must return 2-tuples
items($self, /)\n--\n\nReturn all variables and their values in the context object.\n\nThe result is returned as a list of 2-tuples (variable, value).
items() returned item which size is not 2
items() returned non-iterable
itemsize
iter
iter index too large
iter() returned non-iterator of type '%.100s'
iter(iterable) -> iterator\niter(callable, sentinel) -> iterator\n\nGet an iterator from an object.  In the first form, the argument must\nsupply its own iterator, or be a sequence.\nIn the second form, the callable is called until it returns the sentinel.
iter(v, w): v must be callable
iter_unpack
iter_unpack($module, format, buffer, /)\n--\n\nReturn an iterator yielding tuples unpacked from the given bytes.\n\nThe bytes are unpacked according to the format string, like\na repeated invocation of unpack_from().\n\nRequires that the bytes length be a multiple of the format struct size.
iter_unpack($self, buffer, /)\n--\n\nReturn an iterator yielding tuples.\n\nTuples are unpacked from the given bytes source, like a repeated\ninvocation of unpack_from().\n\nRequires that the bytes length be a multiple of the struct size.
iterable
iterable argument unpacking follows keyword argument unpacking
iterable expected, not %.200s
iterable unpacking cannot be used in comprehension
iterative unpacking requires a buffer of a multiple of %zd bytes
iterator
iterator should return strings, not %.200s (the file should be opened in text mode)
iterdecode
iterencode
itertools
itertools._grouper
itertools._tee
itertools._tee_dataobject
itertools.accumulate
itertools.chain
itertools.combinations
itertools.combinations_with_replacement
itertools.compress
itertools.count
itertools.cycle
itertools.dropwhile
itertools.filterfalse
itertools.groupby
itertools.islice
itertools.pairwise
itertools.permutations
itertools.product
itertools.repeat
itertools.starmap
itertools.takewhile
itertools.zip_longest
itlVSk
itruediv
itruediv($module, a, b, /)\n--\n\nSame as a /= b.
ivsh,Opp
ixi4i
ixor
ixor($module, a, b, /)\n--\n\nSame as a ^= b.
izjzkzlz
izjzkzlzmznzozqzrzszuz{z|z}z~z
i|ii:set_threshold
i~tK{
j j"j#j$j%j&j'j)j+j,j-j.j0j2j3j4j6j7j8j9j:j;j<j?j@jAjBjCjEjFjHjIjJjKjLjMjNjOjQjRjSjTjUjVjWjZj\j]j^j_j`jbjcjdjfjgjhjijjjkjljmjnjojpjrjsjtjujvjwjxjzj{j}j~j
j j$j(j0j2j4j7j;j>j?jEjFjIjJjNjPjQjRjUjVj[jdjgjjjqjsj~j
j&p*s
j*t*k*4+{*e*v*o*
j1;UNhPh06Sh
j4&It
j4k4l4
j5*5
j6k6
j7sRs
j9_Y
j:k:v
j;WCg
j<p5p/p7p4p1pBp8p?p:p9p@p;p3pAp
j>oI
j>p0p2p
jDj\fjrj6jxjGjbjYjfjHj8j"j
jKqF
jNn:C
jPj[j5j
jPkNk
jR1DHZ}5Q;IZ3PJZKZ=NLZMZNZw2QZOZhQPZUCRZ
jRsRnR
jS'v)Q~
jSuu
jThT
jUnq
jWs^
jX):hXfXeXlXdXnXs
jY"u
jYqYL
jZFZAw
jZ~;89hZ2
j[LNhuUw
j[\vRT
j\fk?oFr
j\tj\vj\fj\rj
j]rK{
j_kxk
j`2c
j`VNW6|HJG
jaNP
java
jb*c)cG
jck@l
jdOr
jeieZ
jfR3iQU
jfkflfmf{f
jgkPQ\i[L}
jhsAv
jiLW
jisx0208
jisx0212
jisx0213_1_bmp
jisx0213_1_emp
jisx0213_2_bmp
jisx0213_2_emp
jisx0213_bmp
jisx0213_emp
jisx0213_pair
jisxcommon
jjjjjd||tt123456t
jkiAlz
jkkkO
jm`2
jmkmw
jo^zD`
johab
join
join($self, iterable, /)\n--\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string.\nThe result is returned as a new string.\n\nExample: '.'.join(['ab', 'pq', 'rs']) -> 'ab.pq.rs'
join($self, iterable_of_bytes, /)\n--\n\nConcatenate any number of bytes objects.\n\nThe bytes whose method is called is inserted in between each pair.\n\nThe result is returned as a new bytes object.\n\nExample: b'.'.join([b'ab', b'pq', b'rs']) -> b'ab.pq.rs'.
join($self, iterable_of_bytes, /)\n--\n\nConcatenate any number of bytes/bytearray objects.\n\nThe bytearray whose method is called is inserted in between each pair.\n\nThe result is returned as a new bytearray object.
join() result is too long
join() result is too long for a Python string
joinpath
joinpath)
joinuser
jpom
json
json speedups\n
json.decoder
ju`f
jump
jyNQTn
jyj=j(jXj|j
j{\iAY
k l!l(m4m-m
k must be a non-negative integer
k must not exceed %lld
k#l'l(l&l$l
k$k(k+k,k/k5k6k;k?kFkJkMkRkVkXk]k`kgkkknkpkuk}k~k
k%k&k(k)k*k+k,k-k.k/k0k1k3k4k5k6k8k;k<k=k?k@kAkBkDkEkHkJkKkMkNkOkPkQkRkSkTkUkVkWkXkZk[k\k]k^k_k`kakhkikkklkmknkokpkqkrksktkukvkwkxkzk}k~k
k%lzmcmdmvm\rmam
k&</kJkXklkukzk
k'rL
k+IB9
k,k5kFkVk`kekgkwk
k.l/l,l/n8nTn!n2ngnJn n%n#n
k1l1
k2fi
k2l2y
k3l3
k5e>R2M3
k5l5
k5t\tw
k7l7
k7y1|Ye3v>
k8=ph:c
k8k7k
k8l8m8p
k9.P7lx
k:GetStdHandle
k;0d(E1d
k;AG-k
k<D4
k=\NoS=ZsN>ZUSe;?Z5KPK@ZkGnVAZ5EA6BZL7N?CZDZ-KEZw5FZBA;WGZ8L
k?l\l
k?o|o
k@l@E
kBl^l
kCpDpJpHpIpEpFp
kF4lX
kGTh
kIt:|C
kJbY
kJneS
kMb5L
kO7c
kR1Z2Z3ZTJ4Z+J5Z6ZO3oV7Z0;.58Z9Zn9/QhR:ZC8jOo2;Z<Z
kRX=XyX
kRiRuR'
kUHe
kVjV}I
kXq=i=
kZBI}
k[pZp"r
k\tk\nk\vk\fk\rk
k\tk\rlUpVpWpRp
k\tp\vp
k^GL
k^UNU
k_pap]p`p#r
k_rarAt8w
kb`$a$b$c$d$e$f$g$h$i$t$u$v$w$x$y$z${$|$}$p!q!r!s!t!u!v!w!x!y!6N?N
kbhit
kbhit($module, /)\n--\n\nReturn true if a keypress is waiting to be read.
kbp&r
kb|V
kclci
kcpl|n|;
kdU>
kdld
kdqu
keccakopt
keepends
key_separator
keys
keys (%d) / patterns (%d) length mismatch in mapping pattern
keys in translate table must be strings or integers
keys must be str, int, float, bool or None, not %.100s
keys($self, /)\n--\n\nReturn a list of all variables in the context object.
keys->dk_kind != DICT_KEYS_SPLIT
keys->dk_kind == DICT_KEYS_SPLIT
keys->dk_refcnt == 1 || keys == &empty_keys_struct
keys->dk_usable + keys->dk_nentries <= usable
keyword
keyword 
keyword argument repeated: %U
keyword list must be a dictionary
keyword(identifier? arg, expr value)
keyword-only
keywords
keywords dict changed size during iteration
keywords must be strings
kgUq
kgb<P
kgngNGE
kgvB=W
khheC\
kiO&:OpenFileMapping
kik:OpenProcess
kilid`
kill
kill($module, pid, signal, /)\n--\n\nKill a process with a signal.
kind
kind == PyUnicode_1BYTE_KIND
kind == PyUnicode_1BYTE_KIND || kind == PyUnicode_2BYTE_KIND || kind == PyUnicode_4BYTE_KIND
kkkk
klE^
klass
klnFk
known_paths
kr&s
ksx1001
kvlv
kwIu
kw_defaults
kwarg
kwargs
kwd_attrs
kwd_attrs (%d) / kwd_patterns (%d) length mismatch in class pattern
kwd_patterns
kwds
kwnCn
kwonlyargs
ky#n
l l#l%l+l,l-l1l3l6l7l9l:l;l<l>l?lClDlElHlKlLlMlNlOlQlRlSlVlXlYlZlblclelflglklllmlnlolqlslulwlxlzl{l|l
l!l)l$l*l2l5eUekeMrRrVr0rb
l"Y&g
l#n\tpEs
l$l#l^lUlbljl
l&l'l(l,l.l3l5l6l:l;l?lJlKlMlOlRlTlYl[l\lklmloltlvlxlyl{l
l)m[t
l/n8
l2mJn
l3lYl\l
l4lkp*r6r;rGrYr[r
l5l6l:l
l6nAo
l6qnk
l8Z8e9d4k
l8lAl@l>l
l8nI
l9m'm8m)m.m5m
l9m'm\fmCmHm
l9m9j
l9mrn
l;array item must be integer
l;ue
l>HE
l>m,r6t4xw
l>m6t4xFZu
l?m?H
l?r1N<N
l@]Qnd]
lAo&o~o
lBZB
lCNvY
lDyJ9E
lEsIy
lFOe
lFlRl\lOlJlTlKlLlqp^r
lGFP^
lGS1
lGmGT
lHmH
lJZl
lJhK
lK(IO
lK@K
lL+Lr7
lL+`,`VA$<-`.`M
lN'jgPyJVH7OI3RNd=
lQ^dCe
lSuT{
lUtw
lUxUsZ
lWvWtW
lZkZpZ=
l[iV(N
l[rmb
l\fZ\fd
l\fZ\ne
l\nZ\nd
l\tZ\nd
l\tZ\td
l\tl\nl\vl\fl
l\tl\rl
l\vZ\vd
l\vZ\vn
l\vm2m*mAm%m\fm1m
l]hZ
l]lWlYl_l`lPlUlal[lMlNlpp_r]r~v
l^s2i8'Bi
lambda
lambda 
last
last_exc
last_node
last_traceback
last_type
last_value
lastgroup
lasti is not an int
lastindex
latin-1
latin-1-
latin1
latin_1
latin_1_decode
latin_1_decode($module, data, errors=None, /)\n--\n\n
latin_1_encode
latin_1_encode($module, str, errors=None, /)\n--\n\n
lbl?
lchown
lcm($module, *integers)\n--\n\nLeast Common Multiple.
ld\EL
ldexp
ldexp($module, x, i, /)\n--\n\nReturn x * (2**i).\n\nThis is essentially the inverse of frexp().
le($module, a, b, /)\n--\n\nSame as a <= b.
leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers
leaf_size
left
legacy UCS2
legacy UCS4
legacy ascii
legacy latin1
legacy_windows_fs_encoding
legacy_windows_stdio
lekeoe_
len($module, obj, /)\n--\n\nReturn the number of items in a container.
len() of unsized object
length
length argument must be non-negative
length is too large
length must be greater than zero
length of kwonlyargs is not the same as kw_defaults on arguments
length of the NEWOBJ_EX argument tuple must be exactly 3, not %zd
length should not be negative
length_hint
length_hint($module, obj, default=0, /)\n--\n\nReturn an estimate of the number of items in obj.\n\nThis is useful for presizing containers when building from an iterable.\n\nIf the object supports len(), the result will be exact.\nOtherwise, it may over- or under-estimate by an arbitrary amount.\nThe result will be an integer >= 0.
level
level must be >= 0
lexists
lfc *
lfjfm
lflslel{l
lgamma
lgamma($module, x, /)\n--\n\nNatural logarithm of absolute value of Gamma function at x.
lgkg:I
lgnn
lh,L
lhgd
lhliltlvl
lib2to3
libdir
libdirs
libedit
library
library version mismatch
license
limit must be an integer
lin2adpcm
lin2adpcm($module, fragment, width, state, /)\n--\n\nConvert samples to 4 bit Intel/DVI ADPCM encoding.
lin2alaw
lin2alaw($module, fragment, width, /)\n--\n\nConvert samples in the audio fragment to a-LAW encoding.
lin2lin
lin2lin($module, fragment, width, newwidth, /)\n--\n\nConvert samples between 1-, 2-, 3- and 4-byte formats.
lin2ulaw
lin2ulaw($module, fragment, width, /)\n--\n\nConvert samples in the audio fragment to u-LAW encoding.
line
line %d comes after the current code block
line %d comes before the current code block
line %d, column %d-%d is not a valid range
line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used
line0withend
line0withoutend
line_buffering
line_iterator
line_num
linebuffer
linecache
lineno
lineno must be an integer
lineno out of range
lines
linesep
lineterminator
lineterminator must be set
link
link($module, /, src, dst, *, src_dir_fd=None, dst_dir_fd=None,\n     follow_symlinks=True)\n--\n\nCreate a hard link to a file.\n\nIf either src_dir_fd or dst_dir_fd is not None, it should be a file\n  descriptor open to a directory, and the respective path string (src or dst)\n  should be relative; the path will then be relative to that directory.\nIf follow_symlinks is False, and the last element of src is a symbolic\n  link, link will create a link to the symbolic link itself instead of the\n  file the link points to.\nsrc_dir_fd, dst_dir_fd, and follow_symlinks may not be implemented on your\n  platform.  If they are unavailable, using them will raise a\n  NotImplementedError.
lirsT
list
list assignment index out of range
list changed size during iteration
list comprehension
list index out of range
list indices must be integers or slices, not %.200s
list modified during sort
list of weak references to the object (if defined)
list(iterable=(), /)\n--\n\nBuilt-in mutable sequence.\n\nIf no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.
list.remove(x): x not in list
list_all
list_all() -> [ID]\n\nReturn a list containing the ID of every existing interpreter.
list_dialects
list_dialects($module, /)\n--\n\nReturn a list of all known dialect names.\n\n    names = csv.list_dialects()
list_iterator
list_reverseiterator
listcomp
listdir
listdir($module, /, path=None)\n--\n\nReturn a list containing the names of the files in the directory.\n\npath can be specified as either str, bytes, or a path-like object.  If path is bytes,\n  the filenames returned will also be bytes; in all other circumstances\n  the filenames returned will be str.\nIf path is None, uses the path='.'.\nOn some platforms, path may also be specified as an open file descriptor;\\n  the file descriptor must refer to a directory.\n  If this functionality is unavailable, using it raises NotImplementedError.\n\nThe list is in arbitrary order.  It does not include the special\nentries '.' and '..' even if they are present in the directory.
literal
little
ljX>jjS
ljlzl
ljmjnjojG=a
ljust
ljust($self, width, fillchar=' ', /)\n--\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).
ljust($self, width, fillchar=b' ', /)\n--\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character.
lknk
lm$CZ
lo must be non-negative
load
load($module, /, file, *, fix_imports=True, encoding='ASCII',\n     errors='strict', buffers=())\n--\n\nRead and return an object from the pickle data stored in a file.\n\nThis is equivalent to ``Unpickler(file).load()``, but may be more\nefficient.\n\nThe protocol version of the pickle is detected automatically, so no\nprotocol argument is needed.  Bytes past the pickled object's\nrepresentation are ignored.\n\nThe argument *file* must have two methods, a read() method that takes\nan integer argument, and a readline() method that requires no\narguments.  Both methods should return bytes.  Thus *file* can be a\nbinary file object opened for reading, an io.BytesIO object, or any\nother custom object that meets this interface.\n\nOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\nwhich are used to control compatibility support for pickle stream\ngenerated by Python 2.  If *fix_imports* is True, pickle will try to\nmap the old Python 2 names to the new names used in Python 3.  The\n*encoding* and *errors* tell pickle how to decode 8-bit string\ninstances pickled by Python 2; these default to 'ASCII' and 'strict',\nrespectively.  The *encoding* can be 'bytes' to read these 8-bit\nstring instances as bytes objects.
load($module, file, /)\n--\n\nRead one value from the open file and return it.\n\n  file\n    Must be readable binary file.\n\nIf no valid value is read (e.g. because the data has a different Python\nversion's incompatible marshal format), raise EOFError, ValueError or\nTypeError.\n\nNote: If an object containing an unsupported type was marshalled with\ndump(), load() will substitute None for the unmarshallable type.
load($self, /)\n--\n\nLoad a pickle.\n\nRead a pickled object representation from the open file object given\nin the constructor, and return the reconstituted object hierarchy\nspecified therein.
load_module
load_module(fullname) -> module.\n\n        Load the module specified by 'fullname'. 'fullname' must be the\n        fully qualified (dotted) module name. It returns the imported\n        module, or raises ZipImportError if it could not be imported.\n\n        Deprecated since Python 3.10. Use exec_module() instead.\n        
loader
loader for 
loader must define exec_module()
loader={!r}
loader_class
loader_details
loader_module
loader_state
loaders
loaders that define exec_module() must also define create_module()
loads
loads($module, bytes, /)\n--\n\nConvert the bytes-like object to a value.\n\nIf no valid value is found, raise EOFError, ValueError or TypeError.  Extra\nbytes in the input are ignored.
loads($module, data, /, *, fix_imports=True, encoding='ASCII',\n      errors='strict', buffers=())\n--\n\nRead and return an object from the given pickle data.\n\nThe protocol version of the pickle is detected automatically, so no\nprotocol argument is needed.  Bytes past the pickled object's\nrepresentation are ignored.\n\nOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\nwhich are used to control compatibility support for pickle stream\ngenerated by Python 2.  If *fix_imports* is True, pickle will try to\nmap the old Python 2 names to the new names used in Python 3.  The\n*encoding* and *errors* tell pickle how to decode 8-bit string\ninstances pickled by Python 2; these default to 'ASCII' and 'strict',\nrespectively.  The *encoding* can be 'bytes' to read these 8-bit\nstring instances as bytes objects.
locale
locale query failed
locale.Error
localeconv
localeconv($module, /)\n--\n\nReturns numeric and monetary locale-specific parameters.
locals
locals must be a mapping
locals must be a mapping or None, not %.100s
locals($module, /)\n--\n\nReturn a dictionary containing the current scope's local variables.\n\nNOTE: Whether or not updates to this dictionary will affect name lookups in\nthe local scope and vice-versa is *implementation dependent* and not\ncovered by any backwards compatibility guarantees.
localtime
localtime([seconds]) -> (tm_year,tm_mon,tm_mday,tm_hour,tm_min,\n                          tm_sec,tm_wday,tm_yday,tm_isdst)\n\nConvert seconds since the Epoch to a time tuple expressing local time.\nWhen 'seconds' is not passed in, convert the current time instead.
location
lock
lock_held
lock_held($module, /)\n--\n\nReturn True if the import lock is currently held, else False.\n\nOn platforms without threads, return False.
locked
locked() -> bool\n(locked_lock() is an obsolete synonym)\n\nReturn whether the lock is in the locked state.
locked_lock
locking
locking($module, fd, mode, nbytes, /)\n--\n\nLock part of a file based on file descriptor fd from the C runtime.\n\nRaises OSError on failure. The locked region of the file extends from\nthe current file position for nbytes bytes, and may continue beyond\nthe end of the file. mode must be one of the LK_* constants listed\nbelow. Multiple regions in a file may be locked at the same time, but\nmay not overlap. Adjacent regions are not merged; they must be unlocked\nindividually.
log($module, z, base=<unrepresentable>, /)\n--\n\nlog(z[, base]) -> the logarithm of z to the given base.\n\nIf the base is not specified, returns the natural logarithm (base e) of z.
log(x, [base=math.e])\nReturn the logarithm of x to the given base.\n\nIf the base not specified, returns the natural logarithm (base e) of x.
log10
log10($module, x, /)\n--\n\nReturn the base 10 logarithm of x.
log10($module, z, /)\n--\n\nReturn the base-10 logarithm of z.
log1p
log1p($module, x, /)\n--\n\nReturn the natural logarithm of 1+x (base e).\n\nThe result is computed in a way which is accurate for x near zero.
log2
log2($module, x, /)\n--\n\nReturn the base 2 logarithm of x.
logging
loko
longrange_iterator
lookup
lookup($module, encoding, /)\n--\n\nLooks up a codec tuple in the Python codec registry and returns a CodecInfo object.
lookup_error
lookup_error($module, name, /)\n--\n\nlookup_error(errors) -> handler\n\nReturn the error handler for the specified error handling name or raise a\nLookupError, if no handler exists under this name.
lost builtins module
lost sys.breakpointhook
lost sys.displayhook
lost sys.flags
lost sys.stderr\n
lost sys.stdout
lower
lower($self, /)\n--\n\nReturn a copy of the string converted to lowercase.
lower_suffix_contents
lp#Gm
lpAttributeList
lqlolil
lrl~ltl
lseek
lseek($module, fd, position, whence, /)\n--\n\nSet the position of a file descriptor.  Return the new position.\n\n  fd\n    An open file descriptor, as returned by os.open().\n  position\n    Position, interpreted relative to 'whence'.\n  whence\n    The relative position to seek from. Valid values are:\n    - SEEK_SET: seek from the start of the file.\n    - SEEK_CUR: seek from the current file position.\n    - SEEK_END: seek from the end of the file.\n\nThe return value is the number of bytes relative to the beginning of the file.
lshift
lshift($module, a, b, /)\n--\n\nSame as a << b.
lstat
lstat($module, /, path, *, dir_fd=None)\n--\n\nPerform a stat system call on the given path, without following symbolic links.\n\nLike stat(), but do not follow symbolic links.\nEquivalent to stat(path, follow_symlinks=False).
lstrip
lstrip($self, bytes=None, /)\n--\n\nStrip leading bytes contained in the argument.\n\nIf the argument is omitted or None, strip leading  ASCII whitespace.
lstrip($self, bytes=None, /)\n--\n\nStrip leading bytes contained in the argument.\n\nIf the argument is omitted or None, strip leading ASCII whitespace.
lstrip($self, chars=None, /)\n--\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.
lt($module, a, b, /)\n--\n\nSame as a < b.
lt07tt
ltlvl
ltpzpcr
luiu
lv\Zdz
lvp|p}pxpbrar`r
lwmwnwc
lx f
lxlglkl
lzma
l}bJ
l~lhlsl
m Z m!Z!m"Z"m#Z#m$Z$m%Z%
m m!m"m#m$m&m(m)m,m-m/m0m4m6m7m8m:m?m@mBmDmImLmPmUmVmWmXm[m]m_mambmdmemgmhmkmlmmmpmqmrmsmumvmymzm{m}m~m
m m,m
m"m\tm
m&m'm(mgl.m/m1m9m<m?mWm^m_mamemgmompm|m
m)n)o)p)q)r)s)t)u)z):*I*!*,*<*K*Y*_*
m+mMm.m5m
m+nnnNnkn
m-nnn.n
m.m1m9m?mXmemE
m.t.zB}
m/mhm
m0n0
m1Cqt
m3Wm\m"
m5m3m
m6<m>m
m6s7s1uPy
m8N>J
m9n\n'n<n
m<m?m
m>6Pr
m>n?tB
m?v1^Ku
m@n@o@F
mB&TTM1Q[3}GR
mCRI\)Y
mCt!Z
mC}8
mDZDmEZE
mDnDU
mFmlp
mFnGn
mH/fmX
mI*9l
mL5m]
mM%J
mM<03e
mNkM
mO)>$MAA
mOW"k
mOmRmTm3m
mQ.bx
mS.Xk@c
mTDb
mTh8|Mv
mU]g
mXDcqp
mXmbmmmom
mY`6
mZITUOcE
m[nmo
m\fmcm
m\m`m|mcm
m\m|n
m\nm$m&m'mgl/m<m[m^m`mpm
m\tZ\tm\nZ\nm\vZ\vm\fZ\fm\rZ\rm
m\tm\nm\rm
m\tnXn<q&qgq
m]ho4
m^mgm`m
machine
magic
mailbox
mailcap
main
main interpreter already initialized
main_globals
main_name
major
make_encoder
make_encoder() argument 1 must be dict or None, not %.200s
make_encoding_map
make_identity_dict
make_identity_dict.<locals>.<dictcomp>
make_scanner
makedirs
makedirs(name [, mode=0o777][, exist_ok=False])\n\n    Super-mkdir; create a leaf directory and all intermediate ones.  Works like\n    mkdir, except that any intermediate path segment (not just the rightmost)\n    will be created if it does not exist. If the target directory already\n    exists, raise an OSError if exist_ok is False. Otherwise no exception is\n    raised.  This is recursive.\n\n    
makepath
maketrans
maketrans arguments must have same length
maketrans(frm, to, /)\n--\n\nReturn a translation table useable for the bytes or bytearray translate method.\n\nThe returned table will be one where each byte in frm is mapped to the byte at\nthe same position in to.\n\nThe bytes objects frm and to must be of the same length.
maketrans(x, y=<unrepresentable>, z=<unrepresentable>, /)\n--\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters to Unicode ordinals, strings or None.\nCharacter keys will be then converted to ordinals.\nIf there are two arguments, they must be strings of equal length, and\nin the resulting dictionary, each character in x will be mapped to the\ncharacter at the same position in y. If there is a third argument, it\nmust be a string, whose characters will be mapped to None in the result.
malformed \N character escape
malformed control flow graph.
malloc
malloc_debug
malloc_stats
managedbuffer
mant_dig
many
map data must be a Capsule.
map() must have at least two arguments.
map(func, *iterables) --> map object\n\nMake an iterator that computes the function using arguments from\neach of the iterables.  Stops when the shortest iterable is exhausted.
mapping
mapping pattern checks duplicate key (%R)
mapping pattern keys may only match literals and attribute lookups
mappingproxy
mappingproxy(%R)
mappingproxy() argument must be a mapping, not %s
markers
marshal
marshal data too short
marshal.dumps
marshal.load
marshal.loads
match
match($self, /)\n--\n\n
match($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\nMatches zero or more characters at the beginning of the string.
match() takes no arguments
match_case
match_case field "body" changed size during iteration
match_case field "body" must be a list, not a %.200s
match_case(pattern pattern, expr? guard, stmt* body)
math
math domain error
math range error
math.fsum partials
math.log requires 1 to 2 arguments
matmul
matmul($module, a, b, /)\n--\n\nSame as a @ b.
max($module, fragment, width, /)\n--\n\nReturn the maximum of the absolute value of all samples in a fragment.
max(iterable, *[, default=obj, key=func]) -> value\nmax(arg1, arg2, *args, *[, key=func]) -> value\n\nWith a single iterable argument, return its biggest item. The\ndefault keyword-only argument specifies an object to return if\nthe provided iterable is empty.\nWith two or more arguments, return the largest argument.
max_10_exp
max_comment_start
max_exp
max_length
max_length must be non-negative
maxchar < 128
maxchar <= 0x10ffff
maxchar <= 0xFFFF
maxchar <= 255
maxchar >= 0x100
maxchar >= 0x10000
maxchar >= 128
maxdigits
maxdigits must be 0 or larger than %d
maximum key length is %d bytes
maximum person length is %d bytes
maximum recursion depth exceeded during ast construction
maximum recursion depth exceeded during compilation
maximum recursion depth exceeded while normalizing an exception
maximum recursion depth exceeded%s
maximum recursion limit exceeded
maximum salt length is %d bytes
maximum size of a deque or None if unbounded
maximum string conversion digits limitation
maxlen
maxlen must be non-negative
maxpp
maxpp($module, fragment, width, /)\n--\n\nReturn the maximum peak-peak value in the sound fragment.
maxsize
maxsize should be integer or None
maxsplit
maxunicode
may not be closed if not empty (try force=True)
mbcs
mbcs_decode
mbcs_decode($module, data, errors=None, final=False, /)\n--\n\n
mbcs_encode
mbcs_encode($module, str, errors=None, /)\n--\n\n
mbeb
mbstowcs
mc&;-Di
mcls
md5($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new MD5 hash object; optionally initialized with a string.
mdldkd
mdmZmymYm
memLevel
member_descriptor
memchr
memcmp
memcpy
memmove
memo
memo id too large for LONG_BINGET
memo id too large for LONG_BINPUT
memo key must be integers
memo key must be positive integers.
memory allocation failed
memory mapped length must be positive
memory mapped offset must be positive
memory was exhausted while profiling
memory_iterator
memoryview
memoryview assignment: lvalue and rvalue have different structures
memoryview has %zd exported buffer%s
memoryview slice assignments are currently restricted to ndim = 1
memoryview(object)\n--\n\nCreate a new memoryview object which references the given object.
memoryview.cast(): elements of shape must be integers
memoryview.cast(): elements of shape must be integers > 0
memoryview.cast(): product(shape) > SSIZE_MAX
memoryview: a bytes-like object is required, not '%.200s'
memoryview: cannot cast between two non-byte formats
memoryview: cannot cast to unsigned bytes if the format flag is present
memoryview: cannot cast view with zeros in shape or strides
memoryview: cast must be 1D -> ND or ND -> 1D
memoryview: casts are restricted to C-contiguous views
memoryview: destination format must be a native single character format prefixed with an optional '@'
memoryview: format %s not supported
memoryview: hashing is restricted to formats 'B', 'b' or 'c'
memoryview: internal error
memoryview: internal error in richcompare
memoryview: invalid slice key
memoryview: invalid type for format '%s'
memoryview: invalid value for format '%s'
memoryview: length is not a multiple of itemsize
memoryview: number of dimensions must not exceed 64
memoryview: product(shape) * itemsize != buffer size
memoryview: underlying buffer is not C-contiguous
memoryview: underlying buffer is not Fortran contiguous
memoryview: underlying buffer is not contiguous
memoryview: underlying buffer is not writable
memoryview: underlying buffer requires suboffsets
memoryview: unsupported format %s
memset
message
meta_path
metaclass
metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases
method
method cannot be both class and static
method name must be a string
method(function, instance, /)\n--\n\nCreate a bound instance method object.
method-wrapper
method_descriptor
methodcaller
methodcaller needs at least one argument, the method name
methodcaller(name, ...) --> methodcaller object\n\nReturn a callable object that calls the given method on its operand.\nAfter f = methodcaller('name'), the call f(r) returns r.name().\nAfter g = methodcaller('name', 'date', foo=1), the call g(r) returns\nr.name('date', foo=1).
methods
mfmxmwmYm
mhRP
mi*WniVBmHd:oipiqiaVrisiuitiviwiaGxiXTyiN=b
micro
microsecond
microsecond must be in 0..999999
microseconds
milliseconds
mimetypes
min(iterable, *[, default=obj, key=func]) -> value\nmin(arg1, arg2, *args, *[, key=func]) -> value\n\nWith a single iterable argument, return its smallest item. The\ndefault keyword-only argument specifies an object to return if\nthe provided iterable is empty.\nWith two or more arguments, return the smallest argument.
min(n - k, k) must not exceed %lld
min_10_exp
min_exp
minimum positive value for int_max_str_digits
minmax
minmax($module, fragment, width, /)\n--\n\nReturn the minimum and maximum values of all samples in the sound fragment.
minor
minute
minute must be in 0..59
minute out of range
minutes
minutes, range [0, 59]
missing ')' in getargs format
missing 'getdata' func
missing config key: %s
missing format argument
missing interp
missing loader
missing new_object func
mkX0u
mkdir
mkdir($module, /, path, mode=511, *, dir_fd=None)\n--\n\nCreate a directory.\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.\n\nThe mode argument is ignored on Windows. Where it is used, the current umask\nvalue is first masked out.
mkfifo
mknod
mktime
mktime argument out of range
mktime(tuple) -> floating point number\n\nConvert a time tuple in local time to seconds since the Epoch.\nNote that mktime(gmtime(0)) will not generally return zero for most\ntime zones; instead the returned value will either be equal to that\nof the timezone or altzone attributes on the time module.
ml)S
mlkl
mm8xzw
mmR=F
mmap
mmap assignment must be length-1 bytes()
mmap can't modify a readonly memory map.
mmap can't resize a readonly or copy-on-write memory map.
mmap can't resize with extant buffers exported.
mmap closed or invalid
mmap doesn't support item deletion
mmap index out of range
mmap indices must be integer
mmap indices must be integers
mmap invalid access parameter.
mmap item value must be an int
mmap item value must be in range(0, 256)
mmap object doesn't support item deletion
mmap object doesn't support slice deletion
mmap offset is greater than file size
mmap slice assignment is wrong size
mmap.__new__
mmap.mmap
mnkn]
mnmZmtmim
mnnnon
mo-AnooopoJ
mod = Module(stmt* body, type_ignore* type_ignores)\n    | Interactive(stmt* body)\n    | Expression(expr body)\n    | FunctionType(expr* argtypes, expr returns)
mod($module, a, b, /)\n--\n\nSame as a % b.
mod_globals
mod_name
mod_spec
mode
mode out of range
modf
modf($module, x, /)\n--\n\nReturn the fractional and integer parts of x.\n\nBoth results carry the sign of x and are floats.
modpath
module
module 
module %p already added
module %s has multiple create slots
module %s initialized with unknown slot %i
module %s is not a module object, but requests module state
module %s specifies execution slots, but did not create a ModuleType instance
module %s uses unknown slot ID %i
module %s: PyModule_Create is incompatible with m_slots
module %s: m_size may not be negative for multi-phase initialization
module '%U' has no attribute '%U'
module '%s' has no __dict__
module __name__ must be a string, not %.100s
module definition is NULL
module filename missing
module functions cannot set METH_CLASS or METH_STATIC
module has no attribute '%U'
module kind %d should not be possible
module load failed: 
module name
module name must be a string
module name must be str, not {}
module object for 
module path
module {!r} not in sys.modules
module(name, doc=None)\n--\n\nCreate a module object.\n\nThe name must be a string; the optional doc argument can have any type.
module_for_loader
module_for_loader.<locals>.module_for_loader_wrapper
module_for_loader_wrapper
module_from_spec
module_globals
module_globals must be a dict, not '%.200s'
module_info
module_repr
module_search_paths
module_search_paths_set
module_search_paths_setN
module_type
moduledef
modulefinder
modules
modulus
mon_decimal_point
mon_grouping
mon_thousands_sep
monotonic
monotonic() -> float\n\nMonotonic clock, cannot go backward.
monotonic_ns
monotonic_ns() -> int\n\nMonotonic clock, cannot go backward, as nanoseconds.
month
month must be in 1..12
month of year, range [1, 12]
month out of range
more argument specifiers than keyword list entries (remaining format:'%s')
more positional defaults than args on arguments
move
move_to_end
move_to_end($self, /, key, last=True)\n--\n\nMove an existing element to the end (or beginning if last is false).\n\nRaise KeyError if the element does not exist.
mp->ma_used <= 30
mp->ma_values->values[index] != ((void *)0)
mpm|m_m
mppplpl
mqm(
mqnqoqqqpqUEd
mro($self, /)\n--\n\nReturn a type's method resolution order.
mro() returned a non-class ('%.500s')
mro() returned base with unsuitable layout ('%.500s')
msilib
msis
msvcrt
msvcrt.get_osfhandle
msvcrt.locking
msvcrt.open_osfhandle
mtime
mul($module, a, b, /)\n--\n\nSame as a * b.
mul($module, fragment, width, factor, /)\n--\n\nReturn a fragment that has all samples in the original fragment multiplied by the floating-point value factor.
multi-dimensional slicing is not implemented
multi-dimensional sub-views are not implemented
multibytecodec.__map_*
multiple assignments to name %R in pattern
multiple bases have instance lay-out conflict
multiple exception types must be parenthesized
multiple starred expressions in assignment
multiple starred expressions in sequence pattern
multiple starred names in sequence pattern
multiple statements found while compiling a single statement
multiplier used for the imaginary part of a complex number
multiprocessing
munu
must assign iterable to extended slice
must be %.50s, not %.50s
must be %d-item sequence, not %.50s
must be real number, not %.50s
must be sequence of length %d, not %zd
must be str or None, not %.100s
must be str, not %.100s
must have exactly one of create/read/write/append mode
mvnvovpvqvrvsvtv(>
mwnw
mxnx
mycmp
myrcw
mzn}o
m{m}mum
n must be >= 0
n must be a non-negative integer
n"n&n'n(n*n,n.n0n1n3n5n
n"n'n
n"n'n2n6n9n;n<nDnEnHnInKnOnQnRnSnTnWn\n]n^nbncnhnsn{n}n
n$o4oF=A?
n%p%o%P%^%j%a%
n'Es
n'pSSDU
n)o>o o,o
n+ocp
n-o@o0o<o5o
n.e%r
n.n^nhn\nan1n(n`nqnkn9n"n0nSnen'nxndnwnUnynRnfn5n6nZn q
n.o\toNo
n/o6oKoto*o\to)o
n0r?sWt
n1o1p1
n2O[
n3#P$@BRV5:J
n3nKn@nQn;n
n4e3DS@S
n5e@eAf
n6d\v|
n6~UNt^
n7-M
n9<QHLFEg
n9o9p9k
n:resize
n;]M"GIE
n<@=Z\nnGX$mBx;q
n<n=nEnbn+n?nAn]nsn
n=\sS
n>o>Z
n>sA
n@SPD2e4k
nAeUr e"
nAoAV
nBoB
nCn:nNn$n
nCoCt
nF1C9
nGqTqRqcq`qAq]qbqrqxqjqaqBqXqCqKqpq_qPqSq
nK-;d
nL+\e
nLuxv
nM&m
nNncnDnrnin_n
nNqYqiqdqIqgq\qlqfqLqeq^qFqhqVq:rRr7sEs?s>sotZtUt_t^tAt?tYt[t\tvuxu
nO:insert
nP]EQ
nQ?hBhy
nQW_
nSXJ20_
nSnTn2n%nDn
nWjZ
nWqQ
n[nXn$nVnnn-n&non4nMn:n,nCn
n[r[z
n\foo=
n\no\fo
n\tn\vn
n\ttYukx
n_cs_precedes
n_fields
n_sep_by_space
n_sequence_fields
n_sign_posn
n_unnamed_fields
n`X;6XrRo`EM
name
name '%.200s' is not defined
name '%U' is assigned to before global declaration
name '%U' is assigned to before nonlocal declaration
name '%U' is nonlocal and global
name '%U' is parameter and global
name '%U' is parameter and nonlocal
name '%U' is used prior to global declaration
name '%U' is used prior to nonlocal declaration
name and version of the thread library
name capture %R makes remaining patterns unreachable
name of machine on network (implementation-defined)
name of the algorithm for hashing of str, bytes and memoryviews
name of the async generator
name of the coroutine
name of the generator
name of the lock implementation
name of the thread implementation
name tuples must contain only strings, not '%.500s'
name={!r}
name_size
named arguments must follow bare *
named expression
nameless module
namereplace
namereplace_errors
names
namespace
namespace module loaded with path {!r}
namespace_path
nanj
nboFoGo$o
nboLq
nbvD
nbytes
ncIg
nd!y
ndigits
ndim
ne($module, a, b, /)\n--\n\nSame as a != b.
need at most %zd handles, got a sequence of length %zd
need dictionary
need more than 0 values to unpack
need more than 1 value to unpack
need to escape, but no escapechar set
neg($module, a, /)\n--\n\nSame as -a.
negative LONG_BINPUT argument
negative PUT argument
negative argument not allowed
negative count
negative data size
negative file descriptor
negative seek position %R
negative seek value %zd
negative shift count
negative size
negative size value %zd
negative_sign
nested
nested exceptions
nested_scopes
netrc
never
new buffer size too large
new position too large
new size out of range
new string is too long
new style getargs format but argument is not a tuple
new-line character seen in unquoted field - do you need to open the file in universal-newline mode?
new_args
new_comps
new_interpreter
new_limit
new_name
new_path
new_root
new_unc_prefix
newchars
newdata
newline
newline must be str or None, not %.200s
newline_decoder
newlines
newpath
next
next(iterator[, default])\n\nReturn the next item from the iterator. If default is given and the iterator\nis exhausted, it is returned instead of raising StopIteration.
nextafter
nextafter($module, x, y, /)\n--\n\nReturn the next floating-point value after x towards y.
nf-FofY
nfu=z
nhlhp9RLfh&Nr?
nht\r
nj3{Bd
nlolm
nnOn
nnn:move
nnnn
nnr_@
nnsn~
nntplib
no binding for nonlocal '%U' found
no built-in module named 
no codec search functions registered: can't find encoding
no current interpreter
no current thread ident
no import module dictionary
no interpreter provided
no locals found during 'import *'
no locals found when setting up annotations
no locals found when storing %R
no locals when deleting %R
no locals when loading %R
no mem for sys.argv
no os specific module found
no package specified for 
no path specified
no positional arguments expected
no space to pack %zd bytes at offset %zd
no such codec is supported.
no such group
no symtable
no_site
no_user_site
node_depth
node_depth must be between 0 and 255
node_offset
node_offset is too large
nodename
nomooo
non-NULL old thread state
non-ascii grouped digit
non-default argument follows default argument
non-dict annotations
non-dict keyword only default args
non-hexadecimal number found in fromhex() arg at position %zd
non-integer arguments in division
non-string found in code slot
non-tuple default args
non-zero padding bits in shift sequence
nondirs
none_dealloc
nonempty __slots__ not supported for subtype of '%s'
nonlocal
nonlocal declaration not allowed at module level
noo`o_o
normalize
normcase
normp
normpath
not 
not a Zip file
not a Zip file: 
not a chance
not a const
not a symbolic link
not a weakref
not a whole number of frames
not all FORBIDDENBYTE (0x%02x):\n
not all arguments converted during bytes formatting
not all arguments converted during string formatting
not enough arguments for format string
not enough data to unpack %zd bytes at offset %zd
not enough memory for output buffer
not enough out-of-band buffers
not enough values to unpack (expected %d, got %d)
not enough values to unpack (expected at least %d, got %d)
not enough values to unpack (expected at least %d, got %zd)
not holding the import lock
not implemented on this platform
not readable
not the last thread
not writable
not_
not_($module, a, /)\n--\n\nSame as not a.
note must be a str, not '%s'
notimplemented_dealloc
now($type, /, tz=None)\n--\n\nReturns new datetime object representing current time local to tz.\n\n  tz\n    Timezone object.\n\nIf no tz is specified, uses local timezone.
np;2o
nrn_n>n#nkn+nvnMn
nrorxr
ns7c
nsosqsws
nt.DirEntry
nt.ScandirIterator
nt.times_result
nt.uname_result
ntpath
nturl2path
nuSqN
null
null argument to internal routine
null file for PyFile_WriteString
number
number of bits must be non-negative
number of hard links
numbers
numerator
nunO
nunu#
nyd\re\fv
n|i:seek
o!o"o#o%o&o'o(o,o.o0o2o4o5o7o8o9o:o;o<o=o?o@oAoBo
o"gamma($module, x, /)\n--\n\nGamma function at x.
o"t8t
o%o6o<o
o&o)o*o/o0o3o6o;o<o-oOoQoRoSoWoYoZo]o^oaoboholo}o~o
o(J#J
o+o/o
o0}m
o1o8o2o#o
o3Mr71
o4p4
o5|U
o6p6
o6s7s
o7CP
o:nQoQ0A
o=b3
o>|us
o?p?q?M
o@XV0R?A
oA^f
oB6S&>W
oF@\jFH
oFpF
oJMCePq7Y
oKA3NDJFI1
oL98L8h
oM'qeN]K
oNq t0u8uQurvL{
oNv\vw
oOBY
oQofoTo
oRmR
oUoroRoPoWo
oVkK6
oVqVrV
oW_Wh
o[2Z
o\fqou
o\n*zG
o\no\fo\ro
o\no\vo\fo\ro
o\tp\vp
o_SLyS
o`j8M1q`A
oaoko}ogo
object
object %.100s can't be used in 'await' expression
object %.50s does not have __aiter__ method
object %.50s does not have __anext__ method
object %.50s does not have __await__ method
object address  : %p\n
object already tracked by the garbage collector
object being awaited on, or None
object being iterated by yield from, or None
object does not provide __dir__
object of type '%.200s' has no len()
object refcount : %ld\n
object repr     : 
object supporting the buffer API required
object too deeply nested to marshal
object type     : %p\n
object type name: %s\n
object()\n--\n\nThe base class of the class hierarchy.\n\nWhen called, it accepts no arguments and returns a new featureless\ninstance that has no instance attributes and cannot be given any.\n
object.__delattr__
object.__getattr__
object.__init__() takes exactly one argument (the instance to initialize)
object.__new__() takes exactly one argument (the type to instantiate)
object.__setattr__
object.readline() returned non-string
object_hook
object_pairs_hook
oboOo
ocowojo{o
oct($module, number, /)\n--\n\nReturn the octal representation of an integer.\n\n   >>> oct(342391)\n   '0o1234567'
octal
od.__reversed__() <==> reversed(od)
od.clear() -> None.  Remove all items from od.
od.copy() -> a shallow copy of od
odd number of items for DICT
odd number of items for SETITEMS
odict_items
odict_iterator
odict_keys
odict_values
oe1\
oem_decode
oem_decode($module, data, errors=None, final=False, /)\n--\n\n
oem_encode
oem_encode($module, str, errors=None, /)\n--\n\n
offset
offset %zd out of range for %zd-byte buffer
offset from UTC in seconds
offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24), not %R.
offset must be a timedelta strictly between -timedelta(hours=24) and timedelta(hours=24).
ofmf
ois Pinard]\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nThe strange invariant above is meant to be an efficient memory\nrepresentation for a tournament.  The numbers below are `k', not a[k]:\n\n                                   0\n\n                  1                                 2\n\n          3               4                5               6\n\n      7       8       9       10      11      12      13      14\n\n    15 16   17 18   19 20   21 22   23 24   25 26   27 28   29 30\n\n\nIn the tree above, each cell `k' is topping `2*k+1' and `2*k+2'.  In\na usual binary tournament we see in sports, each cell is the winner\nover the two cells it tops, and we can trace the winner down the tree\nto see all opponents s/he had.  However, in many computer applications\nof such tournaments, we do not need to trace the history of a winner.\nTo be more memory efficient, when a winner is promoted, we try to\nreplace it by something else at a lower level, and the rule becomes\nthat a cell and the two cells it tops contain three different items,\nbut the top cell "wins" over the two topped cells.\n\nIf this heap invariant is protected at all time, index 0 is clearly\nthe overall winner.  The simplest algorithmic way to remove it and\nfind the "next" winner is to move some loser (let's say cell 30 in the\ndiagram above) into the 0 position, and then percolate this new 0 down\nthe tree, exchanging values, until the invariant is re-established.\nThis is clearly logarithmic on the total number of items in the tree.\nBy iterating over all items, you get an O(n ln n) sort.\n\nA nice feature of this sort is that you can efficiently insert new\nitems while the sort is going on, provided that the inserted items are\nnot "better" than the last 0'th element you extracted.  This is\nespecially useful in simulation contexts, where the tree holds all\nincoming events, and the "win" condition means the smallest scheduled\ntime.  When an event schedule other events for execution, they are\nscheduled into the future, so they can easily go into the heap.  So, a\nheap is a good structure for implementing schedulers (this is what I\nused for my MIDI sequencer :-).\n\nVarious structures for implementing schedulers have been extensively\nstudied, and heaps are good for this, as they are reasonably speedy,\nthe speed is almost constant, and the worst case is not much different\nthan the average case.  However, there are other representations which\nare more efficient overall, yet the worst cases might be terrible.\n\nHeaps are also very useful in big disk sorts.  You most probably all\nknow that a big sort implies producing "runs" (which are pre-sorted\nsequences, which size is usually related to the amount of CPU memory),\nfollowed by a merging passes for these runs, which merging is often\nvery cleverly organised[1].  It is very important that the initial\nsort produces the longest runs possible.  Tournaments are a good way\nto that.  If, using all the memory available to hold a tournament, you\nreplace and percolate items that happen to fit the current run, you'll\nproduce runs which are twice the size of the memory for random input,\nand much better for input fuzzily ordered.\n\nMoreover, if you output the 0'th item on disk and get an input which\nmay not fit in the current tournament (because the value "wins" over\nthe last output value), it cannot fit in the heap, so the size of the\nheap decreases.  The freed memory could be cleverly reused immediately\nfor progressively building a second heap, which grows at exactly the\nsame rate the first heap is melting.  When the first heap completely\nvanishes, you switch heaps and start a new run.  Clever and quite\neffective!\n\nIn a word, heaps are useful memory structures to know.  I use them in\na few applications, and I think it is good to keep a `heap' module\naround. :-)\n\n--------------------\n[1] The disk balancing algorithms which are current, nowadays, are\nmore annoying than clever, and this is a consequence of the seeking\ncapabilities of the disks.  On devices which cannot seek, like big\ntape drives, the story was quite different, and one had to be very\nclever to ensure (far in advance) that each tape movement will be the\nmost effective possible (that is, will best participate at\n"progressing" the merge).  Some tapes were even able to read\nbackwards, and this was also used to avoid the rewinding time.\nBelieve me, real good tape sorts were quite spectacular to watch!\nFrom all times, sorting has always been a Great Art! :-)\n
oj=u=
ojpj
okXM
old style getargs format uses new features
old_path
old_value
omo[oxono
omy,{
on removing the last compiler stack item
on_type_read
once
onceregistry
onerror
only classes may be registered
only directories are supported
only single target (not %s) can be annotated
only single target (not tuple) can be annotated
onogq
ooo[o
opO>ncocW=
oparg
opcode
open
open($module, /, file, mode='r', buffering=-1, encoding=None,\n     errors=None, newline=None, closefd=True, opener=None)\n--\n\nOpen file and return a stream.  Raise OSError upon failure.\n\nfile is either a text or byte string giving the name (and the path\nif the file isn't in the current working directory) of the file to\nbe opened or an integer file descriptor of the file to be\nwrapped. (If a file descriptor is given, it is closed when the\nreturned I/O object is closed, unless closefd is set to False.)\n\nmode is an optional string that specifies the mode in which the file\nis opened. It defaults to 'r' which means open for reading in text\nmode.  Other common values are 'w' for writing (truncating the file if\nit already exists), 'x' for creating and writing to a new file, and\n'a' for appending (which on some Unix systems, means that all writes\nappend to the end of the file regardless of the current seek position).\nIn text mode, if encoding is not specified the encoding used is platform\ndependent: locale.getencoding() is called to get the current locale encoding.\n(For reading and writing raw bytes use binary mode and leave encoding\nunspecified.) The available modes are:\n\n========= ===============================================================\nCharacter Meaning\n--------- ---------------------------------------------------------------\n'r'       open for reading (default)\n'w'       open for writing, truncating the file first\n'x'       create a new file and open it for writing\n'a'       open for writing, appending to the end of the file if it exists\n'b'       binary mode\n't'       text mode (default)\n'+'       open a disk file for updating (reading and writing)\n========= ===============================================================\n\nThe default mode is 'rt' (open for reading text). For binary random\naccess, the mode 'w+b' opens and truncates the file to 0 bytes, while\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\nraises an `FileExistsError` if the file already exists.\n\nPython distinguishes between files opened in binary and text modes,\neven when the underlying operating system doesn't. Files opened in\nbinary mode (appending 'b' to the mode argument) return contents as\nbytes objects without any decoding. In text mode (the default, or when\n't' is appended to the mode argument), the contents of the file are\nreturned as strings, the bytes having been first decoded using a\nplatform-dependent encoding or using the specified encoding if given.\n\nbuffering is an optional integer used to set the buffering policy.\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\nline buffering (only usable in text mode), and an integer > 1 to indicate\nthe size of a fixed-size chunk buffer.  When no buffering argument is\ngiven, the default buffering policy works as follows:\n\n* Binary files are buffered in fixed-size chunks; the size of the buffer\n  is chosen using a heuristic trying to determine the underlying device's\n  "block size" and falling back on `io.DEFAULT_BUFFER_SIZE`.\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\n\n* "Interactive" text files (files for which isatty() returns True)\n  use line buffering.  Other text files use the policy described above\n  for binary files.\n\nencoding is the name of the encoding used to decode or encode the\nfile. This should only be used in text mode. The default encoding is\nplatform dependent, but any encoding supported by Python can be\npassed.  See the codecs module for the list of supported encodings.\n\nerrors is an optional string that specifies how encoding errors are to\nbe handled---this argument should not be used in binary mode. Pass\n'strict' to raise a ValueError exception if there is an encoding error\n(the default of None has the same effect), or pass 'ignore' to ignore\nerrors. (Note that ignoring encoding errors can lead to data loss.)\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\nfor a list of the permitted encoding error strings.\n\nnewline controls how universal newlines works (it only applies to text\nmode). It can be None, '', '\n', '\r', and '\r\n'.  It works as\nfollows:\n\n* On input, if newline is None, universal newlines mode is\n  enabled. Lines in the input can end in '\n', '\r', or '\r\n', and\n  these are translated into '\n' before being returned to the\n  caller. If it is '', universal newline mode is enabled, but line\n  endings are returned to the caller untranslated. If it has any of\n  the other legal values, input lines are only terminated by the given\n  string, and the line ending is returned to the caller untranslated.\n\n* On output, if newline is None, any '\n' characters written are\n  translated to the system default line separator, os.linesep. If\n  newline is '' or '\n', no translation takes place. If newline is any\n  of the other legal values, any '\n' characters written are translated\n  to the given string.\n\nIf closefd is False, the underlying file descriptor will be kept open\nwhen the file is closed. This does not work when a file name is given\nand must be True in that case.\n\nA custom opener can be used by passing a callable as *opener*. The\nunderlying file descriptor for the file object is then obtained by\ncalling *opener* with (*file*, *flags*). *opener* must return an open\nfile descriptor (passing os.open as *opener* results in functionality\nsimilar to passing None).\n\nopen() returns a file object whose type depends on the mode, and\nthrough which the standard file operations such as reading and writing\nare performed. When open() is used to open a file in a text mode ('w',\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\na file in a binary mode, the returned class varies: in read binary\nmode, it returns a BufferedReader; in write binary and append binary\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\na BufferedRandom.\n\nIt is also possible to use a string or bytearray as a file for both\nreading and writing. For strings StringIO can be used like a file\nopened in a text mode, and for bytes a BytesIO can be used like a file\nopened in a binary mode.
open($module, /, path, flags, mode=511, *, dir_fd=None)\n--\n\nOpen a file for low level IO.  Returns a file descriptor (integer).\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.
open_code
open_code($module, /, path)\n--\n\nOpens the provided file with the intent to import the contents.\n\nThis may perform extra validation beyond open(), but is otherwise interchangeable\nwith calling open(path, 'rb').
open_osfhandle
open_osfhandle($module, handle, flags, /)\n--\n\nCreate a C runtime file descriptor from the file handle handle.\n\nThe flags parameter should be a bitwise OR of os.O_APPEND, os.O_RDONLY,\nand os.O_TEXT. The returned file descriptor may be used as a parameter\nto os.fdopen() to create a file object.
opener
opener returned %d
operand
operating system name
operating system release
operating system version
operation
operation forbidden on released PickleBuffer object
operation forbidden on released memoryview object
operator
operator = Add | Sub | Mult | MatMult | Div | Mod | Pow | LShift | RShift | BitOr | BitXor | BitAnd | FloorDiv
operator.attrgetter
operator.itemgetter
operator.methodcaller
oppjsj~
opt-
opt_level
optimization
optimization level 
optimization portion of filename does not start with 
optimization_level
optimize
optional 3rd arg must be a dictionary
optional_vars
optparse
op{vI{
or_($module, a, b, /)\n--\n\nSame as a | b.
ord($module, c, /)\n--\n\nReturn the Unicode code point for a one-character string.
ord() expected a character, but string of length %zd found
ord() expected string of length 1, but %.200s found
order
order must be 'C', 'F' or 'A'
ordinal must be >= 1
ordinal not in range(128)
ordinal not in range(256)
orelse
orig_argv
orig_path
orig_st
origin
origin={!r}
original_name
origname
orkr
orphan tstate
orwrmrnr
os.add_dll_directory
os.chdir
os.chmod
os.exec
os.fwalk
os.kill
os.link
os.listdir
os.mkdir
os.path
os.putenv
os.remove
os.rename
os.rmdir
os.scandir
os.spawn
os.startfile
os.startfile/2
os.stat_result
os.statvfs_result
os.symlink
os.system
os.terminal_size
os.truncate
os.unsetenv
os.utime
os.walk
os_name
ossaudiodev
other
other argument must be K instance
ouquU
out of memory
out of memory copying exception message
out of memory copying exception type name
output
overlapped
overlapped event handle
override
ovolo
owner
oxoro|ozo
oytOfw
ozopodo
ozoxo
o|oXo
p p!p"p$p%p&p'p(p)p*p
p p#p/p4p7p9p<pCpDpHpIpJpKpTpUp]p^pNpdpeplpnpupvp~p
p!q!r!s!t!u!v!w!x!y!
p!q!r!s!t!u!v!w!x!y!`!a!b!c!d!e!f!g!h!i!
p&q]x
p'p p
p(pJp]p^pNpdpup
p*p\fr\nr
p+p!p"p#p)p
p+yb
p,r-r8rHrgrir
p.q1q#q%q"q2q
p/pPq
p0p>p2pQpcp
p0q0
p0q0tv
p0rrrortr
p1fggg
p2x+~
p3f9J;
p3q3
p5q5
p6qYq
p8q8
p8vtSJ
p9p5pOp^p
p9ryr
p:BO&
p;alpC
p=r}r
p>/XWF%
p>q>b
p@=nbH
p@q@L
pAU7
pApgN
pArIrJrlrprsrnr
pBrxr
pGqGf
pG{15RT4+6?K)XG
pH*I
pLcbE
pO=y
pOupu
pQ[0
pTG[U^
pV/s
pWLQ
pWxNb
pXCxWj
pY#i
pZjAUL]O
p[a3
p\fp\rp
p\np#p
p\qc
p\tp\np\vp\fp\rp
p\tq\nq
p\tt`tYu$vkx,
p_cs_precedes
p_drive
p_path
p_sep_by_space
p_sign_posn
pack
pack expected %zd items for packing (got %zd)
pack(format, v1, v2, ...) -> bytes\n\nReturn a bytes object containing the values v1, v2, ... packed according\nto the format string.  See help(struct) for more on format strings.
pack_into
pack_into expected %zd items for packing (got %zd)
pack_into expected buffer argument
pack_into expected offset argument
pack_into requires a buffer of at least %zu bytes for packing %zd bytes at offset %zd (actual buffer size is %zd)
pack_into(format, buffer, offset, v1, v2, ...)\n\nPack the values v1, v2, ... according to the format string and write\nthe packed bytes into the writable buffer buf starting at offset.  Note\nthat the offset is a required argument.  See help(struct) for more\non format strings.
package
package must be a string
padded string is too long
page error
pairwise
pairwise(iterable, /)\n--\n\nReturn an iterator of overlapping pairs taken from the input iterator.\n\n    s -> (s0,s1), (s1,s2), (s2, s3), ...
pardir
parent
parent_module
parent_module_name
parent_name
parent_path
parent_spec
parse the argument as a format string
parse_and_bind
parse_argv
parse_constant
parse_float
parse_int
parser_debug
part
partial
partial character in shift sequence
partial(func, *args, **keywords) - new function with partial application\n    of the given arguments and keywords.\n
partially initialized module '%U' has no attribute '%U' (most likely due to a circular import)
partition
partition($self, sep, /)\n--\n\nPartition the bytearray into three parts using the given separator.\n\nThis will search for the separator sep in the bytearray. If the separator is\nfound, returns a 3-tuple containing the part before the separator, the\nseparator itself, and the part after it as new bytearray objects.\n\nIf the separator is not found, returns a 3-tuple containing the copy of the\noriginal bytearray object and two empty bytearray objects.
partition($self, sep, /)\n--\n\nPartition the bytes into three parts using the given separator.\n\nThis will search for the separator sep in the bytes. If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original bytes\nobject and two empty bytes objects.
partition($self, sep, /)\n--\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string.  If the separator is found,\nreturns a 3-tuple containing the part before the separator, the separator\nitself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string\nand two empty strings.
pass
path
path is on mount 
path should be string, bytes, or os.PathLike, not %.200s
path too long
path_abs
path_attr_name
path_drive
path_finder
path_hook
path_hook_for_FileFinder
path_hooks
path_importer_cache
path_list
path_listb
path_mtime
path_name
path_parts
path_repr
path_rest
path_sep
path_sep_tuple
path_separators
path_stats
path_tmp
path_type
pathconf
pathconfig_warnings
pathlen
pathlib
pathname
paths
pathsep
pattern
pattern = MatchValue(expr value)\n        | MatchSingleton(constant value)\n        | MatchSequence(pattern* patterns)\n        | MatchMapping(expr* keys, pattern* patterns, identifier? rest)\n        | MatchClass(expr cls, pattern* patterns, identifier* kwd_attrs, pattern* kwd_patterns)\n        | MatchStar(identifier? name)\n        | MatchAs(pattern? pattern, identifier? name)\n        | MatchOr(pattern* patterns)
patterns
patterns may only match literals and attribute lookups
pbCqJ
pcZ>j
pd+K
pd:@9
pdb.set_trace
pdlXX*d
peek
peek of closed file
peek($self, size=0, /)\n--\n\n
peek() should have returned a bytes object, not '%.200s'
pending buffer overflow
pending buffer too large
percent
perf_counter
perf_counter() -> float\n\nPerformance counter for benchmarking.
perf_counter_ns
perf_counter_ns() -> int\n\nPerformance counter for benchmarking as nanoseconds.
perm
perm($module, n, k=None, /)\n--\n\nNumber of ways to choose k items from n items without repetition and with order.\n\nEvaluates to n! / (n - k)! when k <= n and evaluates\nto zero when k > n.\n\nIf k is not specified or is None, then k defaults to n\nand the function returns n!.\n\nRaises TypeError if either of the arguments are not integers.\nRaises ValueError if either of the arguments are negative.
permutations
permutations(iterable, r=None)\n--\n\nReturn successive r-length permutations of elements in the iterable.\n\npermutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)
persistent IDs in protocol 0 must be ASCII strings
persistent_id
persistent_id must be a callable taking one argument
persistent_load
persistent_load must be a callable taking one argument
person
pfug
pgRPcC
phase
phase($module, z, /)\n--\n\nReturn argument, also known as the phase angle, of a complex.
pickle
pickle data was truncated
pickle protocol must be <= %d
pickle stream refers to out-of-band data but no *buffers* argument was given
pickle support
pickle.PickleBuffer
pickle.find_class
pickletools
pipe
pipe($module, /)\n--\n\nCreate a pipe.\n\nReturns a tuple of two file descriptors:\n  (read_fd, write_fd)
pipes
pjn]+
pjtj
pkg_main_name
pkg_name
pkgdir
pkgutil
platform
platform_version
platlibdir
platstdlib_dir)k
plistlib
pmU5
pmqm<Cg
pnqnrntnsn
polar
polar($module, z, /)\n--\n\nConvert a complex from rectangular coordinates to polar coordinates.\n\nr is the distance from 0 and phi the phase angle.
pop from an empty deque
pop from an empty set
pop from empty array
pop from empty bytearray
pop from empty list
pop index out of range
pop($self, /, key, default=<unrepresentable>)\n--\n\nod.pop(key[,default]) -> v, remove specified key and return the corresponding value.\n\nIf the key is not found, return the default if given; otherwise,\nraise a KeyError.
pop($self, i=-1, /)\n--\n\nReturn the i-th element and delete it from the array.\n\ni defaults to -1.
pop($self, index=-1, /)\n--\n\nRemove and return a single item from B.\n\n  index\n    The index from where to remove the item.\n    -1 (the default value) means remove the last item.\n\nIf no index argument is given, will pop the last item.
pop($self, index=-1, /)\n--\n\nRemove and return item at index (default last).\n\nRaises IndexError if list is empty or index is out of range.
pop($self, key, default=<unrepresentable>, /)\n--\n\nD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n\nIf the key is not found, return the default if given; otherwise,\nraise a KeyError.
popen
popen() does not support unbuffered streams
popitem
popitem($self, /)\n--\n\nRemove and return a (key, value) pair as a 2-tuple.\n\nPairs are returned in LIFO (last-in, first-out) order.\nRaises KeyError if the dict is empty.
popitem($self, /, last=True)\n--\n\nRemove and return a (key, value) pair from the dictionary.\n\nPairs are returned in LIFO order if last is true or FIFO order if false.
popitem(): dictionary is empty
popleft
poplib
portions
pos($module, a, /)\n--\n\nSame as +a.
position %zd from error handler out of bounds
position value cannot be negative
positional
positional argument follows keyword argument
positional argument follows keyword argument unpacking
positional patterns follow keyword patterns
positions_iterator
positive_sign
posix
posixpath
posonlyargs
possible namespace for {}
pow($module, /, base, exp, mod=None)\n--\n\nEquivalent to base**exp with 2 arguments or base**exp % mod with 3 arguments\n\nSome types, such as ints, are able to use a more efficient algorithm when\ninvoked using the three argument form.
pow($module, a, b, /)\n--\n\nSame as a ** b.
pow($module, x, y, /)\n--\n\nReturn x**y (x to the power of y).
pow() 3rd argument cannot be 0
pow() 3rd argument not allowed unless all arguments are integers
pp%c
pprint
pre_config
prec too big
precision too big
precision too large
preconfig_init_allocator
preconfig_init_utf8_mode
prefix
prefixes
prefixr\r
preinitialization config is NULL
preinitialized
preinitializing
prime number giving the modulus on which the hash function is based
print
print($module, /, *args, sep=' ', end='\n', file=None, flush=False)\n--\n\nPrints the values to a stream, or to sys.stdout by default.\n\n  sep\n    string inserted between values, default a space.\n  end\n    string appended after the last value, default a newline.\n  file\n    a file-like object (stream); defaults to the current sys.stdout.\n  flush\n    whether to forcibly flush the stream.
print_file_and_line
print_function
private identifier too large to be mangled
proc
process_time
process_time() -> float\n\nProcess time for profiling: sum of the kernel and user-space CPU time.
process_time() -> int\n\nProcess time for profiling as nanoseconds:\nsum of the kernel and user-space CPU time.
process_time_ns
prod
prod($module, iterable, /, *, start=1)\n--\n\nCalculate the product of all the elements in the input iterable.\n\nThe default start value for the product is 1.\n\nWhen the iterable is empty, return the start value.  This function is\nintended specifically for use with numeric values and may reject\nnon-numeric types.
product(*iterables, repeat=1) --> product object\n\nCartesian product of input iterables.  Equivalent to nested for-loops.\n\nFor example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).\nThe leftmost iterators are in the outermost for-loop, so the output tuples\ncycle in a manner similar to an odometer (with the rightmost element changing\non every iteration).\n\nTo compute the product of an iterable with itself, specify the number\nof repetitions with the optional repeat keyword argument. For example,\nproduct(A, repeat=4) means the same as product(A, A, A, A).\n\nproduct('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)\nproduct((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...
product_type
profile
program_name
program_name_was_set
prompt
property
property %R of %R object has no deleter
property %R of %R object has no getter
property %R of %R object has no setter
property has no deleter
property has no getter
property has no setter
property of %R object has no deleter
property of %R object has no getter
property of %R object has no setter
property(fget=None, fset=None, fdel=None, doc=None)\n--\n\nProperty attribute.\n\n  fget\n    function to be used for getting an attribute value\n  fset\n    function to be used for setting an attribute value\n  fdel\n    function to be used for del'ing an attribute\n  doc\n    docstring\n\nTypical use is to define a managed attribute x:\n\nclass C(object):\n    def getx(self): return self._x\n    def setx(self, value): self._x = value\n    def delx(self): del self._x\n    x = property(getx, setx, delx, "I'm the 'x' property.")\n\nDecorators make defining new properties or modifying existing ones easy:\n\nclass C(object):\n    @property\n    def x(self):\n        "I am the 'x' property."\n        return self._x\n    @x.setter\n    def x(self, value):\n        self._x = value\n    @x.deleter\n    def x(self):\n        del self._x
protection bits
proto
protocol
proxy
proxy($module, object, callback=None, /)\n--\n\nCreate a proxy object that weakly references 'object'.\n\n'callback', if given, is called with a reference to the\nproxy when 'object' is about to be finalized.
pstats
pth_dir
punycode
putch
putch($module, char, /)\n--\n\nPrint the byte string char to the console without buffering.
putenv
putenv($module, name, value, /)\n--\n\nChange or add an environment variable.
puts
putwch
putwch($module, unicode_char, /)\n--\n\nWide char variant of putch(), accepting a Unicode value.
pvc$
pw3n
pw_dir
pwent
pwowd
pxQ[
pxVo\
pxm=\
py_compile
py_setpath
pybuilddir.txtz
pycache
pycache_filename
pycache_prefix
pyclbr
pycore_create_interpreter
pycore_init_builtins
pycore_init_runtime
pycore_init_types
pycore_interp_init
pydoc
pydoc_data
pyexpat
pyinit_core_reconfigure
pyinit_main
pyinit_main_reconfigure
pymalloc
pymalloc_debug
python
python%d%d.dll
python%d.%d
python3.dll
python311.dll
python: Can't reopen .pyc file\n
python: failed to set __main__.__loader__\n
pythonpath_env
pythonpath_was_set
pythonz
pyvenv.cfg
pzyz}z
q q!q"q#q$q%q'q(q)q*q+q,q-q.q2q3q4q
q q+q-q/q0q1q8qAqEqFqGqJqKqPqRqWqZq\q^q`qhqyq
q q.q0qFqGqQqH
q!r!p
q"r"s"t"u"v"w"x"y"z"{"|"
q&q0q!q6qnq
q(q:q
q/q1qsq\qhqEqrqJqxqzq
q1rgjN]BP
q2r2
q3u^y3}N
q4V6V2V8VkVdV/VlVjV
q4`FtJ
q4q11L
q4r4s4
q5rFrpsrs
q7I0V6T7
q8Br
q8TToh
q9XhuW
q;Kl.
q=r=D
q>Q0a
q>b=bCbHbIb;y@yFyIy[y\ySyZybyWy`yoygyzy
qD/p&<0pyC\
qDrDg
qDrSr
qEJ^
qER@
qFrF
qH=EFl
qJ2R
qKrZr
qM;f
qNuSP]
qPuPN0d
qRF8?L
qRs}{
qT~w
qUhE 
qVCs
qXgX|7
qYGq
q\qFqGq
q\v\y\45S
q\vq\fq
q\vq\fq\rq
q_FLr_p
qaq?paR5
qb73lbp
qbt(u,us
qdeFj+):"+P4
qepS
qeqUq
qfqbqLqVqlq
qjud
qjwjm
qkyH]
qlnlol#WqInKtl}
qoso
qpppp
qqiA
qr>Fnrmr
qssnsos
qt08TUO8pF]
qualified name of the async generator
qualified name of the coroutine
qualified name of the generator
queue
quiet
quit
quopri
quote
quotechar
quotechar must be set if quoting enabled
quotetabs
quoting
qwB+qEq
qwsus
q{vI{
q~r{r|r
r must be non-negative
r r!r"r#r$r%r&r'r)r+r-r.r/r2r3r4r:r<r>r@rArBrCrDrErFrIrJrKrNrOrPrQrSrTrUrWrXrZr\r^r`rcrdrerhrjrkrlrmrprqrsrtrvrwrxr{r|r}r
r#ZN
r$r+r/r4r8r9rArBrCrErNrOrPrSrUrVrZr\r^r`rcrhrkrnrorqrwrxr{r|r
r%s%t%u%v%w%x%',
r%tZt
r(e9e
r(r-r,r0r2r;r<r?r@rFrKrXrtr~r
r(rlp
r/e9r-
r0e9r\f
r1mE
r2eUr0e
r4t 
r4t\t
r5H3
r5e0r3e0
r5hA
r6&0D
r6s%s4s)s:t*t3t"t%t5t6t4t/t
r6|Lz@z
r7s7
r8g0rK
r8s8
r9<uMuK
r9s9p
r<sBs;s:s@sJsIsDtJtKtRtQtWt@tOtPtNtBtFtMtTt
r>s>t>u>c
r?s?R
rAsAh
rBRBk
rBsB
rCsMsQsLsbtstqtutrtgtnt
rDsPsdtctjtptmt
rEt\v
rFg]>9SC
rH3n2n0ndcT4g
rHt\t
rIA3X
rIdh!F]
rIe4rGe
rJe&r
rJh@$p[
rL]w
rMIU}HOIBO"X;2kSD
rNFS
rNsWsit
rO9wsY
rP.BPb
rP\O
rS:2
rUrVr?>
rXsRs^s_s`s]s[sasZsYs
rZ'u
r\rrXr
r\tr\nr\vr\fr\rr
r\vptI
r]rfror~r
r^tn{n}
r`L9
r`u`F
radians
radians($module, x, /)\n--\n\nConvert angle x from degrees to radians.
radix
raise
raise_exception(code, flags=0): Call RaiseException(code, flags).
raise_signal
raise_signal($module, signalnum, /)\n--\n\nSend a signal to the executing process.
raises an exception to avoid pickling
random
random($self, /)\n--\n\nrandom() -> x in the interval [0, 1).
range
range expected at least 1 argument, got 0
range expected at most 3 arguments, got %zd
range indices must be integers or slices, not %.200s
range object index out of range
range(%R, %R)
range(%R, %R, %R)
range() arg 3 must not be zero
range(stop) -> range object\nrange(start, stop[, step]) -> range object\n\nReturn an object that produces a sequence of integers from start (inclusive)\nto stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\nstart defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\nThese are exactly the valid indices for a list of 4 elements.\nWhen step is given, it specifies the increment (or decrement).
range_iterator
rangeobject.count(value) -> integer -- return number of occurrences of value
rangeobject.index(value) -> integer -- return index of value.\nRaise ValueError if the value is not present.
ratecv
ratecv($module, fragment, width, nchannels, inrate, outrate, state,\n       weightA=1, weightB=0, /)\n--\n\nConvert the frame rate of the input fragment.
ratecv(): illegal state argument
raw readinto() failed
raw readinto() returned invalid length %zd (should have been between 0 and %zd)
raw stream has been detached
raw write() returned invalid length %zd (should have been between 0 and %zd)
raw($self, /)\n--\n\nReturn a memoryview of the raw memory underlying this buffer.\nWill raise BufferError is the buffer isn't contiguous.
raw_data
raw_unicode_escape_decode
raw_unicode_escape_decode($module, data, errors=None, final=True, /)\n--\n\n
raw_unicode_escape_encode
raw_unicode_escape_encode($module, str, errors=None, /)\n--\n\n
rawunicodeescape
rayo
rb/A<KJ
rbrace
rc}\td
re.ASCII
re.DEBUG
re.DOTALL
re.IGNORECASE
re.LOCALE
re.MULTILINE
re.Match
re.Pattern
re.TEMPLATE
re.UNICODE
re.VERBOSE
re.compile(%.200R)
re.compile(%.200R, %S)
reached EOF while reading pyc header of 
read
read byte out of range
read length must be non-negative or -1
read of closed file
read would overflow (invalid bytecode)
read($module, fd, length, /)\n--\n\nRead from a file descriptor.  Returns a bytes object.
read($self, size=-1, /)\n--\n\n
read($self, size=-1, /)\n--\n\nRead at most size bytes, returned as a bytes object.\n\nIf the size argument is negative, read until EOF is reached.\nReturn an empty bytes object at EOF.
read($self, size=-1, /)\n--\n\nRead at most size bytes, returned as bytes.\n\nOnly makes one system call when size is a positive integer,\nso less data may be returned than requested.\nReturn an empty bytes object at EOF.
read($self, size=-1, /)\n--\n\nRead at most size bytes, returned as bytes.\n\nOnly makes one system call, so less data may be returned than requested.\nIn non-blocking mode, returns None if no data is available.\nReturn an empty bytes object at EOF.
read($self, size=-1, /)\n--\n\nRead at most size characters, returned as a string.\n\nIf the argument is negative or omitted, read until EOF\nis reached. Return an empty string at EOF.
read($self, sizeobj=None, /)\n--\n\n
read() didn't return bytes
read() didn't return enough bytes
read() returned non-bytes object (%R)
read() returned too much data: %zd bytes requested, %zd returned
read() should have returned a bytes object, not '%.200s'
read() should return bytes
read-only bytes-like object
read-write bytes-like object
read1
read1($self, size=-1, /)\n--\n\n
read1($self, size=-1, /)\n--\n\nRead at most size bytes, returned as a bytes object.\n\nIf the size argument is negative or omitted, read until EOF is reached.\nReturn an empty bytes object at EOF.
read_byte
read_code
read_history_file
read_init_file
readable
readable($self, /)\n--\n\n
readable($self, /)\n--\n\nReturn whether object was opened for reading.\n\nIf False, read() will raise OSError.
readable($self, /)\n--\n\nReturns True if the IO object can be read.
readable($self, /)\n--\n\nTrue if console is an input buffer.
readable($self, /)\n--\n\nTrue if file was opened in a read mode.
readall
readall($self, /)\n--\n\nRead all data from the console, returned as bytes.\n\nReturn an empty bytes object at EOF.
readall($self, /)\n--\n\nRead all data from the file, returned as bytes.\n\nIn non-blocking mode, returns as much as is immediately available,\nor None if no data is available.  Return an empty bytes object at EOF.
readall($self, /)\n--\n\nRead until EOF, using multiple read() call.
readall() should return bytes
readbuffer_encode
readbuffer_encode($module, data, errors=None, /)\n--\n\n
reader
reading
reading getpath results
readinto
readinto of closed file
readinto($self, buffer, /)\n--\n\n
readinto($self, buffer, /)\n--\n\nRead bytes into buffer.\n\nReturns number of bytes read (0 for EOF), or None if the object\nis set not to block and has no data to read.
readinto($self, buffer, /)\n--\n\nSame as RawIOBase.readinto().
readinto() returned negative size
readinto1
readinto1($self, buffer, /)\n--\n\n
readline
readline of closed file
readline($self, size=-1, /)\n--\n\n
readline($self, size=-1, /)\n--\n\nNext line from the file, as a bytes object.\n\nRetain newline.  A non-negative size argument limits the maximum\nnumber of bytes to return (an incomplete line may be returned then).\nReturn an empty bytes object at EOF.
readline($self, size=-1, /)\n--\n\nRead and return a line from the stream.\n\nIf size is specified, at most size bytes will be read.\n\nThe line terminator is always b'\n' for binary files; for text\nfiles, the newlines argument to open can be used to select the line\nterminator(s) recognized.
readline($self, size=-1, /)\n--\n\nRead until newline or EOF.\n\nReturns an empty string if EOF is hit immediately.
readline($self, sizeobj=None, /)\n--\n\n
readline() should have returned a bytes object, not '%.200s'
readline() should have returned a str object, not '%.200s'
readline_doc
readlines
readlines($self, hint=-1, /)\n--\n\nReturn a list of lines from the stream.\n\nhint can be specified to control the number of lines read: no more\nlines will be read if the total size (in bytes/characters) of all\nlines so far exceeds hint.
readlines($self, size=None, /)\n--\n\nList of bytes objects, each a line from the file.\n\nCall readline() repeatedly and return a list of the lines so read.\nThe optional size argument, if given, is an approximate bound on the\ntotal number of bytes in the lines returned.
readlines($self, sizehintobj=None, /)\n--\n\n
readlink
readlink($module, /, path, *, dir_fd=None)\n--\n\nReturn a string representing the path to which the symbolic link points.\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\nand path should be relative; path will then be relative to that directory.\n\ndir_fd may not be implemented on your platform.  If it is unavailable,\nusing it will raise a NotImplementedError.
readonly
readonly attribute
readsize
real
real number required in complex literal
real_executable
real_executable_dirr:
realloc
realpath
reason
reccallcount
reconfigure
reconfigure($self, /, *, encoding=None, errors=None, newline=None,\n            line_buffering=None, write_through=None)\n--\n\nReconfigure the text stream with new parameters.\n\nThis also does an implicit stream flush.
record
rect
rect($module, r, phi, /)\n--\n\nConvert from polar coordinates to rectangular coordinates.
recursion limit exceeded
recursion limit must be greater or equal than 1
recursive
recv
reduce
reduce() arg 2 must support iteration
reduce() of empty iterable with no initial value
reduce(function, iterable[, initial]) -> value\n\nApply a function of two arguments cumulatively to the items of a sequence\nor iterable, from left to right, so as to reduce the iterable to a single\nvalue.  For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates\n((((1+2)+3)+4)+5).  If initial is present, it is placed before the items\nof the iterable in the calculation, and serves as a default when the\niterable is empty.
reducer_override
reentrant call inside %R
reentrant call inside %s.__repr__
register
register($module, search_function, /)\n--\n\nRegister a codec search function.\n\nSearch functions are expected to take one argument, the encoding name in\nall lower case letters, and either return None, or a tuple of functions\n(encoder, decoder, stream_reader, stream_writer) (or a CodecInfo object).
register() takes at least 1 argument (0 given)
register(func, *args, **kwargs) -> func\n\nRegister a function to be executed upon normal program termination\n\n    func - function to be called at exit\n    args - optional arguments to pass to func\n    kwargs - optional keyword arguments to pass to func\n\n    func is returned to facilitate usage as a decorator.
register_dialect
register_error
register_error($module, errors, handler, /)\n--\n\nRegister the specified error handler under the name errors.\n\nhandler must be a callable object, that will be called with an exception\ninstance containing information about the location of the encoding/decoding\nerror and must return a (replacement, new position) tuple.
register_readline
registry
registry_key
regs
regular expression scanner already executing
rel_list
rel_tol
release
release unlocked lock
release($self, /)\n--\n\nRelease the underlying buffer exposed by the PickleBuffer object.
release($self, /)\n--\n\nRelease the underlying buffer exposed by the memoryview object.
release()\n(release_lock() is an obsolete synonym)\n\nRelease the lock, allowing another thread that is blocked waiting for\nthe lock to acquire the lock.  The lock must be in the locked state,\nbut it needn't be locked by the same thread that unlocks it.
release()\n\nRelease the lock, allowing another thread that is blocked waiting for\nthe lock to acquire the lock.  The lock must be in the locked state,\nand must be locked by the same thread that unlocks it; otherwise a\n`RuntimeError` is raised.\n\nDo note that if the lock was acquire()d several times in a row by the\ncurrent thread, release() needs to be called as many times for the lock\nto be available for other threads.
release_lock
release_lock($module, /)\n--\n\nRelease the interpreter's import lock.\n\nOn platforms without threads, this function does nothing.
releaselevel
relfile
reload
relpath
relpath.<locals>.<listcomp>
remainder
remainder($module, x, y, /)\n--\n\nDifference between x and the closest integer multiple of y.\n\nReturn x - n*y where n*y is the closest integer multiple of y.\nIn the case where x is exactly halfway between two multiples of\ny, the nearest even value of n is used. The result is always exact.
remaining subinterpreters
remaining threads
remove
remove($module, /, path, *, dir_fd=None)\n--\n\nRemove a file (same as unlink()).\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.
remove($self, v, /)\n--\n\nRemove the first occurrence of v in the array.
remove($self, value, /)\n--\n\nRemove first occurrence of value.\n\nRaises ValueError if the value is not present.
remove($self, value, /)\n--\n\nRemove the first occurrence of a value in the bytearray.\n\n  value\n    The value to remove.
remove_dll_directory
remove_importlib_frames in import.c will always remove sequences\n    of importlib frames that end with a call to this function\n\n    Use it instead of a normal call in places where including the importlib\n    frames introduces unwanted noise into the traceback (e.g. when executing\n    module code)\n    
removedirs
removedirs(name)\n\n    Super-rmdir; remove a leaf directory and all empty intermediate\n    ones.  Works like rmdir except that, if the leaf directory is\n    successfully removed, directories corresponding to rightmost path\n    segments will be pruned away until either the whole path is\n    consumed or an error occurs.  Errors during this latter phase are\n    ignored -- they generally mean that a directory was not empty.\n\n    
removeduppaths
removeprefix
removeprefix($self, prefix, /)\n--\n\nReturn a bytearray with the given prefix string removed if present.\n\nIf the bytearray starts with the prefix string, return\nbytearray[len(prefix):].  Otherwise, return a copy of the original\nbytearray.
removeprefix($self, prefix, /)\n--\n\nReturn a bytes object with the given prefix string removed if present.\n\nIf the bytes starts with the prefix string, return bytes[len(prefix):].\nOtherwise, return a copy of the original bytes.
removeprefix($self, prefix, /)\n--\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string[len(prefix):].\nOtherwise, return a copy of the original string.
removesuffix
removesuffix($self, suffix, /)\n--\n\nReturn a bytearray with the given suffix string removed if present.\n\nIf the bytearray ends with the suffix string and that suffix is not\nempty, return bytearray[:-len(suffix)].  Otherwise, return a copy of\nthe original bytearray.
removesuffix($self, suffix, /)\n--\n\nReturn a bytes object with the given suffix string removed if present.\n\nIf the bytes ends with the suffix string and that suffix is not empty,\nreturn bytes[:-len(prefix)].  Otherwise, return a copy of the original\nbytes.
removesuffix($self, suffix, /)\n--\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty,\nreturn string[:-len(suffix)]. Otherwise, return a copy of the original\nstring.
rename
rename($module, /, src, dst, *, src_dir_fd=None, dst_dir_fd=None)\n--\n\nRename a file or directory.\n\nIf either src_dir_fd or dst_dir_fd is not None, it should be a file\n  descriptor open to a directory, and the respective path string (src or dst)\n  should be relative; the path will then be relative to that directory.\nsrc_dir_fd and dst_dir_fd, may not be implemented on your platform.\n  If they are unavailable, using them will raise a NotImplementedError.
renames
renames(old, new)\n\n    Super-rename; create directories as necessary and delete any left\n    empty.  Works like rename, except creation of any intermediate\n    directories needed to make the new pathname good is attempted\n    first.  After the rename, directories corresponding to rightmost\n    path segments of the old name will be pruned until either the\n    whole path is consumed or a nonempty directory is found.\n\n    Note: this function can fail with the new directory structure made\n    if you lack permissions needed to unlink the leaf directory or\n    file.\n\n    
repeat
repeat argument cannot be negative
repeat argument too large
repeat count given without format specifier
repeat(object [,times]) -> create an iterator which returns the object\nfor the specified number of times.  If not specified, returns the object\nendlessly.
repeated bytes are too long
repeated string is too long
repl
replace
replace bytes is too long
replace string is too long
replace($module, /, src, dst, *, src_dir_fd=None, dst_dir_fd=None)\n--\n\nRename a file or directory, overwriting the destination.\n\nIf either src_dir_fd or dst_dir_fd is not None, it should be a file\n  descriptor open to a directory, and the respective path string (src or dst)\n  should be relative; the path will then be relative to that directory.\nsrc_dir_fd and dst_dir_fd, may not be implemented on your platform.\n  If they are unavailable, using them will raise a NotImplementedError.
replace($self, /, **changes)\n--\n\nReturn a copy of the code object with new values for the specified fields.
replace($self, old, new, count=-1, /)\n--\n\nReturn a copy with all occurrences of substring old replaced by new.\n\n  count\n    Maximum number of occurrences to replace.\n    -1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are\nreplaced.
replace_errors
repr
repr($module, obj, /)\n--\n\nReturn the canonical string representation of the object.\n\nFor many object types, including most builtins, eval(repr(obj)) == obj.
reprlib
required argument is not a float
required argument is not an integer
required field "annotation" missing from AnnAssign
required field "arg" missing from arg
required field "args" missing from AsyncFunctionDef
required field "args" missing from Call
required field "args" missing from FunctionDef
required field "args" missing from Lambda
required field "args" missing from arguments
required field "argtypes" missing from FunctionType
required field "attr" missing from Attribute
required field "bases" missing from ClassDef
required field "body" missing from AsyncFor
required field "body" missing from AsyncFunctionDef
required field "body" missing from AsyncWith
required field "body" missing from ClassDef
required field "body" missing from ExceptHandler
required field "body" missing from Expression
required field "body" missing from For
required field "body" missing from FunctionDef
required field "body" missing from If
required field "body" missing from IfExp
required field "body" missing from Interactive
required field "body" missing from Lambda
required field "body" missing from Module
required field "body" missing from Try
required field "body" missing from TryStar
required field "body" missing from While
required field "body" missing from With
required field "body" missing from match_case
required field "cases" missing from Match
required field "cls" missing from MatchClass
required field "col_offset" missing from alias
required field "col_offset" missing from arg
required field "col_offset" missing from excepthandler
required field "col_offset" missing from expr
required field "col_offset" missing from keyword
required field "col_offset" missing from pattern
required field "col_offset" missing from stmt
required field "comparators" missing from Compare
required field "context_expr" missing from withitem
required field "conversion" missing from FormattedValue
required field "ctx" missing from Attribute
required field "ctx" missing from List
required field "ctx" missing from Name
required field "ctx" missing from Starred
required field "ctx" missing from Subscript
required field "ctx" missing from Tuple
required field "decorator_list" missing from AsyncFunctionDef
required field "decorator_list" missing from ClassDef
required field "decorator_list" missing from FunctionDef
required field "defaults" missing from arguments
required field "elt" missing from GeneratorExp
required field "elt" missing from ListComp
required field "elt" missing from SetComp
required field "elts" missing from List
required field "elts" missing from Set
required field "elts" missing from Tuple
required field "end_col_offset" missing from pattern
required field "end_lineno" missing from pattern
required field "finalbody" missing from Try
required field "finalbody" missing from TryStar
required field "func" missing from Call
required field "generators" missing from DictComp
required field "generators" missing from GeneratorExp
required field "generators" missing from ListComp
required field "generators" missing from SetComp
required field "handlers" missing from Try
required field "handlers" missing from TryStar
required field "id" missing from Name
required field "ifs" missing from comprehension
required field "is_async" missing from comprehension
required field "items" missing from AsyncWith
required field "items" missing from With
required field "iter" missing from AsyncFor
required field "iter" missing from For
required field "iter" missing from comprehension
required field "key" missing from DictComp
required field "keys" missing from Dict
required field "keys" missing from MatchMapping
required field "keywords" missing from Call
required field "keywords" missing from ClassDef
required field "kw_defaults" missing from arguments
required field "kwd_attrs" missing from MatchClass
required field "kwd_patterns" missing from MatchClass
required field "kwonlyargs" missing from arguments
required field "left" missing from BinOp
required field "left" missing from Compare
required field "lineno" missing from TypeIgnore
required field "lineno" missing from alias
required field "lineno" missing from arg
required field "lineno" missing from excepthandler
required field "lineno" missing from expr
required field "lineno" missing from keyword
required field "lineno" missing from pattern
required field "lineno" missing from stmt
required field "name" missing from AsyncFunctionDef
required field "name" missing from ClassDef
required field "name" missing from FunctionDef
required field "name" missing from alias
required field "names" missing from Global
required field "names" missing from Import
required field "names" missing from ImportFrom
required field "names" missing from Nonlocal
required field "op" missing from AugAssign
required field "op" missing from BinOp
required field "op" missing from BoolOp
required field "op" missing from UnaryOp
required field "operand" missing from UnaryOp
required field "ops" missing from Compare
required field "orelse" missing from AsyncFor
required field "orelse" missing from For
required field "orelse" missing from If
required field "orelse" missing from IfExp
required field "orelse" missing from Try
required field "orelse" missing from TryStar
required field "orelse" missing from While
required field "pattern" missing from match_case
required field "patterns" missing from MatchClass
required field "patterns" missing from MatchMapping
required field "patterns" missing from MatchOr
required field "patterns" missing from MatchSequence
required field "posonlyargs" missing from arguments
required field "returns" missing from FunctionType
required field "right" missing from BinOp
required field "simple" missing from AnnAssign
required field "slice" missing from Subscript
required field "subject" missing from Match
required field "tag" missing from TypeIgnore
required field "target" missing from AnnAssign
required field "target" missing from AsyncFor
required field "target" missing from AugAssign
required field "target" missing from For
required field "target" missing from NamedExpr
required field "target" missing from comprehension
required field "targets" missing from Assign
required field "targets" missing from Delete
required field "test" missing from Assert
required field "test" missing from If
required field "test" missing from IfExp
required field "test" missing from While
required field "type_ignores" missing from Module
required field "value" missing from Assign
required field "value" missing from Attribute
required field "value" missing from AugAssign
required field "value" missing from Await
required field "value" missing from Constant
required field "value" missing from DictComp
required field "value" missing from Expr
required field "value" missing from FormattedValue
required field "value" missing from MatchSingleton
required field "value" missing from MatchValue
required field "value" missing from NamedExpr
required field "value" missing from Starred
required field "value" missing from Subscript
required field "value" missing from YieldFrom
required field "value" missing from keyword
required field "values" missing from BoolOp
required field "values" missing from Dict
required field "values" missing from JoinedStr
requires tuple of arguments
resec
reserved
reset
reset($self, /)\n--\n\n
reset($self, token, /)\n--\n\nReset the context variable.\n\nThe variable is reset to the value it had before the `ContextVar.set()` that\ncreated the token was used.
reset() takes no arguments
reset_peak
reset_peak($module, /)\n--\n\nSet the peak size of memory blocks traced by tracemalloc to the current size.\n\nDo nothing if the tracemalloc module is not tracing memory allocations.
resize
resolution
resolve_name
resource
rest
result
result too long
result_drive
result_path
return
returncode
returns
reverse
reverse($module, fragment, width, /)\n--\n\nReverse the samples in a fragment and returns the modified fragment.
reverse($self, /)\n--\n\nReverse *IN PLACE*.
reverse($self, /)\n--\n\nReverse the order of the items in the array.
reverse($self, /)\n--\n\nReverse the order of the values in B in place.
reversed
reversed(sequence, /)\n--\n\nReturn a reverse iterator over the values of the given sequence.
rewind
rf>h>
rfind
rfufpf
rg_m
rhC<
rhjV
rhscw
right
rindex
risfsgslsesksjs
rjd\rZ
rjust
rjust($self, width, fillchar=' ', /)\n--\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).
rjust($self, width, fillchar=b' ', /)\n--\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character.
rlcompleter
rljP
rmdir
rmdir($module, /, path, *, dir_fd=None)\n--\n\nRemove a directory.\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.
rms($module, fragment, width, /)\n--\n\nReturn the root-mean-square of the fragment, i.e. sqrt(sum(S_i^2)/n).
rm|\fd\tz
rnt\r
rnt\t
ro7b
root
rotate
round
round($module, /, number, ndigits=None)\n--\n\nRound a number to a given precision in decimal digits.\n\nThe return value is an integer if ndigits is omitted or None.  Otherwise\nthe return value has the same type as the number.  ndigits may be negative.
rounded value too large to represent
rounds
rpBMh4RH\Fx
rpartition
rpartition($self, sep, /)\n--\n\nPartition the bytearray into three parts using the given separator.\n\nThis will search for the separator sep in the bytearray, starting at the end.\nIf the separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it as new bytearray\nobjects.\n\nIf the separator is not found, returns a 3-tuple containing two empty bytearray\nobjects and the copy of the original bytearray object.
rpartition($self, sep, /)\n--\n\nPartition the bytes into three parts using the given separator.\n\nThis will search for the separator sep in the bytes, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty bytes\nobjects and the original bytes object.
rpartition($self, sep, /)\n--\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If\nthe separator is found, returns a 3-tuple containing the part before the\nseparator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings\nand the original string.
rqGz
rqs-
rqsqi
rr2<)2
rrks
rshift
rshift($module, a, b, /)\n--\n\nSame as a >> b.
rsplit
rsplit($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the sections in the bytearray, using sep as the delimiter.\n\n  sep\n    The delimiter according which to split the bytearray.\n    None (the default value) means split on ASCII whitespace characters\n    (space, tab, return, newline, formfeed, vertical tab).\n  maxsplit\n    Maximum number of splits to do.\n    -1 (the default value) means no limit.\n\nSplitting is done starting at the end of the bytearray and working to the front.
rsplit($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the sections in the bytes, using sep as the delimiter.\n\n  sep\n    The delimiter according which to split the bytes.\n    None (the default value) means split on ASCII whitespace characters\n    (space, tab, return, newline, formfeed, vertical tab).\n  maxsplit\n    Maximum number of splits to do.\n    -1 (the default value) means no limit.\n\nSplitting is done starting at the end of the bytes and working to the front.
rsplit($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n  sep\n    The separator used to split the string.\n\n    When set to None (the default value), will split on any whitespace\n    character (including \n \r \t \f and spaces) and will discard\n    empty strings from the result.\n  maxsplit\n    Maximum number of splits (starting from the left).\n    -1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.
rssstspNqs
rstrip
rstrip($self, bytes=None, /)\n--\n\nStrip trailing bytes contained in the argument.\n\nIf the argument is omitted or None, strip trailing ASCII whitespace.
rstrip($self, chars=None, /)\n--\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.
rstuvwx
rsucz
rt,3h
ruE`
rucs
run() missing 1 required positional argument
run_command
run_filename
run_globals
run_module
run_name
run_path
run_string
run_string(id, script, shared)\n\nExecute the provided string in the identified interpreter.\n\nSee PyRun_SimpleStrings.
runpy
runpy.py - locating and running Python code using the module namespace\n\nProvides support for locating and running Python scripts using the Python\nmodule namespace instead of the native filesystem.\n\nThis allows Python code to play nicely with non-filesystem based PEP 302\nimporters when locating support scripts as well as when importing modules.\n
runtime already initialized
runtime core not initialized
rwuwi
rw|w}w
ry%l_P
rz}b
r}s|s
s s#s$s&s's(s-s/s0s2s3s5s6s:s;s<s=s@sAsBsCsDsEsFsGsHs
s!s\ns
s"eYZ
s"s$s's(s,s1s2s5s:s;s=sCsMsPsRsVsXs]s^s_s`sfsgsiskslsnsosqswsys|s
s"s9s%s,s8s1sPsMsWs`slsos~s
s&t*t
s&t*t)t.tbt
s(O){OOOOOOOs}
s)wMwC}b}#~7
s,dsb,
s,u+u7u8u
s.zk
s1LA`
s2R"
s2t:tUt?t_tYtAt\titptctjtvt~t
s3Yp]p
s4?U2v^U
s4s/s)s%s>sNsOs
s5t5
s6Ki@
s6t6
s6t\r
s7K"
s9@;a
s:get_clock_info
s:u9u
s:u[w
s<DqEqa9
s<^P)8i
sAJbKbxBLbMbNbWJ8XeYcOB
sCNqp6'
sC}7
sEBF
sG'L9
sH'=GU,I"8Jd
sK%t
sK_P`P
sL>f
sLH9~dL
sLe%sJe\
sLv<w
sM0]_
sMOuseBp
sN]leQ%
sN|\nrL|
sO?;b
sOnns
sOtO
sP*`bh
sPwPj
sQ#d
sQHf
sSRS
sSqSoSrS
sT*gE
sTIT
sTOu
sTu"v
sTuA~,
sTu]u\uZuYu
sYt^
sYyAw
sZ/06OG
sZe-
sZwZ
s[R[89+Tl[
s\0Y
s\ft\vt
s\tecZdd
s\ts\vs\fs\rs
s\v<h\D;L
s\vs0s"s1s3s's2s-s&s#s5s\fs.t,t0t+t
s\vs\rs
s]#7m
s]uF~
s]zj
s_gNBZ
s`Mj
safe_path
salt
samefile
sameopenfile
samestat
sampling rate not > 0
sara
sav\
save_reduce
saved_exc
saved_main
sbag
scandir
scandir($module, /, path=None)\n--\n\nReturn an iterator of DirEntry objects for given path.\n\npath can be specified as either str, bytes, or a path-like object.  If path\nis bytes, the names of yielded DirEntry objects will also be bytes; in\nall other circumstances they will be str.\n\nIf path is None, uses the path='.'.
scandir_it
scanner
scanner($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\n
scanstring
scanstring(string, end, strict=True) -> (string, end)\n\nScan the string s for a JSON string. End is the index of the\ncharacter in s after the quote that started the JSON string.\nUnescapes all valid JSON string escape sequences and raises ValueError\non attempt to decode an invalid string. If strict is False then literal\ncontrol characters are allowed in the string.\n\nReturns a tuple of the decoded string and the index of the character in s\nafter the end quote.
sched
scls
script
script_name
scur
search
search($self, /)\n--\n\n
search($self, /, string, pos=0, endpos=sys.maxsize)\n--\n\nScan through string looking for a match, and return a corresponding match object instance.\n\nReturn None if no position in the string matches.
search() takes no arguments
search_up.<locals>.<genexpr>
second
second argument (exceptions) must be a non-empty sequence
second argument (exceptions) must be a sequence
second argument must be a valid type code
second exception filename
second item from NEWOBJ_EX argument tuple must be a tuple, not %.200s
second item of state must be an integer, not %.200s
second item of the tuple returned by __getnewargs_ex__ must be a dict, not '%.200s'
second item of the tuple returned by __reduce__ must be a tuple
second must be in 0..59
seconds
seconds out of range
seconds, range [0, 61])
secrets
see PyImport_ImportFrozenModuleObject()
seed
seed size of hash algorithm
seed($self, n=None, /)\n--\n\nseed([n]) -> None.\n\nDefaults to use urandom and falls back to a combination\nof the current time and the process identifier.
seed_bits
seek
seek of closed file
seek out of range
seek($self, cookie, whence=os.SEEK_SET, /)\n--\n\nSet the stream position, and return the new stream position.\n\n  cookie\n    Zero or an opaque number returned by tell().\n  whence\n    The relative position to seek from.\n\nFour operations are supported, given by the following argument\ncombinations:\n\n- seek(0, SEEK_SET): Rewind to the start of the stream.\n- seek(cookie, SEEK_SET): Restore a previous position;\n  'cookie' must be a number returned by tell().\n- seek(0, SEEK_END): Fast-forward to the end of the stream.\n- seek(0, SEEK_CUR): Leave the current stream position unchanged.\n\nAny other argument combinations are invalid,\nand may raise exceptions.
seek($self, offset, whence=os.SEEK_SET, /)\n--\n\nChange the stream position to the given byte offset.\n\n  offset\n    The stream position, relative to 'whence'.\n  whence\n    The relative position to seek from.\n\nThe offset is interpreted relative to the position indicated by whence.\nValues for whence are:\n\n* os.SEEK_SET or 0 -- start of stream (the default); offset should be zero or positive\n* os.SEEK_CUR or 1 -- current stream position; offset may be negative\n* os.SEEK_END or 2 -- end of stream; offset is usually negative\n\nReturn the new absolute position.
seek($self, pos, whence=0, /)\n--\n\nChange stream position.\n\nSeek to byte offset pos relative to position indicated by whence:\n     0  Start of stream (the default).  pos should be >= 0;\n     1  Current position - pos may be negative;\n     2  End of stream - pos usually negative.\nReturns the new absolute position.
seek($self, pos, whence=0, /)\n--\n\nChange stream position.\n\nSeek to character offset pos relative to position indicated by whence:\n    0  Start of stream (the default).  pos should be >= 0;\n    1  Current position - pos must be 0;\n    2  End of stream - pos must be 0.\nReturns the new absolute position.
seek($self, pos, whence=0, /)\n--\n\nMove to new file position and return the file position.\n\nArgument offset is a byte count.  Optional argument whence defaults to\nSEEK_SET or 0 (offset from start of file, offset should be >= 0); other values\nare SEEK_CUR or 1 (move relative to current position, positive or negative),\nand SEEK_END or 2 (move relative to end of file, usually negative, although\nmany platforms allow seeking beyond the end of a file).\n\nNote that not all file objects are seekable.
seek($self, target, whence=0, /)\n--\n\n
seekable
seekable($self, /)\n--\n\n
seekable($self, /)\n--\n\nReturn whether object supports random access.\n\nIf False, seek(), tell() and truncate() will raise OSError.\nThis method may need to do a test seek().
seekable($self, /)\n--\n\nReturns True if the IO object can be seeked.
seekable($self, /)\n--\n\nTrue if file supports random-access.
seen
select
selectors
self
self_module
send
send(arg) -> send 'arg' into coroutine,\nreturn next iterated value or raise StopIteration.
send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.
send(arg) -> send 'arg' into the wrapped iterator,\nreturn next yielded value or raise StopIteration.
sep must be ASCII.
sep must be None or a string, not %.200s
sep must be length 1.
sep must be str or bytes.
sepIndex
separator: expected str instance, %.80s found
seps
sequence
sequence changed size during iteration
sequence index must be integer, not '%.200s'
sequence item %zd: expected a bytes-like object, %.80s found
sequence item %zd: expected str instance, %.80s found
sequence type expected, got '%s'
sequence.index(x): x not in sequence
sere
serial
serializing a bytes object larger than 4 GiB requires pickle protocol 4 or higher
serializing a string larger than 4 GiB requires pickle protocol 4 or higher
service_pack
service_pack_major
service_pack_minor
set changed size during iteration
set comprehension
set display
set($self, value, /)\n--\n\nCall to set a new value for the context variable in the current context.\n\nThe required value argument is the new value for the context variable.\n\nReturns a Token object that can be used to restore the variable to its previous\nvalue via the `ContextVar.reset()` method.
set() -> new empty set object\nset(iterable) -> new set object\n\nBuild an unordered collection of unique elements.
set_asyncgen_hooks
set_asyncgen_hooks(* [, firstiter] [, finalizer])\n\nSet a finalizer for async generators objects.
set_coroutine_origin_tracking_depth
set_coroutine_origin_tracking_depth($module, /, depth)\n--\n\nEnable or disable origin tracking for coroutine objects in this thread.\n\nCoroutine objects will track 'depth' frames of traceback information\nabout where they came from, available in their cr_origin attribute.\n\nSet a depth of 0 to disable.
set_data
set_debug
set_debug($module, flags, /)\n--\n\nSet the garbage collection debugging flags.\n\n  flags\n    An integer that can have the following bits turned on:\n      DEBUG_STATS - Print statistics during collection.\n      DEBUG_COLLECTABLE - Print collectable objects found.\n      DEBUG_UNCOLLECTABLE - Print unreachable but uncollectable objects\n        found.\n      DEBUG_SAVEALL - Save objects to gc.garbage rather than freeing them.\n      DEBUG_LEAK - Debug leaking programs (everything but STATS).\n\nDebugging information is written to sys.stderr.
set_handle_inheritable
set_handle_inheritable($module, handle, inheritable, /)\n--\n\nSet the inheritable flag of the specified handle.
set_inheritable
set_inheritable($module, fd, inheritable, /)\n--\n\nSet the inheritable flag of the specified file descriptor.
set_int_max_str_digits
set_int_max_str_digits($module, /, maxdigits)\n--\n\nSet the maximum string digits limit for non-binary int<->str conversions.
set_iterator
set_loader
set_loader.<locals>.set_loader_wrapper
set_loader_wrapper
set_package
set_package.<locals>.set_package_wrapper
set_package_wrapper
set_threshold
set_threshold(threshold0, [threshold1, threshold2]) -> None\n\nSets the collection thresholds.  Setting threshold0 to zero disables\ncollection.\n
set_wakeup_fd
set_wakeup_fd only works in main thread of the main interpreter
set_wakeup_fd(fd, *, warn_on_full_buffer=True) -> fd\n\nSets the fd to be written to (with the signal number) when a signal\ncomes in.  A library can use this to wakeup select or poll.\nThe previous fd or -1 is returned.\n\nThe fd must be non-blocking.
setattr
setattr($module, obj, name, value, /)\n--\n\nSets the named attribute on the given object to the specified value.\n\nsetattr(x, 'y', v) is equivalent to ``x.y = v``
setcomp
setcopyright
setdefault
setdefault($self, /, key, default=None)\n--\n\nInsert key with a value of default if key is not in the dictionary.\n\nReturn the value for key if key is in the dictionary, else default.
setdefault($self, key, default=None, /)\n--\n\nInsert key with a value of default if key is not in the dictionary.\n\nReturn the value for key if key is in the dictionary, else default.
sethelper
setitem
setitem($module, a, b, c, /)\n--\n\nSame as a[b] = c.
setlocale
setlocale($module, category, locale=<unrepresentable>, /)\n--\n\nActivates/queries locale processing.
setmode
setmode($module, fd, mode, /)\n--\n\nSet the line-end translation mode for the file descriptor fd.\n\nTo set it to text mode, flags should be os.O_TEXT; for binary, it\nshould be os.O_BINARY.\n\nReturn value is the previous mode.
setopencodehook
setprofile
setprofile(function)\n\nSet the profiling function.  It will be called on each function call\nand return.  See the profiler chapter in the library manual.
setquit
setrecursionlimit
setrecursionlimit($module, limit, /)\n--\n\nSet the maximum depth of the Python interpreter stack to n.\n\nThis limit prevents infinite recursion from causing an overflow of the C\nstack and crashing Python.  The highest possible limit is platform-\ndependent.
setstate
setstate($self, state, /)\n--\n\n
setstate($self, state, /)\n--\n\nsetstate(state) -> None.  Restores generator state.
setstate(state)
setswitchinterval
setswitchinterval($module, interval, /)\n--\n\nSet the ideal thread switching delay inside the Python interpreter.\n\nThe actual frequency of switching threads can be lower if the\ninterpreter executes long sequences of uninterruptible code\n(this is implementation-specific and workload-dependent).\n\nThe parameter must represent the desired switching delay in seconds\nA typical value is 0.005 (5 milliseconds).
setter
settrace
settrace(function)\n\nSet the global debug tracing function.  It will be called on each\nfunction call.  See the debugger chapter in the library manual.
setvbuf
sf&K
sha1
sha1($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new SHA1 hash object; optionally initialized with a string.
sha224
sha224($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new SHA-224 hash object; optionally initialized with a string.
sha256
sha256($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new SHA-256 hash object; optionally initialized with a string.
sha384
sha384($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new SHA-384 hash object; optionally initialized with a string.
sha3_224
sha3_224([data], *, usedforsecurity=True) -> SHA3 object\n\nReturn a new SHA3 hash object with a hashbit length of 28 bytes.
sha3_256
sha3_256([data], *, usedforsecurity=True) -> SHA3 object\n\nReturn a new SHA3 hash object with a hashbit length of 32 bytes.
sha3_384
sha3_384([data], *, usedforsecurity=True) -> SHA3 object\n\nReturn a new SHA3 hash object with a hashbit length of 48 bytes.
sha3_512
sha3_512([data], *, usedforsecurity=True) -> SHA3 object\n\nReturn a new SHA3 hash object with a hashbit length of 64 bytes.
sha512
sha512($module, /, string=b'', *, usedforsecurity=True)\n--\n\nReturn a new SHA-512 hash object; optionally initialized with a string.
shake_128
shake_128([data], *, usedforsecurity=True) -> SHAKE object\n\nReturn a new SHAKE hash object.
shake_256
shake_256([data], *, usedforsecurity=True) -> SHAKE object\n\nReturn a new SHAKE hash object.
shape
shape must be a list or a tuple
shared
shell
shelve
shift_jis
shift_jis_2004
shift_jisx0213
shlex
short
short format requires %d <= number <= %d
show_cmd
show_ref_count
shutil
siCr
signal
signal handler must be signal.SIG_IGN, signal.SIG_DFL, or a callable object
signal number out of range
signal only works in main thread of the main interpreter
signal($module, signalnum, handler, /)\n--\n\nSet the action for the given signal.\n\nThe action can be SIG_DFL, SIG_IGN, or a callable Python object.\nThe previous action is returned.  See getsignal() for possible return values.\n\n*** IMPORTANT NOTICE ***\nA signal handler function is called with two arguments:\nthe first is the signal number, the second is the interrupted stack frame.
signed
signed char is greater than maximum
signed char is less than minimum
signed short integer is greater than maximum
signed short integer is less than minimum
simple
simplefilter
sin($module, x, /)\n--\n\nReturn the sine of x (measured in radians).
sin($module, z, /)\n--\n\nReturn the sine of z.
single
single empty field record must be quoted
sinh
sinh($module, x, /)\n--\n\nReturn the hyperbolic sine of x.
sinh($module, z, /)\n--\n\nReturn the hyperbolic sine of z.
siphash13
sitJ
site
site-packages
site_import
site_prefix
sitecustomize
sitedir
sitedircase
sitepackages
sixth element of the tuple returned by __reduce__ must be a function, not %s
size
size in bytes of the C type used to represent a digit
size must be 0 or a positive value
size must be positive
size not valid: %zd bytes
size of a digit in bits
size($self, /)\n--\n\nReturn the size (in bytes) of this object.
sizehint
sizeof_digit
sjAD
sk5I@
sk:WaitNamedPipe
skip_source_first_line
skipinitialspace
skipkeys
skkKkkK:CreateFile
skkkkkkK:CreateNamedPipe
sk|U
sleep
sleep length must be non-negative
sleep(seconds)\n\nDelay execution for a given number of seconds.  The argument may be\na floating point number for subsecond precision.
slice
slice indices must be integers or None or have an __index__ method
slice indices must be integers or have an __index__ method
slice step cannot be zero
slice(%R, %R, %R)
slice(stop)\nslice(start, stop[, step])\n\nCreate a slice object.  This is used for extended slicing (e.g. a[0:10:2]).
slot state is not a dictionary
sltlYMx
smY\M`
small string optimization cutoff
smsl
smtpd
smtplib
sndhdr
snqg
socket
socketserver
sort
sort($self, /, *, key=None, reverse=False)\n--\n\nSort the list in ascending order and return None.\n\nThe sort is in-place (i.e. the list itself is modified) and stable (i.e. the\norder of two equal elements is maintained).\n\nIf a key function is given, apply it once to each list item and sort them,\nascending or descending, according to their function values.\n\nThe reverse flag can be set to sort in descending order.
sort_keys
sorted
sorted($module, iterable, /, *, key=None, reverse=False)\n--\n\nReturn a new list containing all items from the iterable in ascending order.\n\nA custom key function can be supplied to customize the sort order, and the\nreverse flag can be set to request the result in descending order.
source
source code cannot contain null bytes
source code string cannot contain null bytes
source not available through get_data()
source, destination, or count out of range
source_bytes
source_bytes_readline
source_from_cache
source_hash
source_hash($module, /, key, source)\n--\n\n
source_mtime
source_path
source_size
source_to_code
spamdict
spamlist
span
span($self, group=0, /)\n--\n\nFor match object m, return the 2-tuple (m.start(group), m.end(group)).
spath
spawnl
spawnl(mode, file, *args) -> integer\n\nExecute file with arguments from args in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnle
spawnle(mode, file, *args, env) -> integer\n\nExecute file with arguments from args in a subprocess with the\nsupplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnlp
spawnlp(mode, file, *args) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnlpe
spawnlpe(mode, file, *args, env) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnv
spawnv($module, mode, path, argv, /)\n--\n\nExecute the program specified by path in a new process.\n\n  mode\n    Mode of process creation.\n  path\n    Path of executable file.\n  argv\n    Tuple or list of strings.
spawnv() arg 2 cannot be empty
spawnv() arg 2 first element cannot be empty
spawnv() arg 2 must be a tuple or list
spawnv() arg 2 must contain only strings
spawnv(mode, file, args) -> integer\n\nExecute file with arguments from args in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnve
spawnve($module, mode, path, argv, env, /)\n--\n\nExecute the program specified by path in a new process.\n\n  mode\n    Mode of process creation.\n  path\n    Path of executable file.\n  argv\n    Tuple or list of strings.\n  env\n    Dictionary of strings mapping to strings.
spawnve() arg 2 cannot be empty
spawnve() arg 2 must be a tuple or list
spawnve() arg 3 must be a mapping object
spawnve(mode, file, args, env) -> integer\n\nExecute file with arguments from args in a subprocess with the\nspecified environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnvp
spawnvp(mode, file, args) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spawnvpe
spawnvpe(mode, file, args, env) -> integer\n\nExecute file (which is looked for along $PATH) with arguments from\nargs in a subprocess with the supplied environment.\nIf mode == P_NOWAIT return the pid of the process.\nIf mode == P_WAIT return the process's exit code if it exits normally;\notherwise return -SIG, where SIG is the signal that killed it. 
spec
spec missing loader
spec.name must be a string
spec_from_file_location
spec_from_loader
split
split the argument as a field name
split($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the sections in the bytearray, using sep as the delimiter.\n\n  sep\n    The delimiter according which to split the bytearray.\n    None (the default value) means split on ASCII whitespace characters\n    (space, tab, return, newline, formfeed, vertical tab).\n  maxsplit\n    Maximum number of splits to do.\n    -1 (the default value) means no limit.
split($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the sections in the bytes, using sep as the delimiter.\n\n  sep\n    The delimiter according which to split the bytes.\n    None (the default value) means split on ASCII whitespace characters\n    (space, tab, return, newline, formfeed, vertical tab).\n  maxsplit\n    Maximum number of splits to do.\n    -1 (the default value) means no limit.
split($self, /, sep=None, maxsplit=-1)\n--\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n  sep\n    The separator used to split the string.\n\n    When set to None (the default value), will split on any whitespace\n    character (including \n \r \t \f and spaces) and will discard\n    empty strings from the result.\n  maxsplit\n    Maximum number of splits (starting from the left).\n    -1 (the default value) means no limit.\n\nNote, str.split() is mainly useful for data that has been intentionally\ndelimited.  With natural text that includes punctuation, consider using\nthe regular expression module.
split($self, /, string, maxsplit=0)\n--\n\nSplit string by the occurrences of pattern.
split_paths
splitdrive
splitext
splitlines
splitlines($self, /, keepends=False)\n--\n\nReturn a list of the lines in the bytearray, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.
splitlines($self, /, keepends=False)\n--\n\nReturn a list of the lines in the bytes, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.
splitlines($self, /, keepends=False)\n--\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and\ntrue.
splitr/
spwd
sqlite3
sqrt
sqrt($module, x, /)\n--\n\nReturn the square root of x.
sqrt($module, z, /)\n--\n\nReturn the square root of z.
sqx6#KX
srWY?
src_dir_fd
src_dir_fd and dst_dir_fd
sre_compile
sre_constants
sre_parse
stIZ
st_atime
st_atime_ns
st_ctime
st_ctime_ns
st_dev
st_file_attributes
st_gid
st_ino
st_mode
st_mtime
st_mtime_ns
st_nlink
st_reparse_tag
st_size
st_uid
stack is too deep to analyze
stack overflow
stack to deep to analyze
stack_effect
stack_effect($module, opcode, oparg=None, /, *, jump=None)\n--\n\nCompute the stack effect of the opcode.
stack_effect: jump must be False, True or None
stack_effect: opcode does not permit oparg but oparg was specified
stack_effect: opcode requires oparg but oparg was not specified
stack_size
stack_size([size]) -> size\n\nReturn the thread stack size used when creating new threads.  The\noptional size argument specifies the stack size (in bytes) to be used\nfor subsequently created threads, and must be 0 (use platform or\nconfigured default) or a positive integer value of at least 32,768 (32k).\nIf changing the thread stack size is unsupported, a ThreadError\nexception is raised.  If the specified size is invalid, a ValueError\nexception is raised, and the stack size is unmodified.  32k bytes\n currently the minimum supported stack size value to guarantee\nsufficient stack space for the interpreter itself.\n\nNote that some platforms may have particular restrictions on values for\nthe stack size, such as requiring a minimum stack size larger than 32 KiB or\nrequiring allocation in multiples of the system memory page size\n- platform documentation should be referred to for more information\n(4 KiB pages are common; using multiples of 4096 for the stack size is\nthe suggested approach in the absence of more specific information).
stacklevel
starmap
starmap(function, iterable, /)\n--\n\nReturn an iterator whose values are returned from the function evaluated with an argument tuple taken from the given sequence.
starred
starred assignment target must be in a list or tuple
start
start($module, nframe=1, /)\n--\n\nStart tracing Python memory allocations.\n\nAlso set the maximum number of frames stored in the traceback of a\ntrace to nframe.
start($self, group=0, /)\n--\n\nReturn index of the start of the substring matched by group.
start_abs
start_drive
start_list
start_new
start_new_thread
start_new_thread(function, args[, kwargs])\n(start_new() is an obsolete synonym)\n\nStart a new thread and return its identifier.  The thread will call the\nfunction with positional arguments from the tuple args and keyword arguments\ntaken from the optional dictionary kwargs.  The thread exits when the\nfunction returns; the return value is ignored.  The thread will also exit\nwhen the function raises an unhandled exception; a stack trace will be\nprinted unless the exception is SystemExit.\n
start_offset
start_rest
startfile
startfile not available on this platform
startfile($module, /, filepath, operation=<unrepresentable>,\n          arguments=<unrepresentable>, cwd=None, show_cmd=1)\n--\n\nStart a file with its associated application.\n\nWhen "operation" is not specified or "open", this acts like\ndouble-clicking the file in Explorer, or giving the file name as an\nargument to the DOS "start" command: the file is opened with whatever\napplication (if any) its extension is associated.\nWhen another "operation" is given, it specifies what should be done with\nthe file.  A typical operation is "print".\n\n"arguments" is passed to the application, but should be omitted if the\nfile is a document.\n\n"cwd" is the working directory for the operation. If "filepath" is\nrelative, it will be resolved against this directory. This argument\nshould usually be an absolute path.\n\n"show_cmd" can be used to override the recommended visibility option.\nSee the Windows ShellExecute documentation for values.\n\nstartfile returns as soon as the associated application is launched.\nThere is no option to wait for the application to close, and no way\nto retrieve the application's exit status.\n\nThe filepath is relative to the current directory.  If you want to use\nan absolute path, make sure the first character is not a slash ("/");\nthe underlying Win32 ShellExecute function doesn't work if it is.
startswith
startswith first arg must be str or a tuple of str, not %.100s
stat
stat($module, /, path, *, dir_fd=None, follow_symlinks=True)\n--\n\nPerform a stat system call on the given path.\n\n  path\n    Path to be examined; can be string, bytes, a path-like object or\n    open-file-descriptor int.\n  dir_fd\n    If not None, it should be a file descriptor open to a directory,\n    and path should be a relative string; path will then be relative to\n    that directory.\n  follow_symlinks\n    If False, and the last element of the path is a symbolic link,\n    stat will examine the symbolic link itself instead of the file\n    the link points to.\n\ndir_fd and follow_symlinks may not be implemented\n  on your platform.  If they are unavailable, using them will raise a\n  NotImplementedError.\n\nIt's an error to use dir_fd or follow_symlinks when specifying path as\n  an open file descriptor.
stat($self, /, *, follow_symlinks=True)\n--\n\nReturn stat_result object for the entry; cached per entry.
stat_info
stat_result
stat_result: Result from stat, fstat, or lstat.\n\nThis object may be accessed either as a tuple of\n  (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime)\nor via the attributes st_mode, st_ino, st_dev, st_nlink, st_uid, and so on.\n\nPosix/windows: If your platform supports st_blksize, st_blocks, st_rdev,\nor st_flags, they are available as attributes only.\n\nSee os.stat for more information.
state
state argument must be a tuple
state is not a dictionary
state is not a tuple
state must be a tuple or None
state vector is the wrong size
state vector must be a tuple
staticmeth
staticmeth(*args, **kw)
staticmethod
staticmethod(function) -> method\n\nConvert a function to be a static method.\n\nA static method does not receive an implicit first argument.\nTo declare a static method, use this idiom:\n\n     class C:\n         @staticmethod\n         def f(arg1, arg2, argN):\n             ...\n\nIt can be called either on the class (e.g. C.f()) or on an instance\n(e.g. C().f()). Both the class and the instance are ignored, and\nneither is passed implicitly as the first argument to the method.\n\nStatic methods in Python are similar to those found in Java or C++.\nFor a more advanced concept, see the classmethod builtin.
statistics
status
statvfs
statvfs_result
statvfs_result: Result from statvfs or fstatvfs.\n\nThis object may be accessed either as a tuple of\n  (bsize, frsize, blocks, bfree, bavail, files, ffree, favail, flag, namemax),\nor via the attributes f_bsize, f_frsize, f_blocks, f_bfree, and so on.\n\nSee os.statvfs for more information.
stderr
stderrprinter
stdin
stdio_encoding
stdio_errors
stdlib_dir
stdlib_module_names
stdout
step
stmt
stmt = FunctionDef(identifier name, arguments args, stmt* body, expr* decorator_list, expr? returns, string? type_comment)\n     | AsyncFunctionDef(identifier name, arguments args, stmt* body, expr* decorator_list, expr? returns, string? type_comment)\n     | ClassDef(identifier name, expr* bases, keyword* keywords, stmt* body, expr* decorator_list)\n     | Return(expr? value)\n     | Delete(expr* targets)\n     | Assign(expr* targets, expr value, string? type_comment)\n     | AugAssign(expr target, operator op, expr value)\n     | AnnAssign(expr target, expr annotation, expr? value, int simple)\n     | For(expr target, expr iter, stmt* body, stmt* orelse, string? type_comment)\n     | AsyncFor(expr target, expr iter, stmt* body, stmt* orelse, string? type_comment)\n     | While(expr test, stmt* body, stmt* orelse)\n     | If(expr test, stmt* body, stmt* orelse)\n     | With(withitem* items, stmt* body, string? type_comment)\n     | AsyncWith(withitem* items, stmt* body, string? type_comment)\n     | Match(expr subject, match_case* cases)\n     | Raise(expr? exc, expr? cause)\n     | Try(stmt* body, excepthandler* handlers, stmt* orelse, stmt* finalbody)\n     | TryStar(stmt* body, excepthandler* handlers, stmt* orelse, stmt* finalbody)\n     | Assert(expr test, expr? msg)\n     | Import(alias* names)\n     | ImportFrom(identifier? module, alias* names, int? level)\n     | Global(identifier* names)\n     | Nonlocal(identifier* names)\n     | Expr(expr value)\n     | Pass\n     | Break\n     | Continue
stop
stop($module, /)\n--\n\nStop tracing Python memory allocations.\n\nAlso clear traces of memory blocks allocated by Python.
str -> Construct a date from a string in ISO 8601 format.
str expected, not %s
str file path expected under Windows, got %R
str or None
str() on a bytearray instance
str() on a bytes instance
str() or repr() returned '%.100s'
str(object='') -> str\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\n\nCreate a new string object from the given object. If encoding or\nerrors is specified, then the object must expose a data buffer\nthat will be decoded using the given encoding and error handler.\nOtherwise, returns the result of object.__str__() (if defined)\nor repr(object).\nencoding defaults to sys.getdefaultencoding().\nerrors defaults to 'strict'.
str, bytes or bytearray
str_ascii_iterator
str_digits_check_threshold
str_iterator
strategy
strchr
strcmp
strcoll
strcoll($module, os1, os2, /)\n--\n\nCompares two strings according to the locale.
strcspn
stream
stream end
stream error
stream function returned a non-bytes object (%.100s)
streamreader
streamwriter
strerror
strerror($module, code, /)\n--\n\nTranslate an error code to a message string.
strerror() argument out of range
strftime
strftime() requires year in [1; 9999]
strftime(format[, tuple]) -> string\n\nConvert a time tuple to a string according to a format specification.\nSee the library reference manual for formatting codes. When the time tuple\nis not present, current time as returned by localtime() is used.\n\nCommonly used format codes:\n\n%Y  Year with century as a decimal number.\n%m  Month as a decimal number [01,12].\n%d  Day of the month as a decimal number [01,31].\n%H  Hour (24-hour clock) as a decimal number [00,23].\n%M  Minute as a decimal number [00,59].\n%S  Second as a decimal number [00,61].\n%z  Time zone offset from UTC.\n%a  Locale's abbreviated weekday name.\n%A  Locale's full weekday name.\n%b  Locale's abbreviated month name.\n%B  Locale's full month name.\n%c  Locale's appropriate date and time representation.\n%I  Hour (12-hour clock) as a decimal number [01,12].\n%p  Locale's equivalent of either AM or PM.\n\nOther codes may be available on your platform.  See documentation for\nthe C library strftime function.\n
strict
strict_errors
strict_mode
strides
string
string -> datetime from a string in most ISO 8601 formats
string -> time from a string in ISO 8601 format
string argument expected, got '%s'
string argument should contain only ASCII characters
string argument without an encoding
string helper module
string index out of range
string indices must be integers, not '%.200s'
string is longer than the buffer
string is too large
string is too large to encode
string is too long
string is too long to escape
string is too long to generate repr
string keys in translate table must be of length 1
string length not a multiple of item size
string or bytes
string to parse is too long
string too large in _PyUnicode_FormatLong
string too long for Python bytes
string too long for Python string
string, bytes or AST
string, bytes or code
string, bytes or os.PathLike
string, bytes, os.PathLike or None
string, bytes, os.PathLike or integer
string, bytes, os.PathLike, integer or None
string, format -> new datetime parsed from a string (like time.strptime()).
stringprep
strings are too large to concat
strip
strip($self, bytes=None, /)\n--\n\nStrip leading and trailing bytes contained in the argument.\n\nIf the argument is omitted or None, strip leading and trailing ASCII whitespace.
strip($self, chars=None, /)\n--\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.
stripped_path
strncmp
strncpy
strptime
strptime(string, format) -> struct_time\n\nParse a string to a time tuple according to a format specification.\nSee the library reference manual for formatting codes (same as\nstrftime()).\n\nCommonly used format codes:\n\n%Y  Year with century as a decimal number.\n%m  Month as a decimal number [01,12].\n%d  Day of the month as a decimal number [01,31].\n%H  Hour (24-hour clock) as a decimal number [00,23].\n%M  Minute as a decimal number [00,59].\n%S  Second as a decimal number [00,61].\n%z  Time zone offset from UTC.\n%a  Locale's abbreviated weekday name.\n%A  Locale's full weekday name.\n%b  Locale's abbreviated month name.\n%B  Locale's full month name.\n%c  Locale's appropriate date and time representation.\n%I  Hour (12-hour clock) as a decimal number [01,12].\n%p  Locale's equivalent of either AM or PM.\n\nOther codes may be available on your platform.  See documentation for\nthe C library strftime function.\n
strrchr
strsignal
strsignal($module, signalnum, /)\n--\n\nReturn the system description of the given signal.\n\nReturns the description of signal *signalnum*, such as "Interrupt"\nfor :const:`SIGINT`. Returns :const:`None` if *signalnum* has no\ndescription. Raises :exc:`ValueError` if *signalnum* is invalid.
strtol
strtoul
struct
struct format string
struct size in bytes
struct.error
struct_time
structseq
strxfrm
strxfrm($module, string, /)\n--\n\nReturn a string that can be used as a key for locale-aware comparisons.
sub($module, a, b, /)\n--\n\nSame as a - b.
sub($self, /, repl, string, count=0)\n--\n\nReturn the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl.
sub-views are not implemented
sub_key
subcalls
subclass
subgroup
subject
submodule_search_locations
submodule_search_locations={}
subn
subn($self, /, repl, string, count=0)\n--\n\nReturn the tuple (new_string, number_of_subs_made) found by replacing the leftmost non-overlapping occurrences of pattern with the replacement repl.
suboffsets
subprocess
subprocess not supported for isolated subinterpreters
subscript
subsection not found
substring not found
sud\t
suffix
suffixes
suite_mask
sum($module, iterable, /, start=0)\n--\n\nReturn the sum of a 'start' value (default: 0) plus an iterable of numbers\n\nWhen the iterable is empty, return the start value.\nThis function is intended specifically for use with numeric values and may\nreject non-numeric types.
sum() can't sum bytearray [use b''.join(seq) instead]
sum() can't sum bytes [use b''.join(seq) instead]
sum() can't sum strings [use ''.join(seq) instead]
sunau
super
super()
super() -> same as super(__class__, <first argument>)\nsuper(type) -> unbound super object\nsuper(type, obj) -> bound super object; requires isinstance(obj, type)\nsuper(type, type2) -> bound super object; requires issubclass(type2, type)\nTypical use to call a cooperative superclass method:\nclass C(B):\n    def meth(self, arg):\n        super().meth(arg)\nThis works for class methods too:\nclass C(B):\n    @classmethod\n    def cmeth(cls, arg):\n        super().cmeth(arg)\n
super() argument 1 must be a type, not %.200s
super(): __class__ cell not found
super(): __class__ is not a type (%s)
super(): arg[0] deleted
super(): bad __class__ cell
super(): empty __class__ cell
super(): no arguments
super(): no current frame
super(type, obj): obj must be an instance or subtype of type
supported_loaders
supports_bytes_environ
supports_dir_fd
supports_effective_ids
supports_fd
supports_follow_symlinks
supports_unicode_filenames
surrogateescape
surrogatepass
surrogates not allowed
svtv
swapcase
swapcase($self, /)\n--\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.
switch interval must be strictly positive
sxtx
sy#nns
symbols
symlink
symlink($module, /, src, dst, target_is_directory=False, *, dir_fd=None)\n--\n\nCreate a symbolic link pointing to src named dst.\n\ntarget_is_directory is required on Windows if the target is to be\n  interpreted as a directory.  (On Windows, symlink requires\n  Windows 6.0 or greater, and raises a NotImplementedError otherwise.)\n  target_is_directory is ignored on non-Windows platforms.\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.
symmetric_difference
symmetric_difference_update
symtable
symtable analysis recursion depth mismatch (before=%d, after=%d)
symtable entry
symtable($module, source, filename, startstr, /)\n--\n\nReturn symbol and scope dictionaries used internally by compiler.
symtable() arg 3 must be 'exec' or 'eval' or 'single'
sys._current_exceptions
sys._current_frames
sys._getframe
sys.addaudithook
sys.excepthook
sys.excepthook is missing\n
sys.flags
sys.flags\n\nFlags provided through command line arguments or environment vars.
sys.float_info
sys.float_info\n\nA named tuple holding information about the float type. It contains low level\ninformation about the precision and internal representation. Please study\nyour system's :file:`float.h` for more information.
sys.getwindowsversion
sys.hash_info
sys.implementation.cache_tag is None
sys.int_info
sys.int_info\n\nA named tuple that holds information about Python's\ninternal representation of integers.  The attributes are read only.
sys.meta_path is None, Python is likely shutting down
sys.meta_path is empty
sys.path = [
sys.path_hooks is empty
sys.set_asyncgen_hook_finalizer
sys.set_asyncgen_hook_firstiter
sys.setprofile
sys.settrace
sys.stderr is None
sys.thread_info
sys.thread_info\n\nA named tuple holding information about the thread implementation.
sys.unraisablehook
sys.unraisablehook argument type must be UnraisableHookArgs
sys.version_info
sys.version_info\n\nVersion information as a named tuple.
sys_audit
sys_module
sys_version
sysconfig
syslog
sysname
system
system time
system time of children
system($module, /, command)\n--\n\nExecute the command in a subshell.
system_site
t t!t#t$t't)t+t-t/t1t2t7t8t9t:t;t=t>t?t@tBtCtDtEtFtGtHtItJtKtLtMt
t!t-t1t$t#t
t!u[u_u
t$t&t(t)t*t+t,t-t.t/t0t1t9t@tCtDtFtGtKtMtQtRtWt]tbtftgthtktmtntqtrt
t$t1t9tSt@tCtMtRt]tqt
t&t(t%u&ukuju
t&vaw
t)t t2t
t*t[t&t%t(t0t.t,t
t.uGuHu
t/uoulu
t/v2Z%
t0u0v0
t1u1
t2JT.
t2u2
t3u3v3
t4*V-
t6ZeXeYe@5_
t7J7R
t99Lv
t:wVyZy
t;0K~>P
t=u=J
t>88/RV0y5
t?u@u>u
t@qG
tAN[3nsP
tAt\tWtUtYtwtmt~t
tBuB
tD#3-:y
tDuqr
tE%3
tFvBvLv
tGDK
tGuGn
tHLf
tHuH
tK0T2s7{
tK5:Z5'MPA?H}<Y
tK=4j
tLcu
tP/Re\
tQ:R
tQrQ
tTjc
tU3F.>
tUs]p]m
tV#5p24DiD-@T^
tW]p
tY&hNMia
t[Iz
t\fu\ru4v8v:v
t\iW
t\tjI&
t\vt\ft\rt
t]Tv4
t_args
t_result
tab: complete
table
tabnanny
tabsize
tagname
tags/v3.11.6
tail
tail_module
tail_name
take_gil
takewhile
takewhile(predicate, iterable, /)\n--\n\nReturn successive entries from an iterable as long as the predicate evaluates to true for each entry.
tan($module, x, /)\n--\n\nReturn the tangent of x (measured in radians).
tan($module, z, /)\n--\n\nReturn the tangent of z.
tanh
tanh($module, x, /)\n--\n\nReturn the hyperbolic tangent of x.
tanh($module, z, /)\n--\n\nReturn the hyperbolic tangent of z.
tarasa)
tarfile
target
target_is_directory
target_user
targets
tb_frame
tb_lasti
tb_lineno
tb_next
tbuTsbD
tbvev&y*y,y+y
tcI,\
tcPM
tducu
tee($module, iterable, n=2, /)\n--\n\nReturns a tuple of n independent iterators.
teedataobject
teedataobject(iterable, values, next, /)\n--\n\nData container common to multiple tee objects.
tell
tell($self, /)\n--\n\nCurrent file position, an integer.
tell($self, /)\n--\n\nCurrent file position.\n\nCan raise OSError for non seekable files.
tell($self, /)\n--\n\nReturn current stream position.
tell($self, /)\n--\n\nReturn the stream position as an opaque number.\n\nThe return value of tell() can be given as input to seek(), to restore a\nprevious stream position.
tell($self, /)\n--\n\nTell the current file position.
telling position disabled by next() call
telnetlib
temp_module
tempfile
template
terminal_size
termios
test
test.support.interpreters
testc
text
text_encoding
text_encoding($module, encoding, stacklevel=2, /)\n--\n\nA helper function to choose the text encoding.\n\nWhen encoding is not None, this function returns it.\nOtherwise, this function returns the default text encoding\n(i.e. "locale" or "utf-8" depends on UTF-8 mode).\n\nThis function emits an EncodingWarning if encoding is None and\nsys.flags.warn_default_encoding is true.\n\nThis can be used in APIs with an encoding=None parameter.\nHowever, please consider using encoding="utf-8" for new APIs.
textwrap
tg#2u
tgVQ
tgsg
tgvg
the 'recv' end of the channel
the 'send' end of the channel
the BufferedRWPair object is being garbage-collected
the STRING opcode argument must be quoted
the class invoking super()
the debug_override parameter is deprecated; use 'optimization' instead
the denominator of a rational number in lowest terms
the entry's base filename, relative to scandir() "path" argument
the entry's full path name; equivalent to os.path.join(scandir_path, entry.name)
the environment variable is longer than %u characters
the first argument must be callable
the first two maketrans arguments must have equal length
the function (or other callable) implementing a method
the function must be called with the GIL held, but the GIL is released (the current Python thread state is NULL)
the imaginary part of a complex number
the instance invoking super(); may be None
the instance to which a method is bound
the load_module() method is deprecated and slated for removal in Python 3.12; use exec_module() instead
the number of frames must be in range [1; %lu]
the numerator of a rational number in lowest terms
the object's class
the real part of a complex number
the size, in bytes, of one array item
the tracemalloc module has been unloaded
the type of the instance invoking super(); may be None
the typecode character used to create the array
third argument must be a valid machine format code.
third item from NEWOBJ_EX argument tuple must be a dict, not %.200s
third item of state must be an integer, got %.200s
third item of state should be a dict, got a %.200s
this
this __dict__ descriptor does not support '%.200s' objects
this compiler does not handle FunctionTypes
this function
thousands_sep
thread
thread is not current
thread is not supported for isolated subinterpreters
thread state %p must be current when releasing
thread state already initialized
thread still has a frame
thread.local.%p
thread_info
thread_time
thread_time() -> float\n\nThread time for profiling: sum of the kernel and user-space CPU time.
thread_time() -> int\n\nThread time for profiling as nanoseconds:\nsum of the kernel and user-space CPU time.
thread_time_ns
threading
throw
throw() third argument must be a traceback object
throw(typ[,val[,tb]]) -> raise exception in the wrapped iterator,\nreturn next yielded value or raise StopIteration.
throw(value)\nthrow(type[,value[,tb]])\n\nRaise exception in generator, return next yielded value or raise\nStopIteration.
throw(value)\nthrow(type[,value[,traceback]])\n\nRaise exception in coroutine, return next iterated value or raise\nStopIteration.
thuh
thyh
th}S
tia[VRNLJHGFEDDCCCC
tilde
time
time of last access
time of last access in nanoseconds
time of last change
time of last change in nanoseconds
time of last modification
time of last modification in nanoseconds
time() -> floating point number\n\nReturn the current time in seconds since the Epoch.\nFractions of a second may be present if the system clock provides them.
time([hour[, minute[, second[, microsecond[, tzinfo]]]]]) --> a time object\n\nAll arguments are optional. tzinfo may be None, or an instance of\na tzinfo subclass. The remaining arguments may be ints.\n
time.struct_time
time_ns
time_ns() -> int\n\nReturn the current time in nanoseconds since the Epoch.
timeit
timeout
timeout must be greater than 0
timeout value is too large
timeout value must be positive
timer
times
times($module, /)\n--\n\nReturn a collection containing process timing information.\n\nThe object returned behaves like a named tuple with these fields:\n  (utime, stime, cutime, cstime, elapsed_time)\nAll fields are floating point numbers.
times_result
times_result: Result from os.times().\n\nThis object may be accessed either as a tuple of\n  (user, system, children_user, children_system, elapsed),\nor via the attributes user, system, children_user, children_system,\nand elapsed.\n\nSee os.times for more information.
timespec
timestamp
timestamp out of range for platform time_t
timestamp too large to convert to C _PyTime_t
timestamp[, tz] -> tz's local time from POSIX timestamp.
timetuple
timetz
timeunit
timezone
tiny_sha3
title
title($self, /)\n--\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining\ncased characters have lower case.
tjuj
tkinter
tl-4
tm_gmtoff
tm_hour
tm_isdst
tm_mday
tm_min
tm_mon
tm_sec
tm_wday
tm_yday
tm_year
tm_zone
tmrmt
to5]
to_bytes
to_bytes($self, /, length=1, byteorder='big', *, signed=False)\n--\n\nReturn an array of bytes representing an integer.\n\n  length\n    Length of bytes object to use.  An OverflowError is raised if the\n    integer is not representable with the given number of bytes.  Default\n    is length 1.\n  byteorder\n    The byte order used to represent the integer.  If byteorder is 'big',\n    the most significant byte is at the beginning of the byte array.  If\n    byteorder is 'little', the most significant byte is at the end of the\n    byte array.  To request the native byte order of the host system, use\n    `sys.byteorder' as the byte order value.  Default is to use 'big'.\n  signed\n    Determines whether two's complement is used to represent the integer.\n    If signed is False and a negative integer is given, an OverflowError\n    is raised.
tobytes
tobytes($self, /)\n--\n\nConvert the array to an array of machine values and return the bytes representation.
tobytes($self, /, order='C')\n--\n\nReturn the data in the buffer as a byte string.\n\nOrder can be {'C', 'F', 'A'}. When order is 'C' or 'F', the data of the\noriginal array is converted to C or Fortran order. For contiguous views,\n'A' returns an exact copy of the physical memory. In particular, in-memory\nFortran order is preserved. For non-contiguous views, the data is converted\nto C first. order=None is the same as order='C'.
toc_entry
today
tofile
tofile($self, f, /)\n--\n\nWrite all items (as machine values) to the file object f.
tok_backup
tok_backup: wrong character
token
tokenize
tokenizer beginning of buffer
tokenizeriter
tolerances must be non-negative
tolist
tolist($self, /)\n--\n\nConvert array to an ordinary list with the same items.
tolist($self, /)\n--\n\nReturn the data in the buffer as a list of elements.
tolower
tomllib
tomono
tomono($module, fragment, width, lfactor, rfactor, /)\n--\n\nConvert a stereo fragment to a mono fragment.
too many constants
too many digits in integer
too many expressions in star-unpacking assignment
too many expressions in star-unpacking sequence pattern
too many length or distance symbols
too many levels of indentation
too many nested parentheses
too many objects
too many statically nested blocks
too many sub-patterns in class pattern %R
too many sub-patterns in mapping pattern
too many tuple nesting levels in argument format string
too many values to unpack (expected %d)
too many values to unpack (expected 2)
toordinal
topdown
topfd
toppath
toreadonly
toreadonly($self, /)\n--\n\nReturn a readonly version of the memoryview.
tostereo
tostereo($module, fragment, width, lfactor, rfactor, /)\n--\n\nGenerate a stereo fragment from a mono fragment.
tot%t
total size, in bytes
total struct size too long
total time in this entry
total time spent in this call
total_seconds
totaltime
tounicode
tounicode($self, /)\n--\n\nExtends this array with data from the unicode string ustr.\n\nConvert the array to a unicode string.  The array must be a unicode type array;\notherwise a ValueError is raised.  Use array.tobytes().decode() to obtain a\nunicode string from an array of some other type.
tounicode() may only be called on unicode type arrays
toupper
tpvpa4{
tq.RG^JKl
tqptLu
tquqn
trace
traceback
traceback loop detected
tracebacklimit
tracemalloc
tracemalloc_realloc
tracemalloc_realloc() failed to allocate a trace
trailing comma not allowed without surrounding parentheses
translate
translate($self, table, /)\n--\n\nReplace each character in the string using the given translation table.\n\n  table\n    Translation table, which must be a mapping of Unicode ordinals to\n    Unicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via __getitem__, for instance a\ndictionary or list.  If this operation raises LookupError, the character is\nleft untouched.  Characters mapped to None are deleted.
translate($self, table, /, delete=b'')\n--\n\nReturn a copy with each character mapped by the given translation table.\n\n  table\n    Translation table, which must be a bytes object of length 256.\n\nAll characters occurring in the optional argument delete are removed.\nThe remaining characters are mapped through the given translation table.
translation table must be 256 characters long
true
truediv
truediv($module, a, b, /)\n--\n\nSame as a / b.
trunc
trunc($module, x, /)\n--\n\nTruncates the Real x to the nearest Integral toward 0.\n\nUses the __trunc__ magic method.
truncate
truncate of closed file
truncate($module, /, path, length)\n--\n\nTruncate a file, specified by path, to a specific length.\n\nOn some platforms, path may also be specified as an open file descriptor.\n  If this functionality is unavailable, using it raises an exception.
truncate($self, pos=None, /)\n--\n\n
truncate($self, pos=None, /)\n--\n\nTruncate size to pos.\n\nThe pos argument defaults to the current file position, as\nreturned by tell().  The current file position is unchanged.\nReturns the new absolute position.
truncate($self, size=None, /)\n--\n\nTruncate the file to at most size bytes and return the truncated size.\n\nSize defaults to the current file position, as returned by tell().\nThe current file position is changed to the value of size.
truncate($self, size=None, /)\n--\n\nTruncate the file to at most size bytes.\n\nSize defaults to the current file position, as returned by tell().\nThe current file position is unchanged.  Returns the new size.
truncated \UXXXXXXXX escape
truncated \uXXXX escape
truncated \xXX escape
truncated data
truth
truth($module, a, /)\n--\n\nReturn True if a is true, False otherwise.
try sending as bytes
trying {}
trying {}{}{}
tssxAp/^0x
tstate %p is still current
tstate is freed
tstate mix-up
tstate_delete_common
tt2z
tu*1r2t
tuple
tuple assignment index out of range
tuple for endswith must only contain str, not %.100s
tuple for startswith must only contain str, not %.100s
tuple index out of range
tuple indices must be integers or slices, not %.200s
tuple of arguments to future partial calls
tuple returned by __reduce__ must contain 2 through 6 elements
tuple(iterable=(), /)\n--\n\nBuilt-in immutable sequence.\n\nIf no argument is given, the constructor returns an empty tuple.\nIf iterable is specified the tuple is initialized from iterable's items.\n\nIf the argument is a tuple, the return value is the same object.
tuple.index(x): x not in tuple
tuple_iterator
turtle
turtledemo
twuw
type
type %.100s doesn't define __round__ method
type %.100s doesn't define __trunc__ method
type %s has the Py_TPFLAGS_HAVE_GC flag but has no traverse function
type %s has the Py_TPFLAGS_MANAGED_DICT flag but not Py_TPFLAGS_HEAPTYPE flag
type '%.100s' is not an acceptable base type
type '%.100s' is not dynamically allocated but its base type '%.100s' is dynamically allocated
type '%.100s' participates in gc and is a base type but has inappropriate tp_free slot
type '%.200s' is not subscriptable
type 'partial' takes at least one argument
type MRO must not be empty
type __qualname__ must be a str, not %s
type must be winreg.REG_SZ
type name must not contain null characters
type object '%.50s' has no attribute '%U'
type object '%s' has no attribute '__annotations__'
type() doesn't support MRO entry resolution; use types.new_class()
type() takes 1 or 3 arguments
type(object) -> the object's type\ntype(name, bases, dict, **kwds) -> a new type
type->tp_dict != ((void *)0)
type->tp_new == ((void *)0)
type->tp_traverse != ((void *)0)
type.__init__() takes 1 or 3 arguments
type.__init__() takes no keyword arguments
type_comment
type_ignore
type_ignore = TypeIgnore(int lineno, string tag)
type_ignores
type_traverse
type_traverse() called on non-heap type '%.100s'
typecode
typecodes
typed
types
types.GenericAlias
types.SimpleNamespace
types.UnionType
typing
tz -> convert to local time in new timezone tz\n
tzinfo
tzinfo argument must be None or of a tzinfo subclass, not type '%s'
tzinfo.%s() must return None or timedelta, not '%.200s'
tzinfo.tzname() must return None or a string, not '%s'
tzname
tzname.replace() did not return a string
t|tyt
u u!u"u#u$u&u'u*u.u4u6u9u<u=u?uAuBuCuDuFuGuIuJuMuPuQuRuSuUuVuWuXu
u u!u$u'u)u*u/u6u9u=u>u?u@uCuGuHuNuPuRuWu^u_uauouquyuzu{u|u}u~u
u v)v
u"ueufubupu
u%um
u%urrGS
u&u,u<uDuMuJuIu[uFuZuiudugukumuxuvu
u'v\rv\vv\tv
u(u)u0u1u2u3u
u-uOuLuNuKu
u/uouyu
u/v-v1v=v3v<v5v2v0v
u12L
u4v4w4
u5v5G
u7^:mGH
u8aPT
u=XEe9"R#R
uCmB
uCvHvIvGv
uDA=a5
uE\y
uEvEC
uEw_
uHyc[
uIIII
uJTZ7j
uL5u-d
uLJAS
uR{q}
uU>S
uVI5s
uVvXv
uWsceO
uYEyS]qV|lp|
uYvY|Y
uZYs
u[vb
u\tu\nu\vu\fu
u\vdvYvPvSvWvZv
u\vv\rv\tv
u]z]w
u^x^p
u_vav
u`3j
ua3q#w
uawaI
ubyte format requires 0 <= number <= 255
uc$d
uewexef
ufNN
ugohyc;Rss{c
ujvj,Og@
ulaw2lin
ulaw2lin($module, fragment, width, /)\n--\n\nConvert sound fragments in u-LAW encoding to linearly encoded sound fragments.
ulnh
ulp($module, x, /)\n--\n\nReturn the value of the least significant bit of the float x.
ul|y
umask
umask($module, mask, /)\n--\n\nSet the current numeric umask and return the previous umask.
umo-
um|W
un-MABvnwnxn!Uyn3Ozn{n
unable to encode and copy exception message
unable to encode and copy exception type name
unable to encode error handler result to ASCII
unable to format exception message
unable to format exception type name
unable to get sys.modules
unable to get sys.path
unable to get sys.path_hooks
unable to get sys.stderr
unable to get the current thread state
unable to get the interpreter state
unable to get the thread head state
unable to get warnings.WarningMessage
unable to start the thread
unable to start watchdog thread
uname_result
uname_result: Result from os.uname().\n\nThis object may be accessed either as a tuple of\n  (sysname, nodename, release, version, machine),\nor via the attributes sysname, nodename, release, version, and machine.\n\nSee os.uname for more information.
unary op %d should not be possible
unaryop
unaryop = Invert | Not | UAdd | USub
unbound method %U needs an argument
unbounded read returned more bytes than a Python bytes object can hold
unc_prefix
unclosed file %R
unclosed scandir iterator %R
uncollectable
uncompressed_size
unconsumed_tail
underlying %s() should have returned a bytes-like object, not '%.200s'
underlying buffer has been detached
underlying buffer is not writable
underlying read() should have returned a bytes object, not '%.200s'
underlying stream is not seekable
unexpected %s jumping backwards
unexpected '{' in field name
unexpected EOF while parsing
unexpected MARK found
unexpected character after line continuation character
unexpected comparison kind
unexpected constant inside of a literal pattern
unexpected conversion flag %d
unexpected end of data
unexpected expression
unexpected expression in assignment %d (line %d)
unexpected indent
unexpected pattern
unexpected return type from as_integer_ratio(): expected tuple, got '%.200s'
unexpected special character
unexpected statement
unexpected unindent
unfreeze
unfreeze($module, /)\n--\n\nUnfreeze all objects in the permanent generation.\n\nPut all objects in the permanent generation back into oldest generation.
ungetc
ungetch
ungetch($module, char, /)\n--\n\nOpposite of getch.\n\nCause the byte string char to be "pushed back" into the\nconsole buffer; it will be the next character read by\ngetch() or getche().
ungetwch
ungetwch($module, unicode_char, /)\n--\n\nWide char variant of ungetch(), accepting a Unicode value.
unhashable type: '%.200s'
unhexlify
unhexlify($module, hexstr, /)\n--\n\nBinary data of hexadecimal representation.\n\nhexstr must contain an even number of hex digits (upper or lower case).
unicode error
unicode_dealloc
unicode_escape_decode
unicode_escape_decode($module, data, errors=None, final=True, /)\n--\n\n
unicode_escape_encode
unicode_escape_encode($module, str, errors=None, /)\n--\n\n
unicode_iscased
unicode_iscased($module, character, /)\n--\n\n
unicode_literals
unicode_tolower
unicode_tolower($module, character, /)\n--\n\n
unicodedata
unicodedata._ucnhash_CAPI
unicodedata.normalize() must return a string, not %.200s
unicodeescape
unindent does not match any outer indentation level
uninitialized classmethod object
uninitialized staticmethod object
union
unittest
unknown
unknown Unicode character name
unknown binary operator
unknown clock
unknown comprehension type %d
unknown compression method
unknown dialect
unknown encoding: %s
unknown error handler name '%.400s'
unknown expression kind
unknown expression kind inside f-string
unknown f-value conversion kind
unknown filesystem error handler
unknown header flags set
unknown mode: '%s'
unknown opcode
unknown option %ls\n
unknown parsing error
unknown runtime error
unknown seek type
unknown symbol table entry
unknown unary operator
unlink
unlink($module, /, path, *, dir_fd=None)\n--\n\nRemove a file (same as remove()).\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\ndir_fd may not be implemented on your platform.\n  If it is unavailable, using it will raise a NotImplementedError.
unlocked
unmarshallable object
unmatched '%c'
unmatched '{' in format spec
unmatched paren in format
unnamed field
unpack
unpack requires a buffer of %zd bytes
unpack($module, format, buffer, /)\n--\n\nReturn a tuple containing values unpacked according to the format string.\n\nThe buffer's size in bytes must be calcsize(format).\n\nSee help(struct) for more on format strings.
unpack($self, buffer, /)\n--\n\nReturn a tuple containing unpacked values.\n\nUnpack according to the format string Struct.format. The buffer's size\nin bytes must be Struct.size.\n\nSee help(struct) for more on format strings.
unpack_from
unpack_from requires a buffer of at least %zu bytes for unpacking %zd bytes at offset %zd (actual buffer size is %zd)
unpack_from($module, format, /, buffer, offset=0)\n--\n\nReturn a tuple containing values unpacked according to the format string.\n\nThe buffer's size, minus offset, must be at least calcsize(format).\n\nSee help(struct) for more on format strings.
unpack_from($self, /, buffer, offset=0)\n--\n\nReturn a tuple containing unpacked values.\n\nValues are unpacked according to the format string Struct.format.\n\nThe buffer's size in bytes, starting at position offset, must be\nat least Struct.size.\n\nSee help(struct) for more on format strings.
unpacked tuple should have %s%zd element%s, but has %zd
unpickling stack underflow
unraisablehook
unraisablehook($module, unraisable, /)\n--\n\nHandle an unraisable exception.\n\nThe unraisable argument has the following attributes:\n\n* exc_type: Exception type.\n* exc_value: Exception value, can be None.\n* exc_traceback: Exception traceback, can be None.\n* err_msg: Error message, can be None.\n* object: Object causing the exception, can be None.
unrecognized interpreter ID %lld
unregister
unregister($module, search_function, /)\n--\n\nUnregister a codec search function and clear the registry's cache.\n\nIf the search function is not registered, do nothing.
unregister(func) -> None\n\nUnregister an exit function which was previously registered using\natexit.register\n\n    func - function to be unregistered
unregister_dialect
unregister_dialect($module, /, name)\n--\n\nDelete the name/dialect mapping associated with a string name.\n\n    csv.unregister_dialect(name)
unregistered extension code %ld
unsetenv
unsetenv($module, name, /)\n--\n\nDelete an environment variable.
unsigned byte integer is greater than maximum
unsigned byte integer is less than minimum
unsigned short is greater than maximum
unsigned short is less than minimum
unsupported error handler
unsupported flags
unsupported format character '%c' (0x%x) at index %zd
unsupported format string passed to %.200s.__format__
unsupported locale setting
unsupported operand type(s) for %.100s: '%.100s' and '%.100s'
unsupported operand type(s) for %.100s: '%.100s' and '%.100s'. Did you mean "print(<message>, file=<output_stream>)"?
unsupported operand type(s) for %.100s: '%.100s', '%.100s', '%.100s'
unsupported operand types(s) or combination of types: '%.100s' and '%.100s'
unsupported pickle protocol: %d
unsupported type for timedelta %s component: %s
unterminated shift sequence
unterminated string literal (detected at line %d)
unterminated triple-quoted string literal (detected at line %d)
unused_data
unvlv
uo_J
update
update($self, data, /)\n--\n\nUpdate this hash object's state with the provided bytes-like object.
update($self, obj, /)\n--\n\nUpdate this hash object's state with the provided string.
update() takes at most 1 positional argument (%zd given)
update_abstractmethods
upper
upper($self, /)\n--\n\nReturn a copy of the string converted to uppercase.
urRi
urandom
urandom($module, size, /)\n--\n\nReturn a bytes object containing random bytes suitable for cryptographic use.
urllib
urlsS
us_ascii
usage: %ls [option] ... [-c cmd | -m mod | file | -] [arg] ...\n
use_environment
use_frozen_modules
use_hash_seed
usedforsecurity
user
user ID of owner
user time
user time of children
user_base
user_function
user_site
user_site_directory
userbase
usercustomize
userhome
ushort format requires 0 <= number <= %u
usvsM
utcfromtimestamp
utcnow
utcoffset
utcoffset() returned %.200s, expected timedelta or None
utctimetuple
utf-16
utf-16-be
utf-16-le
utf-32
utf-32-be
utf-32-le
utf-8
utf-8-
utf7
utf8
utf8_mode
utf_16_be_decode
utf_16_be_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_16_be_encode
utf_16_be_encode($module, str, errors=None, /)\n--\n\n
utf_16_decode
utf_16_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_16_encode
utf_16_encode($module, str, errors=None, byteorder=0, /)\n--\n\n
utf_16_ex_decode
utf_16_ex_decode($module, data, errors=None, byteorder=0, final=False,\n                 /)\n--\n\n
utf_16_le_decode
utf_16_le_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_16_le_encode
utf_16_le_encode($module, str, errors=None, /)\n--\n\n
utf_32_be_decode
utf_32_be_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_32_be_encode
utf_32_be_encode($module, str, errors=None, /)\n--\n\n
utf_32_decode
utf_32_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_32_encode
utf_32_encode($module, str, errors=None, byteorder=0, /)\n--\n\n
utf_32_ex_decode
utf_32_ex_decode($module, data, errors=None, byteorder=0, final=False,\n                 /)\n--\n\n
utf_32_le_decode
utf_32_le_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_32_le_encode
utf_32_le_encode($module, str, errors=None, /)\n--\n\n
utf_7_decode
utf_7_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_7_encode
utf_7_encode($module, str, errors=None, /)\n--\n\n
utf_8_decode
utf_8_decode($module, data, errors=None, final=False, /)\n--\n\n
utf_8_encode
utf_8_encode($module, str, errors=None, /)\n--\n\n
util
utime
utime($module, /, path, times=None, *, ns=<unrepresentable>,\n      dir_fd=None, follow_symlinks=True)\n--\n\nSet the access and modified time of path.\n\npath may always be specified as a string.\nOn some platforms, path may also be specified as an open file descriptor.\n  If this functionality is unavailable, using it raises an exception.\n\nIf times is not None, it must be a tuple (atime, mtime);\n    atime and mtime should be expressed as float seconds since the epoch.\nIf ns is specified, it must be a tuple (atime_ns, mtime_ns);\n    atime_ns and mtime_ns should be expressed as integer nanoseconds\n    since the epoch.\nIf times is None and ns is unspecified, utime uses the current time.\nSpecifying tuples for both times and ns is an error.\n\nIf dir_fd is not None, it should be a file descriptor open to a directory,\n  and path should be relative; path will then be relative to that directory.\nIf follow_symlinks is False, and the last element of the path is a symbolic\n  link, utime will modify the symbolic link itself instead of the file the\n  link points to.\nIt is an error to use dir_fd or follow_symlinks when specifying path\n  as an open file descriptor.\ndir_fd and follow_symlinks may not be available on your platform.\n  If they are unavailable, using them will raise a NotImplementedError.
utime: 'ns' must be a tuple of two ints
utime: 'times' must be either a tuple of two ints or None
utime: cannot use dir_fd and follow_symlinks together on this platform
utime: you may specify either 'times' or 'ns' but not both
uu005c
uuid
uvvvwvxv
uwyI{T{R{
uyuwu
uy}m~
uy~o
u{Q7h>o
u{v|v
u~u%v
v!v#v'v(v,v.v/v1v2v6v7v9v:v;v=vAvBvDvEvFvGvHvIvJvKvNvOvPvQvRvSvUvWvXvYvZv[v]v_v`vavbvdvevfvgvhvivjvlvmvnvpvqvrvsvtvuvvvwvyvzv|v
v#v%v&v)v-v2v3v5v8v9v:v<vJv@vAvCvDvEvIvKvUvYv_vdvevmvnvovqvtv
v$v&v!v"v
v&w&y&z&{&|&}&~&j-k-
v'v v!v"v$v4v0v;vGvHvFv\vXvavbvhvivjvgvlvpvrvvvxv|v
v'w'x'y'z'{'|'}'~'
v,vQvOvovvv
v-v5vCvKvdvevmvovqv
v1w1x1
v3bcacd
v6EbYD
v7JSHSSAJ5,6s
v7w>w<w6w8w:wkxCxNxeyhymy
v8>Q\cPVM
v8w8
v9b;
v9w/w-w1w2w4w3w=w%w;w5wHxRxIxMxJxLx&xExPxdygyiyjycykyay
v9w9
v:ib^73;,LKKdbfbjbkb
v:vb
v<v"v v@v-v0v?v5vCv>v3vMv^vTv\vVvkvov
v=y4
v>Ga
v>w>x>y>z>{>|>h
v?1Rd@
v?w?Z
v@Y>/XT
vAal
vAwA
vA{p]J
vB9<~
vBwBxBC
vEn<Zm<Lj2[
vF3?V
vFlmwG
vFwGwDwMwEwJwNwKwLw
vH7B
vI8\JB
vLv<
vNz4
vR7r
vRf\tN
vT7e
vTfP
vTu$R
vUw_w`wRwVwZwiwgwTwYwmw
vU}O
vV03]
vXuXwXtXxX$
v[wkwfw^wcwywjwlw\wewhwbw
v\nv%v
v\nv\fv
v\tv\vv\rv
v\tw\vw
v^QKz
vaL^
valid_signals
valid_signals($module, /)\n--\n\nReturn a set of valid signal numbers on this platform.\n\nThe signal numbers returned by this function can be safely passed to\nfunctions like `pthread_sigmask`.
value
value error
value is too long
value must be positive
value not found in bytearray
value to be used for hash of a nan
value to be used for hash of a positive infinity
value too large to convert to float: '%.200s'
values
values($self, /)\n--\n\nReturn a list of all variables' values in the context object.
var-keyword argument cannot have default value
var-positional argument cannot have default value
vararg
varchars
varnames
vars
vars() argument must have __dict__ attribute
vars([object]) -> dictionary\n\nWithout arguments, equivalent to locals().\nWith an argument, equivalent to object.__dict__.
vbJS|oDQ1o
vbwe
vc]E(2|F
vd@P
vdtd~Bn
ve?ndb
venv
venv.<locals>.<listcomp>
ver_nodot
verbose
verbosity
version
version_info
vfwFz
vfwgrFz
vgetargs1_impl
vgmj
vgvKR
vharYN
vhgZ
vh~0
virtual_conf
viui1
vk2O
vl1F
vlab>c
vlwlyl|
vlx?z
vm%n)F`Csm
vnt1d
vowo
vqwqo
vrxrzrr
vswsW
vuwu
vuzQ
vwEV
vxworks
vz*vwzfX
v~w?z
w w(w
w!w#w$w%w'w*w+w
w"w'w#x,x"x5x/x(x.x+x!x)x3x*x1xTy[yOy\ySyRyQy
w"w(w-w.w/w4w5w6w9w=w>wBwEwFwJwMwNwOwRwVwWw\w^w_w`wbwdwgwjwlwpwrwswtwzw}w
w%w&w
w%xIyWy
w%y#y'y(y$y)y
w&w@w
w)w$w
w)|)^*d*E*U*F*V*
w-w&w5w8wPwQwGwCwZwhwbwew
w-w5w9@
w-xCxNxOxQxhxnxK
w-y1y/yT|S|
w0/S
w0x'x8x
w1V;NW
w4&G
w4w6wFwMwNw\w_wbwzw
w5x5y5z5H
w6x6
w7w8wGwZwhwkw[wew
w9yi|k|
w:u@uNuKuHu[uruyu
w;@2e
w=x=S
w>y@yAy
w?8pw
wBy?y
wCh;S
wCxC
wE[a
wF,XkTf`IJ
wFxFS
wHxH
wJvJ?
wLx9J4
wM^p
wOxOzO}O
wPTm
wQ0`
wR}RH::
wShowWindow
wTUAvT@7t
wVYq
w\nw\fw
w\y<r3#
w]xlxox\rz
w_JW
w`2d|L
w`xdxex\xmxqxjxnxpxixhx^xbxtysyrypy
wait
waiters
waitpid
waitpid($module, pid, options, /)\n--\n\nWait for completion of a given process.\n\nReturns a tuple of information regarding the process:\n    (pid, status << 8)\n\nThe options argument is ignored on Windows.
waitstatus_to_exitcode
waitstatus_to_exitcode($module, /, status)\n--\n\nConvert a wait status to an exit code.\n\nOn Unix:\n\n* If WIFEXITED(status) is true, return WEXITSTATUS(status).\n* If WIFSIGNALED(status) is true, return -WTERMSIG(status).\n* Otherwise, raise a ValueError.\n\nOn Windows, return status shifted right by 8 bits.\n\nOn Unix, if the process is being traced or if waitpid() was called with\nWUNTRACED option, the caller must first check if WIFSTOPPED(status) is true.\nThis function must not be called if WIFSTOPPED(status) is true.
wakeup
walk
walk_dirs
walk_into
warn
warn($module, /, message, category=None, stacklevel=1, source=None)\n--\n\nIssue a warning, or maybe ignore it or raise an exception.
warn_default_encoding
warn_explicit
warn_on_full_buffer
warnings
warnings._showwarnmsg() must be set to a callable
warnings_get_state: could not identify current interpreter
warnoptions
warnr.
wasi
wave
waxa
wbits
wcscat_s
wcschr
wcscmp
wcscoll
wcscpy_s
wcsncmp
wcsncpy_s
wcsnlen
wcsrchr
wcstok_s
wcstol
wcstombs
wcsxfrm
weak object has gone away
weakly-referenced object no longer exists
weakref
weakref.CallableProxyType
weakref.ProxyType
weakref.ReferenceType
webbrowser
week
weekday
weeks
weightA should be >= 1, weightB should be >= 0
wem9m
were
wfxk
wg|f|
whence
whence value %d unsupported
where
while
while compressing data
while copying compression object
while copying decompression object
while creating compression object
while creating decompression object
while decompressing data
while finishing compression
while finishing decompression
while flushing
while preparing to decompress data
while setting zdict
width
width * nchannels too big for a C int
width of the terminal window in characters
width of the type used for hashing, in bits
width too big
wildcard makes remaining patterns unreachable
win32
winerror
winreg
winreg.ConnectRegistry
winreg.CreateKey
winreg.DeleteKey
winreg.DeleteValue
winreg.DisableReflectionKey
winreg.EnableReflectionKey
winreg.EnumKey
winreg.EnumValue
winreg.ExpandEnvironmentStrings
winreg.LoadKey
winreg.OpenKey
winreg.OpenKey/result
winreg.PyHKEY.Detach
winreg.QueryInfoKey
winreg.QueryReflectionKey
winreg.QueryValue
winreg.SaveKey
winreg.SetValue
winsound
winver
with
with Barry as BDFL, use '<>' instead of '!='
with_statement
with_traceback
withdata
withitem
withitem(expr context_expr, expr? optional_vars)
wl{V
wmt?l>xm
wn>Jj
woS3|
wow~w
wpf;V8T!
wpid
wptp
wrapper %s() takes no keyword arguments
wrapper_descriptor
wraps
writable
writable contiguous buffer requested for a non-contiguous object.
writable($self, /)\n--\n\n
writable($self, /)\n--\n\nReturn whether object was opened for writing.\n\nIf False, write() will raise OSError.
writable($self, /)\n--\n\nReturns True if the IO object can be written.
writable($self, /)\n--\n\nTrue if console is an output buffer.
writable($self, /)\n--\n\nTrue if file was opened in a write mode.
write
write byte out of range
write could not complete without blocking
write to closed file
write($module, fd, data, /)\n--\n\nWrite a bytes object to a file descriptor.
write($self, b, /)\n--\n\nWrite buffer b to file, return number of bytes written.\n\nOnly makes one system call, so not all of the data may be written.\nThe number of bytes actually written is returned.
write($self, b, /)\n--\n\nWrite buffer b to file, return number of bytes written.\n\nOnly makes one system call, so not all of the data may be written.\nThe number of bytes actually written is returned.  In non-blocking mode,\nreturns None if the write would block.
write($self, b, /)\n--\n\nWrite bytes to file.\n\nReturn the number of bytes written.
write($self, buffer, /)\n--\n\n
write($self, s, /)\n--\n\nWrite string to file.\n\nReturns the number of characters written, which is always equal to\nthe length of the string.
write($self, strobj, /)\n--\n\n
write($self, text, /)\n--\n\n
write_byte
write_bytecode
write_history
write_history_file
write_through
writelines
writelines($self, lines, /)\n--\n\n
writelines($self, lines, /)\n--\n\nWrite a list of lines to stream.\n\nLine separators are not added, so it is usual for each of the\nlines provided to have a line separator at the end.
writelines($self, lines, /)\n--\n\nWrite lines to the file.\n\nNote that newlines are not added.  lines can be any iterable object\nproducing bytes-like objects. This is equivalent to calling write() for\neach element.
writeobject with NULL file
writer
writerow
writerow(iterable)\n\nConstruct and write a CSV record from an iterable of fields.  Non-string\nelements will be converted to string.
writerows
writerows(iterable of iterables)\n\nConstruct and write a series of iterables to a csv file.  Non-string\nelements will be converted to string.
writing
wrong thread state
wrvr
wsgiref
wstr
wy9o
w~wyw
x x!x"x$x(x*x+x.x/x1x2x3x5x6x=x?xAxBxCxDxFxHxIxJxKxMxOxQxSxTxXxYxZx
x!x"x#x-x.x0x5x7xCxDxGxHxLxNxRx\x^x`xaxcxdxhxjxnxzx~x
x!x,xGxdxjx
x&xmy
x&y x*yEx
x.7c[
x.__contains__(y) <==> y in x.
x.__getitem__(y) <==> x[y]
x0y0
x2xUyPy`y_yVy^y]yWyZy
x3G>
x4!V
x4x7x
x5I^
x7OB
x9'g
x9x:x;x
x<x%x,x#x)xNxmxVxWx&xPxGxLxjx
x=6T%N,AY3
x=cZf
x>ehu
x>y@y`y
x?z<z@z=z7z;z
x@g9R
xAW<,nd
xAq2
xAyGyHyzy
xD-n
xGyGz
xJoZ
xJyLyKyEyDy
xKW?9
xKxW
xLF<t:G
xMhQ
xN0\
xO,o
xP2g3gB44g5g~I,N`C7gA1q3
xPWY
xQf<^J
xQkX)YU\
xQxjyj3Z
xS(q
xSEQr
xTfLnW
xTx;#
xXAR
xY<Z0Z
xYBT
x\fx\rxFyIyHyGy
x\nx\vx
x\tx\rx
x^ix^cuN
x_m18
xa>y
xc:PCFsT~c
xcyc
xd!j
xd459
xdrlib
xdyd
xeMM
xekv
xfG9[
xgygzg{g}g
xh"pV
xhmx
xidT
xieb
xkz8N
xmlcharrefreplace
xmlcharrefreplace_errors
xmlrpc
xoptions
xor($module, a, b, /)\n--\n\nSame as a ^ b.
xoxy}\fw
xvBh
xxsubtype
xxsubtype is an example module showing how to subtype builtin types from C.\ntest_descr.py in the standard test suite requires it in order to complete.\nIf you don't care about the examples, and don't intend to run the Python\ntest suite, you can recompile Python without Modules/xxsubtype.c.
xxsubtype.spamdict
xxsubtype.spamlist
xx{w
x{x|y
x}y}z}{}|}}}~}
y y!y"y#y%y&y'y(y)y*y+y,y-y.y/y0y1y2y3y5y6y7y8y9y=y?yByCyDyEyGyJyKyLyMyNyOyPyQyRyTyUyXyYyaycy
y y%y'y)y-y1y4y5y;y=y?yDyEyFyJyKyOyQyTyXy[y\ygyiykyryyy{y|y~y
y*:write
y*n&q
y*|nn:find
y*|nn:rfind
y+zJz0z/z(z&z
y,y+y@y`yWy_yZyUySyzy
y.y1y4yL
y.z1z
y0y%y;yJyXy[y
y14a'
y1z;z>z7zCzWzIzazbziz
y2S8
y4di~
y4j[k,]
y4z4
y6#XJT
y64N
y6z6{6|6
y7z7A
y8C2
y9z9
y9{<y
y:aTg]
y:qK
y=MWLE>=
yAzA
yB}M~
yDNe4
yDzHzGz
yEzEO
yF8Q~
yG_Iu
yI}hH
yKnIt8
yL5M
yLr=
yMwU^a
yMzNzFzLzKz
yN/7s?8mkB0IN
yNaXa
yP+lS^iw
yQK:y8
yRc4T
yTDI.SS8`3T
yU_F
yUzU\<,?tFT?xH"GI6{U
yWkW
yXzXjJ
y\nz\v{f}zAC{~y\t
y\ty\ny\vy\fy\ry
y\vz}z
y\z[zVzXzTzZz
yazbz`z
yb!bTk
ybec
ydxdlE
year
year %i is out of range
year out of range
year, for example, 1993
yegHze}Mk
yejlV]Bm
yf5=
yf@>zfl:{fKO|f<T6<}f~fM<RH3N!g
yg(x
ygugxg
ygzhz3|<|9|,|;|
yhglboO
yield
yield expression
ykxk
ykziz>|?|8|=|7|@|k~m~y~i~j~
ymzm
ynzlzmz
yp5N|f
ypzqzW|\|Y|[|Z|
ypz{
yp|p~p
yqO4
yvk9z
yxz{z
yyzy*
yzzyz
y}yyy
z!z"z$z%z&z'z(z)z*z+z,z-z.z/z0z1z2z4z5z6z8z:z>z@zAzBzCzDzEzGzHzIzJzKzLzMzNzOzPzRzSzTzUzVzXzYzZz[z\z]z^z_z`zazbzczdzezfzgzhz
z!z'z+z-z/z0z4z5z8z9z:zDzEzGzHzLzUzVzYz\z]z_z`zezgzjzmzuzxz~z
z069e\S\q
z0{0
z1{1
z2sWuWQC
z2{2|2
z4iJ\
z4nATR
z56cl
z5{G{4{%{0{"{${3{
z6Could not find platform independent libraries <prefix>z9Could not find platform dependent libraries <exec_prefix>z8Consider setting $PYTHONHOME to <prefix>[:<exec_prefix>]
z7v26G
z7zT~w
z8s9s
z9<Ms`
z9z7zQz
z9{0}o
z;8B
z=NIz
z=i O9
z?<qB
zA(9hm
zG7R|8
zG{G|G
zHyvzv{v|v
zI{V{F{P{R{T{M{K{O{Q{
zI|H|J|G|E|
zJ{;{D{H{L{N{@{X{E{
zKskM
zKyy}L~S
zL|C|M|
zNwK%e
zOJsW`
zS$t
zSG8
zSdS
zUBE@2G
zUYPYNYZYXYbY`YgYlYiYxY
zVYX
zV{VQG
zYnS
zY~8
zZOPGD
z\i8
z\tz\nz\fz
z\v/bin/pythonFT
z_"c9W
z`AE{L
z`Dn^Y
zaj@M
zb{b}b|bUD"c}
zcA-z8zGzLzVzYz\z_z`zgzjzuzxz
zc}c)Lsc
zdict
zdict argument must support the buffer protocol
zdict length does not fit in an unsigned int
zd|c|e|
ze;Evee
zfill
zfill($self, width, /)\n--\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe original string is never truncated.
zfill($self, width, /)\n--\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.
zf{d{m{t{i{r{e{s{q{p{a{x{v{c{
zg`M0c
zgqgR
zgygc
ziQjQnQ
zip() argument %d is longer than argument%s%d
zip() argument %d is shorter than argument%s%d
zip(*iterables, strict=False) --> Yield tuples until an input is exhausted.\n\n   >>> list(zip('abcdefg', range(3), range(4)))\n   [('a', 0, 0), ('b', 1, 1), ('c', 2, 2)]\n\nThe zip object yields n-length tuples, where n is the number of iterables\npassed as positional arguments to zip().  The i-th element in every tuple\ncomes from the i-th iterable argument to zip().  This continues until the\nshortest argument is exhausted.\n\nIf strict is true and one of the arguments is exhausted before the others,\nraise a ValueError.
zip_iterator
zip_longest() got an unexpected keyword argument
zip_longest(iter1 [,iter2 [...]], [fillvalue=None]) --> zip_longest object\n\nReturn a zip_longest object whose .__next__() method returns a tuple where\nthe i-th element comes from the i-th iterable argument.  The .__next__()\nmethod continues until the longest iterable in the argument sequence\nis exhausted and then it raises StopIteration.  When the shorter iterables\nare exhausted, the fillvalue is substituted in their place.  The fillvalue\ndefaults to None or can be specified by a keyword argument.\n
zipapp
zipfile
zipimport
zipimport provides support for importing Python modules from Zip archives.\n\nThis module exports three objects:\n- zipimporter: a class; its constructor takes a path to a Zip archive.\n- ZipImportError: exception raised by zipimporter objects. It's a\n  subclass of ImportError, so it can be caught as ImportError, too.\n- _zip_directory_cache: a dict, mapping archive paths to zip directory\n  info dicts, as used in zipimporter._files.\n\nIt is usually not needed to use the zipimport module explicitly; it is\nused by the builtin import mechanism for sys.path items that are paths\nto Zip archives.\n
zipimport.zipimporter.load_module() is deprecated and slated for removal in Python 3.12; use exec_module() instead
zipimport: can't read data
zipimport: found {} names in {!r}
zipimport: zlib UNAVAILABLE
zipimport: zlib available
zipimporter
zipimporter(archivepath) -> zipimporter object\n\n    Create a new zipimporter instance. 'archivepath' must be a path to\n    a zipfile, or to a specific path inside a zipfile. For example, it can be\n    '/tmp/myimport.zip', or '/tmp/myimport.zip/mydirectory', if mydirectory is a\n    valid directory inside the archive.\n\n    'ZipImportError is raised if 'archivepath' doesn't point to a valid Zip\n    archive.\n\n    The 'archive' attribute of zipimporter objects contains the name of the\n    zipfile targeted.\n    
zipimporter.__init__
zipimporter.__repr__
zipimporter.find_loader
zipimporter.find_loader() is deprecated and slated for removal in Python 3.12; use find_spec() instead
zipimporter.find_module
zipimporter.find_module() is deprecated and slated for removal in Python 3.12; use find_spec() instead
zipimporter.find_spec
zipimporter.get_code
zipimporter.get_data
zipimporter.get_filename
zipimporter.get_resource_reader
zipimporter.get_source
zipimporter.invalidate_caches
zipimporter.is_package
zipimporter.load_module
zi{iO=|i(8>A}i21T;u9~ic
zlib
zlib.Compress
zlib.Decompress
zlib.error
zn_J
znt}
zoB8
zoH:
zoneinfo
zp_3o _
zu1P
zuZwow
zvhEcR{
zw8,4:
zwJ>z
zxzyz
zzzzzz\t\n\v\fzz
{!r} is not a built-in module
{!r} is not a frozen module
{!r} is not alphanumeric
{!{"{#{'{){-{/{0{2{4{5{6{7{9{;{={?{@{A{B{C{D{F{H{J{M{N{S{U{W{Y{\{^{_{a{c{d{e{f{g{h{i{j{k{l{m{o{p{s{t{v{x{z{|{}{
{#{'{){*{+{-{.{/{0{1{4{={?{@{A{G{N{U{`{d{f{i{j{m{o{r{s{w{
{-{;{G{N{`{m{o{r{
{.{1{ {%{${3{>{
{0.__class__.__name__}({0._mapping!r})
{1{+{-{/{2{8{
{5{({6{P{z{
{5|5M
{6Xfb<
{9&VHh
{A38
{B'hp
{C|CE
{D>kC
{D|DG
{E'Lq
{FZ7T
{F|Fe
{HeTi
{H|HK
{Ij>{Qd3uQsQOA
{JFwHO
{MVv
{M{\v{L{E{u{e{t{g{p{q{l{n{
{OPGr
{OP\tYGr
{OfI
{Tc|Xz
{WVPu]qw
{X{Z{E{u{L{]{`{n{{{b{r{q{
{^;P7Uqn
{cucS:l
{e|ei
{g7|d|E{gc9X
{hb5c
{j7p
{mod_name!r} found in sys.modules after import of package {pkg_name!r}, but prior to execution of {mod_name!r}; this may result in unpredictable behaviour
{nm?W
{oyo_9
{pazZpgLtZ
{pjB[3\3zp
{sisnsn}
{snsnsn}
{soT
{sys
{xOc
{} matches {}
{}.__spec__ is None
{}.__spec__ is not set
| |!|"|#|$|%|(|)|+|,|-|.|/|0|1|2|3|4|5|6|7|9|:|;|<|=|>|B|C|D|E|F|G|H|I|J|K|L|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|[|\|]|^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|u|v|w|x|y|z|~|
| |%|&|(|,|1|3|4|6|9|:|F|J|U|Q|R|S|Y|Z|[|\|]|^|a|c|g|i|m|n|p|r|y|||}|
|!}!{!z!r!s!
|$O:NameError
|$OO:AttributeError
|$OO:ImportError
|$OO:max
|$OO:min
|$i:create
|$p:zip
|&|(|"|%|0|\~P~V~c~X~b~_~Q~`~W~S~
|&|E|J|Q|W|^|a|i|n|o|p|
|*|&|8|A|@|
|.~>~F~7~2~C~+~=~1~E~A~4~9~H~5~?~/~D
|0R4
|2,r-r'HL
|3hd
|5Ee
|5}=}8}6}:}E},})}A}G}>}?}J};}(}c
|7|+|=|L|C|T|O|@|P|X|_|d|V|e|l|u|
|?NNu
|B}BN
|Cs:isoformat
|F6Cl5];aA
|F}C}q}.}9}<}@}0}3}D}/}B}2}1}=
|GkLl=]N
|K3e,U^
|Kf>0;e><2$
|LVQX
|N54
|O!O:super
|O&:read
|O:astimezone
|O:ctime
|O:gmtime
|O:localtime
|OO:deque
|OOOOOOO:__new__
|OOOOOOOOO
|Odii:Profiler
|Oi:dump_traceback
|Oi:enable
|QJa
|Qlk^
|T32Wdu
|T~U~^~Z~a~R~Y~H
|USO
|VRQb
|VwN-OR
|XD8
|X}o}c}S}V}g}j}O}m}\}k}R}T}i}Q}_}N}>
|\n\pRh2
|^}P}h}U}+}n}r}a}f}b}p}s}
|apaka~a
|ayaza{a
|bwb$
|coc(7wctc~
|flf{f
|i:_sigsegv
|i:signum
|iO:acquire
|idjt
|ii:enable
|iii:replace
|iiiiO$i
|iiiiO$i:replace
|iiiiiiiO$i:replace
|jrj
|m{mY
|n:product
|n:stack_size
|nn:flush
|n}n!o~n"ou8zC#o$oB=?Ry2%o&o'oxR(o}V)oLF
|q}0Rc
|rkZ
|s:IncrementalDecoder
|s:IncrementalEncoder
|s:isoformat
|v94
|v~u~x~p~w~o~z~r~t~h~K
|w}wH
|}fxE
|}|y|u|q|m|i|e|a|]|Y|U|Q|M|I|E|A|>|<|:|8|6|4|2|0|.|,|*|(|&|$|"| 
}!}#}$}%}&}(})}*},}-}.}0}1}2}3}4}5}6}7}8}9}:};}<}=}>}?}@}A}B}C}D}E}F}G}H}I}J}K}L}M}N}O}P}Q}R}S}T}U}V}W}X}Y}Z}[}\}]}^}_}`}a}b}c}d}e}f}g}h}i}j}k}l}m}o}p}q}r}s}t}u}v}
}#}&}*}-}1}<}=}>}@}A}G}H}M}Q}S}W}Y}Z}\}]}e}g}j}p}x}z}{}
}#}1}A}H}S}\}z}
}#~#Z"["X"Y"
}0Yq
}0qf
}1Db
}4~4A
}5~5bD<NA
}6^V2d
}7~7M
}9uB
}?j;IwGFHwq
}Blin
}IgN\;k0b
}K74
}N@o`B846Wu=@
}Q!fu
}QzQR
}[nUJ
}\n}E}K}.}2}?}5}F}s}V}N}r}h}n}O}c}
}bxb'
}dO7
}ee]MX
}k|khI
}ohr
}r0S
}sTc_
}vO\tT
}v~v!w"w#w$w%w
~ ~!~"~#~$~%~&~'~(~)~*~+~,~-~.~/~0~1~2~3~4~5~6~7~8~9~
~ ~'~(~,~-~/~3~6~?~D~E~G~N~P~R~X~_~a~b~e~k~n~o~s~x~~~
~ ~'~,~E~s~u~~~
~1[WB
~B!C"C#CO
~CoU
~DSEtmxm`?O
~GI6t
~HN2
~Kjm
~N(ZPx
~Nbfh
~NzP}P\PGPCPLPZPIPePvPNPUPuPtPwPOP
~S\LH
~V}VT
~\t~\n~\v~\f~\r~
~\t~\v~"~F~f~;~5~9~C~7~2~:~g~]~V~^~Y~Z~y~j~i~|~{~
~a!bG@N
~a2ktm
~bYJ
~dt1
~e%fWM~
~hW9
~i9}5
~j_6}jv
~k"lQ
~syst
~wuWS`i
