                          
                                
                                 
         (((((                  
    name: %s
  Unknown pseudo relocation bit size %d.\n
  Unknown pseudo relocation protocol version %d.\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 (%d %d %d %u)
 (%d %d %u)
 (more stack frames may be present)
 0123456789
 acquired
 by handle
!(msglen () && !_buf)
!)@:F,@zj/@\G1@|
!<socket >
!<symlink>
!_hPipe
!_is_accepted_endpoint
!_is_listening_endpoint
!inheap (s)
"%s" invalid or buffer too short\n
"/\[]:|<>+=;,?*
"Aborted"
"Child exited"
"I/O possible"
"Resource lost"
"`O\MpP
"can't happen" -- you found a bug
"mm?7
%$%a%b%V%U%c%Q%W%]%\%[%
%$sniglet^&
%+03ld%.2ld
%.2d/%.2d/%.2d
%.2d:%.2d:%.2d
%.3s %.3s%3d %.2d:%.2d:%.2d %d\n
%012X  %012X
%02lx %02x %02x %02x %s\n
%04hx
%04x
%08lx-%08lx %s %08lx %04x:%04x %U   
%08x-%08x-%08x-%08x
%10llu %10u %5o %10d %5u %5u %5u %5u %10ld %10ld\n
%10llu %10u %5o %10u %5d %5d %6u %5u %5u %5u %5u %10ld %10ld %10ld\n
%10llu %10u %5o %11u %10u %5d %5d %5u %5u %5u %5u %10ld %10ld %10ld\n
%3d clipboard\n%3d windows\n
%5d %5d %9U %s
%5d %5d %9U %s\n
%7d [%s] %s 
%<%^%_%Z%T%i%f%`%P%l%g%h%d%e%Y%X%R%S%k%j%
%D = lseek(%d, %D, %d)
%D = lseek(%d, %D, %d), errno %d
%D = times(%p)
%I:%M:%S %p
%P: *** fatal error %s- 
%R = %schown(%s,...)
%R = __xpg_sigpause(%y)
%R = _pipe([%d, %d], %u, %y)
%R = accept(%d, %p, %p)
%R = accept4(%d, %p, %p, %y)
%R = acl(%s)
%R = bind(%d, %p, %d)
%R = chdir() cygheap->cwd.posix '%s' native '%S'
%R = chmod(%s, 0%o)
%R = chroot(%s)
%R = close(%d)
%R = closedir(%p)
%R = connect(%d, %p, %d)
%R = cygwin_umount(%s, %d)
%R = dup(%d)
%R = dup2(%d, %d)
%R = dup3(%d, %d, %y)
%R = facl(%s) )
%R = fchdir(%d)
%R = fchown(%s,...)
%R = fcntl(%d, %d, %ly)
%R = flock(%d, %d)
%R = fork()
%R = fstat(%d, %p)
%R = ftruncate(%d, %D)
%R = get_osfhandle(%d)
%R = getacl(%S)
%R = getitimer()
%R = getpeername(%d)
%R = getrusage(%d, %p)
%R = getsid(%d)
%R = getsockopt(%d, %d, %y, %p, %p)
%R = ioctl(%d, %y, ...)
%R = isatty(%d)
%R = kill(%d, %d)
%R = link(%s, %s)
%R = listen(%d, %d)
%R = lockf(%d, %d, %D)
%R = logon_user(%s,...)
%R = mkdir(%s, %d)
%R = mlock(%p, %lu)
%R = mount(%s, %s, %y)
%R = mprotect ()
%R = msync()
%R = munlock(%p, %lu)
%R = open(%s, %y)
%R = pause()
%R = pipe([%d, %d])
%R = pipe([%p, %p], %d, %y)
%R = pipe2([%d, %d], %y)
%R = posix_fadvice(%d, %D, %D, %d)
%R = posix_fallocate(%d, %D, %D)
%R = remove(%s)
%R = rename(%s, %s)
%R = rmdir(%s)
%R = select (%d, %p, %p, %p, %p)
%R = setitimer()
%R = setsockopt(%d, %d, %y, %p, %d)
%R = settimeofday(%p, %p)
%R = shutdown(%d, %d)
%R = sigaction(%d, %p, %p)
%R = siginterrupt(%d, %y)
%R = signalfd (%d, %p, %y)
%R = sigpause(%y)
%R = sigprocmask (%d, %p, %p)
%R = sigsuspend(%p)
%R = socket(%d, %d (flags %y), %d)
%R = socketpair(...)
%R = statvfs(%s,%p)
%R = tcdrain(%d)
%R = tcflow(%d, %d)
%R = tcflush(%d, %d)
%R = tcgetattr(%d, %p)
%R = tcgetpgrp(%d)
%R = tcgetsid(%d)
%R = tcsendbreak(%d, %d)
%R = tcsetattr(%d, %d, %p)
%R = tcsetpgrp(%d, %d)
%R = timerfd_create (%lu, %y)
%R = truncate(%s, %D)
%R = unlink(%s)
%R = utimes(%S, %p)
%R = wait4(%d, %y, %d, %p)
%R =getsockname (%d, %p, %p)
%S+0x%x
%S, return bin_status %d
%S, return status = %y
%U.%02u %U.%02u\n
%W (using %W) loaded in wrong place: %p != %p
%W: Loaded to different address: parent(%p) != child(%p)
%W:*:%u:%u:%s%sU-%W\%W,%s:%s%W:%s
%W:*:%u:%u:U-%W\%W,%s:/:/sbin/nologin
%a %b %e %H:%M:%S %Y
%a %b %e %H:%M:%S %Z %Y
%d %d %d:%d / %s %s - %s %s %s\n
%d (%s) %c %d %d %d %d %d %u %lu %lu %u %u %U %U %U %U %d %d %d %d %U %lu %ld %lu\n
%d (err %d) = ReadFile (%p, %p, to_read %u, read %u, 0)
%d (err %d) = WriteFile (%p, %p, write %u, written %u, 0)
%d = (%S,%p)
%d = CloseHandle (%p, %W): %E
%d = ReleaseMutex (%p, %W)
%d = SetNamedPipeHandleState (%y, PIPE_NOWAIT, NULL, NULL)
%d = _pinfo::kill (%d), pid %d, process_state %y
%d = alarm(%u)
%d = clock_nanosleep(%lu, %d, %ld.%09ld, %ld.%09.ld)
%d = closedir(%p)
%d = closedir(%p, %s)
%d = conv_to_posix_path(%s)
%d = cygwait (...)
%d = fhandler_base::open(%S, %y)
%d = fhandler_base::open_null (%y)
%d = fhandler_disk_file::open(%S, %y)
%d = fhandler_proc::open(%p, 0%o)
%d = fhandler_proc::open(%y, 0%o)
%d = fhandler_procsys::open(%p, 0%o)
%d = fhandler_registry::open(%p, 0%o)
%d = fstatvfs(%s, %p)
%d = futimens(%d, %p)
%d = getgrouplist(%s, %u, %p, %d)
%d = getpid()
%d = getppid()
%d = ioctl(%x)
%d = ioctl(%x, %p)
%d = ioctl_file(%x, %p)
%d = ioctl_socket(%x, %p)
%d = ioctl_timerfd(%x, %p)
%d = posix_madvise(%p, %lu, %d)
%d = pread(%p, %ld, %D, %p)\n
%d = pthread_sigmask(%d, %p, %p)
%d = pwrite(%p, %ld, %D, %p)\n
%d = read(%p, %lu)
%d = read_ea(%S, %s, %p, %lu)
%d = readdir(%p, %p)
%d = readdir(%p, %p) (%s)
%d = readdir(%p, %p) (L"%lS" > "%ls") (attr %y > type %d)
%d = set_privilege((token %p) %W, %d)
%d = setsockopt(SO_EXCLUSIVEADDRUSE), %E
%d = sig_send, %E 
%d = symlink.check(%s, %p) (mount_flags %y, path_flags %y)
%d = symlink_worker(%s, %s, %d)
%d = time(%p)
%d = ualarm(%ld , %ld)
%d = write_ea(%S, %s, %p, %lu, %d)
%d blocks in Qisr2app
%d.%d.%d(%d.%d/%d/%d)
%d=tcflush(%d)
%hu %c %08x-%08x-%08x-%08x
%lR = pread(%d, %p, %d, %d)
%lR = pwrite(%d, %p, %d, %d)
%lR = read(%d, %p, %d)
%lR = readv(%d, %p, %d)
%lR = recv(%d, %p, %ld, %y)
%lR = recvfrom(%d, %p, %ld, %y, %p, %p)
%lR = recvmsg(%d, %p, %y)
%lR = send(%d, %p, %ld, %y)
%lR = sendmsg(%d, %p, %y)
%lR = sendto(%d, %p, %ld, %y, %p, %d)
%lR = write(%d, %p, %d)
%lR = writev(%d, %p, %d)
%ld = fhandler_console::write(...)
%lld
%lu %lu %lu %lu %lu %lu 0\n
%p (status %p) = NtMapViewOfSection (h:%p, addr:%p, len:%lu, off:%Y, protect:%y, type:%y)
%p (status %p) = NtMapViewOfSectionEx (h:%p, addr:%p, off:%Y, viewsize:%U, alloc_type:%y, protect:%y
%p = CreateMutexW (%W): %E
%p = fhandler_serial::open (%s, %y, 0%o)
%p = getprotoent()
%p = getservbyname (%s, %s)
%p = getservbyport (%d, %s)
%p = getservent()
%p = mmap() 
%p = opendir (%s)
%p = readdir (%p)
%p = readdir (%p) (%s)
%p = signal (%d, %p)
%p sending signal %d
%p starting thread
%p timer armed
%p timer disarmed, %E
%p timer expired
%p timer signal already queued
%p timer thread already queued
%p wait failed, %E
%s %s %s %s %d %d\n
%s %s copy failed, %p..%p, done %lu, windows pid %u, %E
%s %s, %susecount %d
%s (called func)
%s - %E, handle %s<%p>
%s - hp %p low %p, high %p, res %d
%s = conv_to_posix_path (%s)
%s = find_exec (%s)
%s = normalize_posix_path (%s)
%s = normalize_win32_path (%s)
%s S4U LsaLogonUser failed: %y
%s S4U LsaLogonUser failed: %y (%s)
%s Section %d Type %u Windows Record Length %u\n
%s and %s are the same file
%s failed: %u
%s failed: %u --> %u from '%W': '%W'
%s handle %p is bad
%s is a non-directory
%s is not a valid executable
%s is possibly a script
%s magic number mismatch detected - %p/%ly
%s mismatch detected - %ly/%ly.\nThis problem is probably due to using incompatible versions of the cygwin DLL.\nSearch for cygwin1.dll using the Windows Start->Find/Search facility\nand delete all but the most recent version.  The most recent version *should*\nreside in x:\cygwin\bin, where 'x' is the drive on which you have\ninstalled the cygwin distribution.  Rebooting is also suggested if you\nare unable to find another cygwin DLL.
%s name '%s' too long
%s returns %d, id %y
%s version %s (%s@%s) (%s) %s\n
%s would have returned NULL
%s%012X
%s%c%s%c%s%c%s
%s%s%s\t\t%llu%s\t%llu%s\t%d\n
%s(%s) release %d
%s, already ready for read
%s, bg I/O pgid %d, tpgid %d, myctty %s
%s, pgid %d, sid %d, tsid %d
%s/%s%016X%016X
%s/.netrc
%s: Win32 error %d
%s: error while loading shared libraries: %s: cannot open shared object file: No such file or directory\n
%s:%d - winsock error %u -> errno %d
%s:%d setting errno %d
%s:%d status %y -> windows error %u
%s:%d windows error %u
%s[%s], %s[%s], %y
%u %D->%D : %D->%D
%u = WFSO (%p, %W)
%u = WFSO (%p, %W, 1)
%u = waveInAddBuffer(%p)
%u = waveInClose()
%u = waveInOpen(freq=%d bits=%d channels=%d)
%u = waveInOpen(rate=%d bits=%d channels=%d)
%u = waveInPrepareHeader(%p)
%u = waveInReset()
%u = waveInStart(), queued=%d
%u = waveInUnprepareHeader(%p)
%u = waveOutClose()
%u = waveOutOpen(freq=%d bits=%d channels=%d)
%u = waveOutPrepareHeader(%p)
%u = waveOutReset()
%u = waveOutUnprepareHeader(%p)
%u = waveOutWrite(%p)
%u == pgrp %u, send SIG{HUP,CONT} to stopped children
%u == sid %u, send SIGHUP to children
%u.%02u %u.%02u %u.%02u %u/%u\n
%u.%u.%u.%u
%u.%u.%u.%u%c
%y = NtCreateFile (%S)
%y = NtCreateFile (%p, %W)
%y = NtCreateFile (%p, %y, %S, io, NULL, %y, %y, %y, %y, NULL, 0)
%y = NtCreateFile (%p, ... %S ...)
%y = NtCreateFile (%p, dir %W)
%y = NtCreateTimer ()\n
%y = NtFsControlFile(%S, FSCTL_GET_NTFS_VOLUME_DATA)
%y = NtFsControlFile(%S, FSCTL_SET_SPARSE)
%y = NtOpenFile (%p, %y, %S, io, %y, %y)
%y = NtOpenFile (%p, a %xh, sh %xh, o %xh, io %y, '%W')
%y = NtOpenFile (%p, a %xh, sh %xh, o %xh, io %y, by id %llX)
%y = NtOpenFile (no-EAs %S)
%y = NtOpenFile(%S)
%y = NtQueryDirectoryFile (%p, io %y, info %d)
%y = NtQueryDirectoryFile(%S)
%y = NtQueryInformationFile (%S)
%y = NtQueryInformationFile(%S, FileAllInformation)
%y = NtQueryVolumeInformationFile(%S, FileFsFullSizeInformation)
%y = NtQueryVolumeInformationFile(%S, FileFsSizeInformation)
%y = NtReadFile(%S)
%y = NtSetInformationFile (%p, FileLink %W, iosb.Status %y)
%y = NtSetTimer (%D)\n
'Yck:
(!_buf && !_buflen) || (_buf && _buflen)
(%S, %p, %p), file_attributes %d
(%d): Failed to acquire input_mutex %08x
(%d): Failed to acquire output_mutex %08x
(%d): pty output_mutex (%p): waiting %d ms
(%d): pty output_mutex(%p) released
(%d): pty output_mutex: acquired
(%d<%S>, %p) returning %s
(%ld) = %p, called by %p
(%ld, %ld) = %p, called by %p
(%p), called by %p
(%p, %ld) = %p, called by %p
(%s) = cwdstuff::get (%p, %u, %d, %d), errno %d
(%s), take %s%s
(%s, %p), file_attributes %d
(null)
(pid %d, ppid %d, windows pid %u)
(s - envblock) <= tl
(size_t) envc <= (n + winnum + SPENVS_SIZE)
(srcp - envp) == n
(windows pid %u)
)UUU
*** STATUS_%y\n
*** continuing pid %u from debugger call (%d)\n
*** couldn't find pty master
*** starting debugger for pid %u, tid %u\n
*** unknown regexp error code ***
**********************************************
*current entry strdup %p
*mutex %p, attr %p, initializer %p
*native_root != '\0'
*spinlock %p, pshared %d
, function: 
, retrying
,M%d.%d.%d/%d
,M3.2.0,M11.1.0
,~:!@#$%^&'.(){} 
--protected
--wordexp
-1 = chdir (%s)
-1 = dirfd (%p)
-1 = facl (%d)
-1 = fchmod (%d, 0%o)
-1 = fchown (%d,...)
-1 = fexecve (%d, %p, %p)
-1 = fsync (%d)
-1 = readlink (%s, %p, %lu)
-1 [%d] = fixup_shms_after_fork ()
-1 [%d] = msgctl ()
-1 [%d] = msgget ()
-1 [%d] = msgrcv ()
-1 [%d] = msgsnd ()
-1 [%d] = semctl ()
-1 [%d] = semget ()
-1 [%d] = semop ()
-1 [%d] = shmat ()
-1 [%d] = shmctl ()
-1 [%d] = shmdt ()
-1 [%d] = shmget ()
...O/S reports state %d
...and DuplicateHandle failed with %E.
./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
.bat
.btm
.cmd
.cyg_tmp_
.dll
.exe
.lib section in a.out corrupted
.lnk
.rhosts fstat failed
.rhosts lstat failed
.rhosts not regular file
.rhosts writeable by other than owner
/VirtualStore/MACHINE/SOFTWARE
/VirtualStore/MACHINE/SOFTWARE/Classes
/bin
/bin/bash
/bin/csh
/bin/cygwin-console-helper.exe
/bin/sh
/bin:/usr/bin
/cygdrive
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/stdlib/dtoa.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/stdlib/gdtoa-dmisc.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/stdlib/gdtoa-gethex.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/stdlib/mprec.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/stdlib/strtodg.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/newlib/libc/xdr/xdr_rec.c
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygserver/client.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygserver/transport_pipes.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/dlfcn.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/environ.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/base.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/clipboard.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/console.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/disk_file.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/fifo.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/floppy.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/mqueue.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/pipe.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/proc.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/process.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/process_fd.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/procsys.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/pty.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/random.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/raw.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/registry.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/serial.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/socket_inet.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/socket_local.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/tape.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fhandler/windows.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/flock.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/fork.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/grp.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/hookapi.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/local_includes/select.h
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/mm/cygheap.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/mm/mmap.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/mount.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/net.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/ntea.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/path.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/pinfo.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/posix_timer.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/quotactl.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/resource.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sec/acl.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sec/auth.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sec/base.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sec/helper.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/setlsapwd.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/shm.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/signal.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sigproc.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/spawn.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/syscalls.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/sysconf.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/thread.cc
/cygdrive/d/a/scallywag/cygwin/cygwin-3.4.9-1.x86_64/src/newlib-cygwin/winsup/cygwin/uinfo.cc
/dev
/dev/clipboard
/dev/com1
/dev/com10
/dev/com11
/dev/com12
/dev/com13
/dev/com14
/dev/com15
/dev/com16
/dev/com2
/dev/com3
/dev/com4
/dev/com5
/dev/com6
/dev/com7
/dev/com8
/dev/com9
/dev/conin
/dev/conout
/dev/cons0
/dev/cons1
/dev/cons10
/dev/cons100
/dev/cons101
/dev/cons102
/dev/cons103
/dev/cons104
/dev/cons105
/dev/cons106
/dev/cons107
/dev/cons108
/dev/cons109
/dev/cons11
/dev/cons110
/dev/cons111
/dev/cons112
/dev/cons113
/dev/cons114
/dev/cons115
/dev/cons116
/dev/cons117
/dev/cons118
/dev/cons119
/dev/cons12
/dev/cons120
/dev/cons121
/dev/cons122
/dev/cons123
/dev/cons124
/dev/cons125
/dev/cons126
/dev/cons127
/dev/cons13
/dev/cons14
/dev/cons15
/dev/cons16
/dev/cons17
/dev/cons18
/dev/cons19
/dev/cons2
/dev/cons20
/dev/cons21
/dev/cons22
/dev/cons23
/dev/cons24
/dev/cons25
/dev/cons26
/dev/cons27
/dev/cons28
/dev/cons29
/dev/cons3
/dev/cons30
/dev/cons31
/dev/cons32
/dev/cons33
/dev/cons34
/dev/cons35
/dev/cons36
/dev/cons37
/dev/cons38
/dev/cons39
/dev/cons4
/dev/cons40
/dev/cons41
/dev/cons42
/dev/cons43
/dev/cons44
/dev/cons45
/dev/cons46
/dev/cons47
/dev/cons48
/dev/cons49
/dev/cons5
/dev/cons50
/dev/cons51
/dev/cons52
/dev/cons53
/dev/cons54
/dev/cons55
/dev/cons56
/dev/cons57
/dev/cons58
/dev/cons59
/dev/cons6
/dev/cons60
/dev/cons61
/dev/cons62
/dev/cons63
/dev/cons64
/dev/cons65
/dev/cons66
/dev/cons67
/dev/cons68
/dev/cons69
/dev/cons7
/dev/cons70
/dev/cons71
/dev/cons72
/dev/cons73
/dev/cons74
/dev/cons75
/dev/cons76
/dev/cons77
/dev/cons78
/dev/cons79
/dev/cons8
/dev/cons80
/dev/cons81
/dev/cons82
/dev/cons83
/dev/cons84
/dev/cons85
/dev/cons86
/dev/cons87
/dev/cons88
/dev/cons89
/dev/cons9
/dev/cons90
/dev/cons91
/dev/cons92
/dev/cons93
/dev/cons94
/dev/cons95
/dev/cons96
/dev/cons97
/dev/cons98
/dev/cons99
/dev/console
/dev/dsp
/dev/dsp: ioctl %s
/dev/fd
/dev/fd0
/dev/fd1
/dev/fd10
/dev/fd11
/dev/fd12
/dev/fd13
/dev/fd14
/dev/fd15
/dev/fd2
/dev/fd3
/dev/fd4
/dev/fd5
/dev/fd6
/dev/fd7
/dev/fd8
/dev/fd9
/dev/fifo
/dev/full
/dev/mqueue
/dev/mqueue/
/dev/nst0
/dev/nst1
/dev/nst10
/dev/nst100
/dev/nst101
/dev/nst102
/dev/nst103
/dev/nst104
/dev/nst105
/dev/nst106
/dev/nst107
/dev/nst108
/dev/nst109
/dev/nst11
/dev/nst110
/dev/nst111
/dev/nst112
/dev/nst113
/dev/nst114
/dev/nst115
/dev/nst116
/dev/nst117
/dev/nst118
/dev/nst119
/dev/nst12
/dev/nst120
/dev/nst121
/dev/nst122
/dev/nst123
/dev/nst124
/dev/nst125
/dev/nst126
/dev/nst127
/dev/nst13
/dev/nst14
/dev/nst15
/dev/nst16
/dev/nst17
/dev/nst18
/dev/nst19
/dev/nst2
/dev/nst20
/dev/nst21
/dev/nst22
/dev/nst23
/dev/nst24
/dev/nst25
/dev/nst26
/dev/nst27
/dev/nst28
/dev/nst29
/dev/nst3
/dev/nst30
/dev/nst31
/dev/nst32
/dev/nst33
/dev/nst34
/dev/nst35
/dev/nst36
/dev/nst37
/dev/nst38
/dev/nst39
/dev/nst4
/dev/nst40
/dev/nst41
/dev/nst42
/dev/nst43
/dev/nst44
/dev/nst45
/dev/nst46
/dev/nst47
/dev/nst48
/dev/nst49
/dev/nst5
/dev/nst50
/dev/nst51
/dev/nst52
/dev/nst53
/dev/nst54
/dev/nst55
/dev/nst56
/dev/nst57
/dev/nst58
/dev/nst59
/dev/nst6
/dev/nst60
/dev/nst61
/dev/nst62
/dev/nst63
/dev/nst64
/dev/nst65
/dev/nst66
/dev/nst67
/dev/nst68
/dev/nst69
/dev/nst7
/dev/nst70
/dev/nst71
/dev/nst72
/dev/nst73
/dev/nst74
/dev/nst75
/dev/nst76
/dev/nst77
/dev/nst78
/dev/nst79
/dev/nst8
/dev/nst80
/dev/nst81
/dev/nst82
/dev/nst83
/dev/nst84
/dev/nst85
/dev/nst86
/dev/nst87
/dev/nst88
/dev/nst89
/dev/nst9
/dev/nst90
/dev/nst91
/dev/nst92
/dev/nst93
/dev/nst94
/dev/nst95
/dev/nst96
/dev/nst97
/dev/nst98
/dev/nst99
/dev/null
/dev/pipe
/dev/ptmx
/dev/pty%d
/dev/pty0
/dev/pty1
/dev/pty10
/dev/pty100
/dev/pty101
/dev/pty102
/dev/pty103
/dev/pty104
/dev/pty105
/dev/pty106
/dev/pty107
/dev/pty108
/dev/pty109
/dev/pty11
/dev/pty110
/dev/pty111
/dev/pty112
/dev/pty113
/dev/pty114
/dev/pty115
/dev/pty116
/dev/pty117
/dev/pty118
/dev/pty119
/dev/pty12
/dev/pty120
/dev/pty121
/dev/pty122
/dev/pty123
/dev/pty124
/dev/pty125
/dev/pty126
/dev/pty127
/dev/pty13
/dev/pty14
/dev/pty15
/dev/pty16
/dev/pty17
/dev/pty18
/dev/pty19
/dev/pty2
/dev/pty20
/dev/pty21
/dev/pty22
/dev/pty23
/dev/pty24
/dev/pty25
/dev/pty26
/dev/pty27
/dev/pty28
/dev/pty29
/dev/pty3
/dev/pty30
/dev/pty31
/dev/pty32
/dev/pty33
/dev/pty34
/dev/pty35
/dev/pty36
/dev/pty37
/dev/pty38
/dev/pty39
/dev/pty4
/dev/pty40
/dev/pty41
/dev/pty42
/dev/pty43
/dev/pty44
/dev/pty45
/dev/pty46
/dev/pty47
/dev/pty48
/dev/pty49
/dev/pty5
/dev/pty50
/dev/pty51
/dev/pty52
/dev/pty53
/dev/pty54
/dev/pty55
/dev/pty56
/dev/pty57
/dev/pty58
/dev/pty59
/dev/pty6
/dev/pty60
/dev/pty61
/dev/pty62
/dev/pty63
/dev/pty64
/dev/pty65
/dev/pty66
/dev/pty67
/dev/pty68
/dev/pty69
/dev/pty7
/dev/pty70
/dev/pty71
/dev/pty72
/dev/pty73
/dev/pty74
/dev/pty75
/dev/pty76
/dev/pty77
/dev/pty78
/dev/pty79
/dev/pty8
/dev/pty80
/dev/pty81
/dev/pty82
/dev/pty83
/dev/pty84
/dev/pty85
/dev/pty86
/dev/pty87
/dev/pty88
/dev/pty89
/dev/pty9
/dev/pty90
/dev/pty91
/dev/pty92
/dev/pty93
/dev/pty94
/dev/pty95
/dev/pty96
/dev/pty97
/dev/pty98
/dev/pty99
/dev/ptym0
/dev/ptym1
/dev/ptym10
/dev/ptym100
/dev/ptym101
/dev/ptym102
/dev/ptym103
/dev/ptym104
/dev/ptym105
/dev/ptym106
/dev/ptym107
/dev/ptym108
/dev/ptym109
/dev/ptym11
/dev/ptym110
/dev/ptym111
/dev/ptym112
/dev/ptym113
/dev/ptym114
/dev/ptym115
/dev/ptym116
/dev/ptym117
/dev/ptym118
/dev/ptym119
/dev/ptym12
/dev/ptym120
/dev/ptym121
/dev/ptym122
/dev/ptym123
/dev/ptym124
/dev/ptym125
/dev/ptym126
/dev/ptym127
/dev/ptym13
/dev/ptym14
/dev/ptym15
/dev/ptym16
/dev/ptym17
/dev/ptym18
/dev/ptym19
/dev/ptym2
/dev/ptym20
/dev/ptym21
/dev/ptym22
/dev/ptym23
/dev/ptym24
/dev/ptym25
/dev/ptym26
/dev/ptym27
/dev/ptym28
/dev/ptym29
/dev/ptym3
/dev/ptym30
/dev/ptym31
/dev/ptym32
/dev/ptym33
/dev/ptym34
/dev/ptym35
/dev/ptym36
/dev/ptym37
/dev/ptym38
/dev/ptym39
/dev/ptym4
/dev/ptym40
/dev/ptym41
/dev/ptym42
/dev/ptym43
/dev/ptym44
/dev/ptym45
/dev/ptym46
/dev/ptym47
/dev/ptym48
/dev/ptym49
/dev/ptym5
/dev/ptym50
/dev/ptym51
/dev/ptym52
/dev/ptym53
/dev/ptym54
/dev/ptym55
/dev/ptym56
/dev/ptym57
/dev/ptym58
/dev/ptym59
/dev/ptym6
/dev/ptym60
/dev/ptym61
/dev/ptym62
/dev/ptym63
/dev/ptym64
/dev/ptym65
/dev/ptym66
/dev/ptym67
/dev/ptym68
/dev/ptym69
/dev/ptym7
/dev/ptym70
/dev/ptym71
/dev/ptym72
/dev/ptym73
/dev/ptym74
/dev/ptym75
/dev/ptym76
/dev/ptym77
/dev/ptym78
/dev/ptym79
/dev/ptym8
/dev/ptym80
/dev/ptym81
/dev/ptym82
/dev/ptym83
/dev/ptym84
/dev/ptym85
/dev/ptym86
/dev/ptym87
/dev/ptym88
/dev/ptym89
/dev/ptym9
/dev/ptym90
/dev/ptym91
/dev/ptym92
/dev/ptym93
/dev/ptym94
/dev/ptym95
/dev/ptym96
/dev/ptym97
/dev/ptym98
/dev/ptym99
/dev/random
/dev/scd0
/dev/scd1
/dev/scd10
/dev/scd11
/dev/scd12
/dev/scd13
/dev/scd14
/dev/scd15
/dev/scd2
/dev/scd3
/dev/scd4
/dev/scd5
/dev/scd6
/dev/scd7
/dev/scd8
/dev/scd9
/dev/sd
/dev/shm
/dev/sr0
/dev/sr1
/dev/sr10
/dev/sr11
/dev/sr12
/dev/sr13
/dev/sr14
/dev/sr15
/dev/sr2
/dev/sr3
/dev/sr4
/dev/sr5
/dev/sr6
/dev/sr7
/dev/sr8
/dev/sr9
/dev/st0
/dev/st1
/dev/st10
/dev/st100
/dev/st101
/dev/st102
/dev/st103
/dev/st104
/dev/st105
/dev/st106
/dev/st107
/dev/st108
/dev/st109
/dev/st11
/dev/st110
/dev/st111
/dev/st112
/dev/st113
/dev/st114
/dev/st115
/dev/st116
/dev/st117
/dev/st118
/dev/st119
/dev/st12
/dev/st120
/dev/st121
/dev/st122
/dev/st123
/dev/st124
/dev/st125
/dev/st126
/dev/st127
/dev/st13
/dev/st14
/dev/st15
/dev/st16
/dev/st17
/dev/st18
/dev/st19
/dev/st2
/dev/st20
/dev/st21
/dev/st22
/dev/st23
/dev/st24
/dev/st25
/dev/st26
/dev/st27
/dev/st28
/dev/st29
/dev/st3
/dev/st30
/dev/st31
/dev/st32
/dev/st33
/dev/st34
/dev/st35
/dev/st36
/dev/st37
/dev/st38
/dev/st39
/dev/st4
/dev/st40
/dev/st41
/dev/st42
/dev/st43
/dev/st44
/dev/st45
/dev/st46
/dev/st47
/dev/st48
/dev/st49
/dev/st5
/dev/st50
/dev/st51
/dev/st52
/dev/st53
/dev/st54
/dev/st55
/dev/st56
/dev/st57
/dev/st58
/dev/st59
/dev/st6
/dev/st60
/dev/st61
/dev/st62
/dev/st63
/dev/st64
/dev/st65
/dev/st66
/dev/st67
/dev/st68
/dev/st69
/dev/st7
/dev/st70
/dev/st71
/dev/st72
/dev/st73
/dev/st74
/dev/st75
/dev/st76
/dev/st77
/dev/st78
/dev/st79
/dev/st8
/dev/st80
/dev/st81
/dev/st82
/dev/st83
/dev/st84
/dev/st85
/dev/st86
/dev/st87
/dev/st88
/dev/st89
/dev/st9
/dev/st90
/dev/st91
/dev/st92
/dev/st93
/dev/st94
/dev/st95
/dev/st96
/dev/st97
/dev/st98
/dev/st99
/dev/stderr
/dev/stdin
/dev/stdout
/dev/tty
/dev/ttyS0
/dev/ttyS1
/dev/ttyS10
/dev/ttyS100
/dev/ttyS101
/dev/ttyS102
/dev/ttyS103
/dev/ttyS104
/dev/ttyS105
/dev/ttyS106
/dev/ttyS107
/dev/ttyS108
/dev/ttyS109
/dev/ttyS11
/dev/ttyS110
/dev/ttyS111
/dev/ttyS112
/dev/ttyS113
/dev/ttyS114
/dev/ttyS115
/dev/ttyS116
/dev/ttyS117
/dev/ttyS118
/dev/ttyS119
/dev/ttyS12
/dev/ttyS120
/dev/ttyS121
/dev/ttyS122
/dev/ttyS123
/dev/ttyS124
/dev/ttyS125
/dev/ttyS126
/dev/ttyS127
/dev/ttyS13
/dev/ttyS14
/dev/ttyS15
/dev/ttyS16
/dev/ttyS17
/dev/ttyS18
/dev/ttyS19
/dev/ttyS2
/dev/ttyS20
/dev/ttyS21
/dev/ttyS22
/dev/ttyS23
/dev/ttyS24
/dev/ttyS25
/dev/ttyS26
/dev/ttyS27
/dev/ttyS28
/dev/ttyS29
/dev/ttyS3
/dev/ttyS30
/dev/ttyS31
/dev/ttyS32
/dev/ttyS33
/dev/ttyS34
/dev/ttyS35
/dev/ttyS36
/dev/ttyS37
/dev/ttyS38
/dev/ttyS39
/dev/ttyS4
/dev/ttyS40
/dev/ttyS41
/dev/ttyS42
/dev/ttyS43
/dev/ttyS44
/dev/ttyS45
/dev/ttyS46
/dev/ttyS47
/dev/ttyS48
/dev/ttyS49
/dev/ttyS5
/dev/ttyS50
/dev/ttyS51
/dev/ttyS52
/dev/ttyS53
/dev/ttyS54
/dev/ttyS55
/dev/ttyS56
/dev/ttyS57
/dev/ttyS58
/dev/ttyS59
/dev/ttyS6
/dev/ttyS60
/dev/ttyS61
/dev/ttyS62
/dev/ttyS63
/dev/ttyS64
/dev/ttyS65
/dev/ttyS66
/dev/ttyS67
/dev/ttyS68
/dev/ttyS69
/dev/ttyS7
/dev/ttyS70
/dev/ttyS71
/dev/ttyS72
/dev/ttyS73
/dev/ttyS74
/dev/ttyS75
/dev/ttyS76
/dev/ttyS77
/dev/ttyS78
/dev/ttyS79
/dev/ttyS8
/dev/ttyS80
/dev/ttyS81
/dev/ttyS82
/dev/ttyS83
/dev/ttyS84
/dev/ttyS85
/dev/ttyS86
/dev/ttyS87
/dev/ttyS88
/dev/ttyS89
/dev/ttyS9
/dev/ttyS90
/dev/ttyS91
/dev/ttyS92
/dev/ttyS93
/dev/ttyS94
/dev/ttyS95
/dev/ttyS96
/dev/ttyS97
/dev/ttyS98
/dev/ttyS99
/dev/urandom
/dev/windows
/dev/zero
/etc/hosts.equiv
/etc/localtime
/etc/resolv.conf
/etc/resolv.conf line: %s
/etc/resolv.conf: %s\n
/etc/shells
/home/
/home/%s
/lib
/mnt
/pdG
/proc
/proc/%*d/fd/pipe:[%llu]
/proc/%*d/fd/socket:[%lld]
/proc/%d/fd/pipe:[%llu]
/proc/registry32
/proc/registry64
/proc/self/fd
/proc/self/fd/0
/proc/self/fd/1
/proc/self/fd/2
/proc/sys
/tmp
/usr/bin
/usr/bin/csh
/usr/bin/sh
/usr/lib
/usr/share/locale/%L/%N.cat:/usr/share/locale/%L/LC_MESSAGES/%N.cat:/usr/share/locale/%L/%N:/usr/share/locale/%L/LC_MESSAGES/%N:/usr/share/locale/%l/%N.cat:/usr/share/locale/%l/LC_MESSAGES/%N.cat:/usr/share/locale/%l/%N:/usr/share/locale/%l/LC_MESSAGES/%N
/usr/share/locale/locale.alias
/usr/share/terminfo/%02x/%s
/usr/share/zoneinfo/
/var/log/wtmp
/var/run/utmp
0 = fhandler_serial:tcsendbreak (%d)
0 = fstat (%S, %p) st_size=%D, st_mode=0%o, st_ino=%Dst_atim=%lx.%lx st_ctim=%lx.%lx st_mtim=%lx.%lx st_birthtim=%lx.%lx
0 = initgroups(%s, %u)
0 = munmap(): %p
0$v}s
0000000000000000                
0000000000000000                e%ld
0123456789
0123456789ABCDEF
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
0123456789abcdef
03wR
09\vXJ
0Him\f
100ms
1h!"3
2023-09-06 11:19
20866
21866
3.4.9-1
3.n6 
4K macro buffer exceeded
5.5G9
5KdT9j(
6`/~Kp0
7e!C7
8859
8D.`=DG
8vpk
96_5
9Fgb<\r
9\t5\ty
:fifo
:pipe
:ptym0
:ptym1
:ptym10
:ptym100
:ptym101
:ptym102
:ptym103
:ptym104
:ptym105
:ptym106
:ptym107
:ptym108
:ptym109
:ptym11
:ptym110
:ptym111
:ptym112
:ptym113
:ptym114
:ptym115
:ptym116
:ptym117
:ptym118
:ptym119
:ptym12
:ptym120
:ptym121
:ptym122
:ptym123
:ptym124
:ptym125
:ptym126
:ptym127
:ptym13
:ptym14
:ptym15
:ptym16
:ptym17
:ptym18
:ptym19
:ptym2
:ptym20
:ptym21
:ptym22
:ptym23
:ptym24
:ptym25
:ptym26
:ptym27
:ptym28
:ptym29
:ptym3
:ptym30
:ptym31
:ptym32
:ptym33
:ptym34
:ptym35
:ptym36
:ptym37
:ptym38
:ptym39
:ptym4
:ptym40
:ptym41
:ptym42
:ptym43
:ptym44
:ptym45
:ptym46
:ptym47
:ptym48
:ptym49
:ptym5
:ptym50
:ptym51
:ptym52
:ptym53
:ptym54
:ptym55
:ptym56
:ptym57
:ptym58
:ptym59
:ptym6
:ptym60
:ptym61
:ptym62
:ptym63
:ptym64
:ptym65
:ptym66
:ptym67
:ptym68
:ptym69
:ptym7
:ptym70
:ptym71
:ptym72
:ptym73
:ptym74
:ptym75
:ptym76
:ptym77
:ptym78
:ptym79
:ptym8
:ptym80
:ptym81
:ptym82
:ptym83
:ptym84
:ptym85
:ptym86
:ptym87
:ptym88
:ptym89
:ptym9
:ptym90
:ptym91
:ptym92
:ptym93
:ptym94
:ptym95
:ptym96
:ptym97
:ptym98
:ptym99
:sock:
<2ZGU
<8bunz8
<9Gl)
<NULL>
<defunct>
<null!>
<unknown module>: 
<x5a
=> ptr_s=%p len_s=%d
=@zj?@L~@@\GA@l
=a30?-W
=~VY-Fd
>dw%l
?0yx
?1cb
?4\fZ2
?8bunz8
?8pz
?<TUUUU
?CD57
?IUUUUU
?L%Tk
?NUY
?Ry\tqf
?UUUUUU
?XXVx
?\rUUUUU
?aCoc
?b-qB
?bHS
?cUUUUU
?hPK
?i!VPCr(
?nWr
?v<y5
@(knN
@8iYP}
@XMU
@`M|kpN
@cjknarrow
@cyrillic
@euro
@iqtelif
@latin
A0PQ
AAAAAA
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
ABRT
ACCMODE=%y audio_in=%d audio_out=%d, err=%d, ret=%d
ACL-Size: %u
AF_LOCAL: bind failed
AF_LOCAL: getsockname failed
AF_LOCAL: socket bound to port %u
ALRM
ANSI_X3.4-1968
ASCII
ASYNCIO
AS\tN;
AS]N;
ASkQ;
ASmQ;
AUTHZ_CLIENT_CONTEXT_HANDLE__* authz_ctx_cache::context(PSID)
Aborted
Accessing a corrupted shared library
Account disabled
Add CREATE_BREAKAWAY_FROM_JOB
Adding <%S> lock failed
Address already in use
Address family for hostname not supported
Address family not supported by protocol
Advertise error
Alarm clock
Allocating
AllocationBase %p, BaseAddress %p, RegionSize %lx, State %x\n
An argument buffer overflowed
App version:  %d.%d, api: %d.%d
April
Argument list too long
Async I/O on socket %s
Attempt to execute a cleanup handler across threads
Attempt to push a cleanup handler across threads
Attempting to link in too many shared libraries
August
AuthenticAMD
AuthzInitializeContextFromSid, %E
AuthzInitializeContextFromToken, %E
AuthzInitializeResourceManager, %E
BBBBBB
BEGIN_CYGWIN_VERSION_INFO\n%%% Cygwin dll major: 3004\n%%% Cygwin dll minor: 9\n%%% Cygwin api major: 0\n%%% Cygwin api minor: 345\n%%% Cygwin shared data: 5\n%%% Cygwin dll identifier: cygwin1\n%%% Cygwin mount registry: 3\n%%% Cygwin cygwin registry name: Cygwin\n%%% Cygwin installations name: Installations\n%%% Cygwin cygdrive default prefix: \n%%% Cygwin build date: \n%%% Cygwin shared id: cygwin1S5\nEND_CYGWIN_VERSION_INFO\n
BEz\fB
BIG5
BLKALIGNOFF
BLKGETSIZE
BLKIOMIN
BLKIOOPT
BLKPBSZGET
BLKRRPART
BLKSSZGET
BOOL fhandler_dev_floppy::lock_partition(DWORD)
BOOL fhandler_dev_floppy::read_file(void*, DWORD, DWORD*, int*)
BOOL fhandler_dev_floppy::write_file(const void*, DWORD, DWORD*, int*)
BSD locking on nohandle and old-style console devices not supported
Bad address
Bad file descriptor
Bad font file format
Bad message
Bad system call
Bad value for ai_flags
Balloc succeeded
Block device required
Broken pipe
Bus error
C.UTF-8
CAk[S
CHLD
COMMONPROGRAMFILES=
COMSPEC=
CONOUT$
CONT
CP101
CP102
CP1251
CP20866
CP21866
CP874
CP932
CPSTW
CPU time limit exceeded
CQt^;
CYGWIN
CYGWIN=
CYGWIN_%s
CYGWIN_%s-%u
CYGWIN_MISMATCH_OK
CYGWIN_TESTING
Calling ExitProcess n %y, exitcode %y
Calling dlls.cleanup_forkables n %y, exitcode %y
Can not access a needed shared library
Can't add a client handler, %E
Can't add client handler, %E
Can't create connection event, %E
Can't create event, %E
Can't create per-thread mutex, %E
Can't create reader thread cancel event during exec, %E
Can't create reader thread cancel event during fork, %E
Can't create reader thread sync event during exec, %E
Can't create reader thread sync event during fork, %E
Can't duplicate handle of previous owner, %E
Can't fetch linked token (%E), use standard token
Can't initialize Cygwin installation root dir.\nGetModuleFileNameW(%p, %p, %u), %E
Can't initialize Cygwin installation root dir.\nInvalid DLL path
Can't open process of previous owner, %E
Can't recreate shared timerfd section during %s, status %y!
Can't recreate timerfd cancel event during %s, status %y!
Can't recreate timerfd sync event during %s, status %y!
Can't reopen shared fc_handler memory during exec, %E
Can't reopen shared fc_handler memory during fork, %E
Can't reopen shared memory during exec, %E
Can't reopen shared memory during fork, %E
Can't update shared handlers, %E
Cannot access path %S, status %y
Cannot allocate memory
Cannot assign requested address
Cannot delete %S, try delete-on-close
Cannot exec a shared library directly
Cannot get dacl, %E
Cannot get volume attributes (%S), %y
Cannot restore original egid %u
Cannot restore original euid %u
Cannot send after transport endpoint shutdown
Cda`
Changing record below from question to answer\n
Channel number out of range
Character devices:\n%3d mem\n%3d cons\n%3d /dev/tty\n%3d /dev/console\n%3d /dev/ptmx\n%3d st\n%3d misc\n%3d sound\n%3d ttyS\n%3d tty\n\nBlock devices:\n%3d fd\n%3d sd\n%3d sr\n%3d sd\n%3d sd\n%3d sd\n%3d sd\n%3d sd\n%3d sd\n%3d sd\n
Checking if directory %S is empty failed, status = %y
Child exited
Classes
ClearCommError %E
CloseHandle %E
CloseHandle (get_handle ()<%p>), %E
CloseHandle (get_handle_nat ()<%p>), %E
CloseHandle (get_output_handle ()<%p>), %E
CloseHandle (get_output_handle_nat ()<%p>), %E
CloseHandle (input_available_event<%p>), %E
CloseHandle (input_mutex<%p>), %E
CloseHandle (inuse), %E
CloseHandle (output_mutex<%p>), %E
CloseHandle (pipe_sw_mutex<%p>), %E
CloseHandle failed, %E
Closing last master of pty%d
Communication error on send
ConEmuHk64.dll
ConEmuPID
Connection refused
Connection reset by peer
Connection timed out
ContinueDebugEvent
Continued
Costly
Could not create mutex for list synchronisation.
Could not create win32 Mutex for pthread cond static initializer support.
Could not create win32 Mutex for pthread mutex static initializer support.
Could not create win32 Mutex for pthread rwlock static initializer support.
Couldn't acquire %s for(%d,%d), last %d, %E
Couldn't create/open shared socket mutex %S, %y
Couldn't realloc() clipboard buffer for write
Couldn't relock drive after bus reset.
Couldn't reserve/commit %ld bytes of space for cygwin's heap, %E
Couldn't set directory to %S temporarily.\nCannot continue.
CreateDesktop failed, %E
CreateEvent failed. %E
CreateEvent for %s failed, %E
CreateEvent, %E
CreateFile failed, r %p, %E
CreateFile: name %s
CreateFileMapping %W, %E.  Terminating.
CreateMapping failed with %E
CreateMutex hdl_cnt_mtx failed: %E
CreateMutex read_mtx failed: %E
CreatePipe for __SIGCOMMUNE failed, %E
CreateProcess failed, %E
CreateProcessA
CreateProcessW
CreateProcessW (%W, %W, 0, 0, 1, %y, 0, 0, %p, %p)
CreateProcessW failed for '%W'
CreateProfile, HRESULT %x
CreatePseudoConsole() failed. %08x %08x\n
CreateRemoteThread: %E
CreateSemaphore failed. %E
CreateThread failed for %s - %p<%y>, %E
CreateThread failed: this %p, %E
CreateWindowEx %E
CreateWindowStation failed, %E
Created SD-Size: %u
Creating IPC object failed in fork, %E
Creating event failed, %E
Creating file %S for overwriting %S (%S) failed, status = %y
Cygwin
Cygwin WARNING:\n  Couldn't compute FAST_CWD pointer.  This typically occurs if you're using\n  an older Cygwin version on a newer Windows.  Please update to the latest\n  available Cygwin version from https://cygwin.com/.  If the problem persists,\n  please see https://cygwin.com/problems.html\n\n
Cygwin runtime failure: 
D/vp
D0D0H0
D0D0H0|
DC: server: %W
DGRAM
DIR* opendir(const char*)
DLL build:    %s
DLL version:  %d.%d, api: %d.%d
DNn)
DWORD aiowaiter(void*)
DWORD aioworker(void*)
DWORD child_info::proc_retry(HANDLE)
DWORD commune_process(void*)
DWORD create_lock_in_parent(PVOID)
DWORD fhandler_fifo::fifo_reader_thread_func()
DWORD pinfo::status_exit(DWORD)
DWORD proc_waiter(void*)
DWORD thread_console(void*)
DWORD thread_fifo(void*)
DWORD thread_pipe(void*)
DWORD thread_pty_slave(void*)
DWORD thread_socket(void*)
DWORD timer_tracker::thread_func()
DWORD winpids::enum_processes(bool)
December
Delete %S already pending
Deleting Critical Section
Desktop: %W
Destination address required
Device not a stream
Device or resource busy
DeviceIoControl (%S, IOCTL_DISK_GET_PARTITION_INFO{_EX}) %E
DeviceIoControl (%W, FSCTL_LOCK_VOLUME) failed, %E
DeviceIoControl (FSCTL_ALLOW_EXTENDED_DASD_IO) failed, %E
DeviceIoControl (FSCTL_LOCK_VOLUME) failed, %E
DeviceIoControl(%S, IOCTL_DISK_GET_DRIVE_LAYOUT{_EX}): %E
DeviceIoControl(IOCTL_DISK_GET_DRIVE_LAYOUT_EX): %E
Directory %S not empty, found file <%S>, query status = %y
Directory not empty
Discard %d bytes wave header
DisconnectNamedPipe, %E
Disk quota exceeded
DnsQuery for "%s" %d: %u (Windows)\n
DsEnumerateDomainTrusts: %E
Dumb thinko in pthread handling.  Whip the developer.
Dumping stack trace to %S
Duplicate entries
DuplicateHandle (from_master), %E
DuplicateHandle (from_master_nat), %E
DuplicateHandle (lf_obj): %E
DuplicateHandle (to_master), %E
DuplicateHandle (to_master_nat), %E
DuplicateHandle (to_slave), %E
DuplicateHandle (to_slave_nat), %E
DuplicateHandle after STATUS_DELETE_PENDING, %E
DuplicateHandle failed, %E
DuplicateHandle for __SIGCOMMUNE failed, %E
DuplicateTokenEx %E
DuplicateTokenEx: %E
E1cbj<
EDC`
EMT instruction
ENAMETOOLONG
ENAMETOOLONG = normalize_posix_path (%s)
EUC-JP
EUC-KR
EUCCN
EUCJP
EUCKR
EXIT
EgUUU
End of stack trace%s\r\n
Entered
Error opening the pipe (%u)
Error: .netrc file is readable by others.
Error: Current working directory %s.\nCan't start native Windows application from here.\n\n
Exception during process exit
Exception: %s at rip=%012X\r\n
Exchange full
Exec format error
F/dev/null
FAILURE ! fp_ and message_ both 0!! 
FILE* open_system_file(const char*)
FILE* popen(const char*, const char*)
FILE* tmpfile()
Failed to start debugger, %E
Faking chown worked on standalone Samba
February
Fetching account info from cygserver with wrong arg.type %d
File descriptor in bad state
File exists
File locking deadlock error
File name too long
File size limit exceeded
File too large
Filename exists with different case
Filename\t\t\t\tType\t\tSize\t\tUsed\t\tPriority\n
FindFirstVolumeW, %E
Floating point exception
Flushed %d bytes\n
Format tape with %s partition(s)
Found token %p
Friday
Function not implemented
GB2312
GEORGIAN
GEORGIAN-PS
GETFL: %y
GH@7
GMT%+d:%02d
GenuineIntel
GetEnvironmentStrings returned %p
GetEnvironmentStrings returned NULL, %E
GetNetworkParams: OK\n
GetNetworkParams: error %u (Windows)\n
GetProcAddress
GetTapeStatus: %u, get_mp: %d
Global
Global charset set to %s
HASH: Out of overflow pages.  Increase page size\n
HDIO_GETGEO
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
HKEY_PERFORMANCE_DATA
HKEY_USERS
HKEY__* open_key(const char*, REGSAM, DWORD, bool)
HOME
HOME is already in the environment %s
HOME=
HOMEDRIVE=
HOMEPATH=
Hangup
HiUL
Host is down
Host name lookup failure
HygonGenuine
I,OwA
I/O possible
ISO-8859-
ISO-8859-1
ISO-8859-13
ISO-8859-14
ISO-8859-15
ISO-8859-2
ISO-8859-3
ISO-8859-5
ISO-8859-6
ISO-8859-7
ISO-8859-8
ISO-8859-9
Identification requested
Identifier removed
IeA@
Illegal instruction
Illegal seek
ImpersonateLoggedOnUser: %E
ImpersonateNamedPipeClient, %E
Impersonation requested
In cygwin_except_handler exception %y at %p sp %p
In cygwin_except_handler signal %d at %p
Inappropriate file type or format
Inappropriate ioctl for device
Incompatible cygwin .dll -- incompatible per_process info %u != %u
Infinity
InitializeCriticalSection
Inode is remote (not really error)
Input/output error
Installation root: <%W> key: <%S>
IntelTDX    
Internal Error i=%d
Internal cond mutex is not valid. this %p
Internal error: Out of memory for new path buf.
Internal error: Out of memory for new wide path buf.
Internal error: TP_NUM_C_BUFS too small: %u
Internal error: TP_NUM_W_BUFS too small: %u.
Internal rwlock mutex is not valid. this %p
Internal rwlock readers cond is not valid. this %p
Internal rwlock synchronisation mutex is not valid. this %p
Internal rwlock writers cond is not valid. this %p
Interrupt
Interrupted system call
Invalid %s name '%s'
Invalid POSIX id %u
Invalid account name <%s> (backslash/at)
Invalid account name <%s> (fully qualified/local account)
Invalid account name <%s> (fully qualified/not NON_UNIQUE or NT_SERVICE)
Invalid account name <%s> (fully qualified/primary domain account)
Invalid account name <%s> (name only/non machine on non-domain machine)
Invalid account name <%s> (name only/non primary on domain machine)
Invalid argument
Invalid baud rate %u
Invalid byte size %u
Invalid cross-device link
Invalid entry type
Invalid exchange
Invalid how value %d
Invalid nsswitch.conf content: %s
Invalid oflag 0%o
Invalid or incomplete multibyte or wide character
Invalid relocation.  Offset %p at address %p doesn't fit into 32 bits
Invalid request code
Invalid request descriptor
Invalid slot
Invalid t->c_cflag byte size %u
Invalid t->c_ospeed %u
Invalid tcflush queue %d
Invalid value for hints
Is a directory
JanFebMarAprMayJunJulAugSepOctNovDec
January
July
June
K=5k
KILL
KOI8
KOI8-R
KOI8-U
KerbS4ULogon: ClientUpn: <%S>
Kerberos
Killed
LANG
LCID __get_lcid_from_locale(const char*)
LCID=%04y
LC_ALL
LC_COLLATE
LC_CTYPE
LC_MESSAGES
LC_MONETARY
LC_NUMERIC
LC_TIME
LD_LIBRARY_PATH
LD_LIBRARY_PATH=
LD_PRELOAD
LOGONSERVER=
LONG get_file_sd(HANDLE, path_conv&, security_descriptor&, bool)
LOST
LSP handle: %p
Leaving
Level 2 halted
Level 2 not synchronized
Level 3 halted
Level 3 reset
Limit of 16 macros have already been defined
Link has been severed
Link number out of range
Linked Token is not a primary token!
Linked Token: %p
LoadUserProfileW, %E
Loaded modules:\r\n
Local time zone must be set--see zic manual page
Logon at this machine not allowed
Logon outside allowed hours
LogonUserW (%W, %W, ...)
LookupAccountNameW (%W), %E
LookupAccountSid(%W), %E
LookupAccountSidW (%W), %E
LsaConnectUntrusted
LsaLookupAuthenticationPackage: %y
LsaQueryInformationPolicy(Account) %y
LsaQueryInformationPolicy(Primary) %y
LsaRegisterLogonProcess
MEM_COMMIT failed, %E
MICROSOFT_AUTHENTICATION_PACKAGE_V1_0
MU\fj
Machine is not on the network
Macro definition missing null line terminator.
MapView: address shift with MAP_FIXED given
MapViewOfFileEx '%W'(%p, size %u, m %d, created %d), %E.  Terminating.
MapViewOfFileEx h0 %p, i %d failed, %E
Mapping message queue failed in fork, status 0x%x\n
March
MemTotal:     %10llu kB\nMemFree:      %10llu kB\nHighTotal:             0 kB\nHighFree:              0 kB\nLowTotal:     %10llu kB\nLowFree:      %10llu kB\nSwapTotal:    %10llu kB\nSwapFree:     %10llu kB\n
Memory allocation failure
Message too long
Missing macdef name argument.
Missing or wrong entry
Monday
Move %S to %S failed, status = %y
MsV1_0
MsV1_0S4ULogon: DomainName: <%S> UserPrincipalName: <%S>
Multihop attempted
Multiple entries
M|kp
NAS;
NAS\tN;
NAS]N;
NASkQ;
NASmQ;
NLSPATH
NOTUSED
NTSTATUS _unlink_nt(path_conv&, bool)
NTSTATUS check_dir_not_empty(HANDLE, path_conv&)
NULL
NULL owner value
Name not unique on network
Name or service not known
Name:\t%s\nState:\t%c (%s)\nTgid:\t%d\nPid:\t%d\nPPid:\t%d\nUid:\t%d %d %d %d\nGid:\t%d %d %d %d\nVmSize:\t%8lu kB\nVmLck:\t%8lu kB\nVmRSS:\t%8lu kB\nVmData:\t%8lu kB\nVmStk:\t%8lu kB\nVmExe:\t%8lu kB\nVmLib:\t%8lu kB\nSigPnd:\t%016lx\nSigBlk:\t%016lx\nSigIgn:\t%016lx\n
NetLocalGroupGetInfo(%W) %u
NetUserGetInfo(%W) %u
NetUserGetInfo, %u
Network dropped connection on reset
Network is down
Network is unreachable
New UTMP file: %s
New thread object access mutex is not valid. this %p
NfsActOnLink
No %W value for %W
No CSI structure available
No ROOTDSE entry for %W
No address associated with hostname
No address associated with name
No anode
No buffer space available
No child processes
No data available
No entry for %W in base %W
No entry for %W in def_context %W
No error
No free socket slot
No locks available
No medium found
No message of desired type
No more files
No previous owner to copy handles from
No pty allocated
No route to host
No sid found for gid %u
No space left on device
No structure for wType %u\n
No such device
No such device or address
No such file or directory
No such host or network path
No such process
Non-recoverable failure in name resolution
Not a directory
Not supported
Not waiting for sigcomplete.  its_me %d signal %d
Nothing happens
November
NtAccessCheck, %y
NtCreateDirectoryObject(%S): %y
NtCreateDirectoryObject(inode): %y
NtCreateEvent(lock): %y
NtCreateFile (%S) failed, status = %y
NtCreateFile(%W): %y
NtCreateMutant(%S), %y
NtCreateMutant(inode): %y
NtFlushBuffersFile (%S), status %y
NtFsControlFile STATUS_PENDING, then %y
NtFsControlFile got STATUS_PIPE_CLOSING...
NtFsControlFile got unexpected status %y
NtFsControlFile status %y after failing to connect bogus client or real client
NtFsControlFile status %y, no STATUS_PENDING
NtFsControlFile(FSCTL_GET_REPARSE_POINT) failed, %y
NtOpenDirectoryObject, status %y
NtOpenDirectoryObject: %y
NtOpenFile (%S) failed, status = %y
NtOpenFile (%S) for reopening in renamed case failed, status = %y
NtOpenFile (%S), status %y
NtOpenFile failed, r %p, %E
NtOpenFile(%S) failed, status %y
NtOpenFile(%S), status %y
NtOpenFile: %y
NtOpenFile: name %S
NtOpenSymbolicLinkObject: %y
NtOpenSymbolicLinkObject: %y, PID %u, ret 0
NtOpenThreadToken, %y
NtQueryAttributesFile: %y
NtQueryDirectoryFile failed, status %y, win32 error %u
NtQueryDirectoryObject, status %y
NtQueryInformationFile (%S, FileInternalInformation) failed, status = %y
NtQueryInformationFile (%S, FileNameInformation) failed, status = %y
NtQueryInformationFile status %y
NtQueryInformationFile(FilePositionInformation): %y
NtQueryInformationFile: %y
NtQueryInformationProcess(ProcessQuotaLimits): status %y
NtQueryInformationProcess(ProcessTimes): status %y
NtQueryInformationProcess(ProcessVmCounters): status %y
NtQueryInformationProcess: status %y
NtQueryInformationThread(ThreadBasicInformation), status %y
NtQueryInformationToken (TokenGroups) %y
NtQueryInformationToken (TokenPrimaryGroup), %y
NtQueryInformationToken (TokenUser), %y
NtQueryInformationToken(), %y
NtQueryInformationToken(TokenGroups) %y
NtQueryInformationToken(my_token, TokenGroups), %y
NtQueryObject failed, %y
NtQueryObject: %y
NtQuerySecurityObject (%S), status %y
NtQuerySecurityObject(), %y
NtQuerySecurityObject: %y
NtQuerySystemInformation(SystemPagefileInformation), status %y
NtQuerySystemInformation(SystemPerformanceInformation), status %y
NtQuerySystemInformation(SystemProcessorPerformanceInformation), status %y
NtQuerySystemInformation(SystemTimeOfDayInformation), status %y
NtQuerySystemInformation(SystemTimeOfDayInformation): status %y
NtQuerySystemInformation, %y
NtQuerySystemInformation: status %y, %E
NtQuerySystemInformation: status %y, %u
NtQueryVirtualMemory: status %y
NtQueryVolumeInformationFile: %y
NtSetEvent, %y
NtSetInformationFile(FilePipeInformation): %y
NtSetInformationToken (TokenDefaultDacl), %y
NtSetInformationToken (TokenOwner), %y
NtSetInformationToken (TokenPrimaryGroup), %y
NtSetInformationToken (hProcToken, TokenPrimaryGroup), %y
NtSetInformationToken (primary_token, TokenPrimaryGroup), %y
NtSetInformationToken (token, TokenPrimaryGroup), %y
NtSetInformationToken (user.token, TokenOwner), %y
NtSetInformationToken (user.token, TokenPrimaryGroup),%y
NtSetSecurityObject %y
NtSetSecurityObject, %y
NtSetSecurityObject: %y
NtWriteFile (%S) failed, status = %y
Null byte count has an unexpected value\n
Numerical argument out of domain
Numerical result out of range
O8M2
OS version:   Windows %s
O\Mp
O_TEXT/O_BINARY set in flags %y
Object is remote
October
OpenProcess (%u): %E
OpenProcess failed, %E
OpenProcess, %E
OpenProcess: ret %u; pid: %d
Opening %S for delete failed, status = %y
Opening %S for removing R/O failed, status = %y
Opening %S for removing R/O succeeded
Opening default stream failed: status %y
Opening dir %S for check_dir_not_empty failed, status = %y
Opening file failed
Opening for removing TEMPORARY attrib failed, status = %y
Operation already in progress
Operation canceled
Operation not permitted
Operation not supported
Operation now in progress
Os1i
Out of streams resources
Overwriting %S (%S) with %S failed, status = %y
P%Q%R%Q
PATH
PATH=
PC6+
PIPE
PIPER
PIPEW
PIPE_TYPE_BYTE
PIPE_TYPE_MESSAGE
POLICY_LOOKUP_NAMES right not given?
POLL
POSIX
POSIX message queue
POSIX semaphore
POSIX shared memory object
POSIXLY_CORRECT
POSIXLY_CORRECT=1
POSIX_V6_LP64_OFF64
PROF
PROGRAMFILES=
PT154
Package not installed
Parameter string not correctly encoded
Password expired
PdhAddEnglishCounterW(queue length), status %y
PdhAddEnglishCounterW(time), status %y
PdhOpenQueryW, status %y
PeekConsoleInput failed, %E
PeekNamedPipe(%p) failed, %E
Permission denied
Power failure
Previous owner died
ProfileImagePath for %W not found, status %y
ProfileImagePath for %W: %W
Profiling timer expired
Program name: %W %s
Protocol driver not attached
Protocol error
Protocol family not supported
Protocol not available
Protocol not supported
Protocol wrong type for socket
Pseudo console is disabled because the legacy console mode is enabled.
QSIZE:%-10lu NOTIFY:%-5d SIGNO:%-5d NOTIFY_PID:%-6d\n
QUIT
Queue overflow
Quit
REG_0x%x
REG_ASSERT
REG_BADBR
REG_BADPAT
REG_BADRPT
REG_EBRACE
REG_EBRACK
REG_ECOLLATE
REG_ECTYPE
REG_EESCAPE
REG_EMPTY
REG_EPAREN
REG_ERANGE
REG_ESPACE
REG_ESUBREG
REG_ILLSEQ
REG_INVARG
REG_NOMATCH
RFS specific error
RTMAX
RTMAX-
RTMAX-%d
RTMIN
RTMIN+
RTMIN+%d
Read-only file system
ReadConsoleOutputWrapper(h, ...) failed during save, %E
ReadFile failed, %E
ReadFile for forwarding failed, %E
ReadFile on echo pipe failed, %E
ReadFile, %E
ReadFile1 failed %y
ReadFile2 failed
ReadProcessMemory failed for MAP_PRIVATE address %p, %E
ReadTotalTimeoutConstant %u, ReadIntervalTimeout %u, ReadTotalTimeoutMultiplier %u
Real-time signal 0
Real-time signal 1
Real-time signal 10
Real-time signal 11
Real-time signal 12
Real-time signal 13
Real-time signal 14
Real-time signal 15
Real-time signal 16
Real-time signal 17
Real-time signal 18
Real-time signal 19
Real-time signal 2
Real-time signal 20
Real-time signal 21
Real-time signal 22
Real-time signal 23
Real-time signal 24
Real-time signal 25
Real-time signal 26
Real-time signal 27
Real-time signal 28
Real-time signal 29
Real-time signal 3
Real-time signal 30
Real-time signal 31
Real-time signal 32
Real-time signal 4
Real-time signal 5
Real-time signal 6
Real-time signal 7
Real-time signal 8
Real-time signal 9
Received af_local secret: %08x-%08x-%08x-%08x
Received eid credentials: pid: %d, uid: %d, gid: %d
Receiving af_local secret failed
Receiving af_local secret mismatch
Receiving eid credentials failed
RegisterClass %E
RegisterEventSourceW, %E
Remote address changed
Remove account or make file unreadable by others.
Remove password or make file unreadable by others.
Removing R/O on %S failed, status = %y
Removing the TEMPORARY attrib failed, status = %y
Renaming dir %S back to %S failed, status = %y
Reopen by handle requested but FS doesn't support it
Reply: from %p, to %p, error %u
ReportEventW, %E
RequestTermConnector
Reset SIO_UDP_CONNRESET: WinSock error %u
Resolv: 
Resolved protocol is unknown
Resolver error 0 (no error)
Resolver internal error
Resource deadlock avoided
Resource temporarily unavailable
RevertToSelf, %E
Rg/O\r
RtlAddAccessAllowedAce(admin) %y
RtlAddAccessAllowedAce(original) %y
RtlAddAccessAllowedAce(sid1) %y
RtlAddAccessAllowedAce(sid2) %y
RtlAddAccessAllowedAce(system) %y
RtlAddAccessAllowedAce: %y
RtlAllocateHeap failed
RtlCheckRegistryKey: status 0x%08X\n
RtlCreateAcl: %y
RtlEnterCriticalSection
RtlFirstFreeAce: %y
RtlGenRandom() = FALSE
RtlGetCurrentDirectory_U
RtlGetGroupSecurityDescriptor(), %y
RtlQueryRegistryValues: status 0x%08X\n
RtlSetCurrentDirectory_U(%S) failed, %y
RtlSetDaclSecurityDescriptor %y
S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%
S16LE_S16BE
S16LE_U16BE
S16LE_U16LE
SEGV
SIGABRT
SIGALRM
SIGBUS
SIGCHLD
SIGCLD
SIGCONT
SIGEMT
SIGFPE
SIGHUP
SIGILL
SIGINT
SIGIO
SIGIOT
SIGKILL
SIGLOST
SIGPIPE
SIGPOLL
SIGPROF
SIGPWR
SIGQUIT
SIGRTMAX
SIGRTMIN
SIGRTMIN+1
SIGRTMIN+10
SIGRTMIN+11
SIGRTMIN+12
SIGRTMIN+13
SIGRTMIN+14
SIGRTMIN+15
SIGRTMIN+16
SIGRTMIN+17
SIGRTMIN+18
SIGRTMIN+19
SIGRTMIN+2
SIGRTMIN+20
SIGRTMIN+21
SIGRTMIN+22
SIGRTMIN+23
SIGRTMIN+24
SIGRTMIN+25
SIGRTMIN+26
SIGRTMIN+27
SIGRTMIN+28
SIGRTMIN+29
SIGRTMIN+3
SIGRTMIN+30
SIGRTMIN+31
SIGRTMIN+4
SIGRTMIN+5
SIGRTMIN+6
SIGRTMIN+7
SIGRTMIN+8
SIGRTMIN+9
SIGSEGV
SIGSTOP
SIGSYS
SIGTERM
SIGTRAP
SIGTSTP
SIGTTIN
SIGTTOU
SIGURG
SIGUSR1
SIGUSR2
SIGVTALRM
SIGWINCH
SIGXCPU
SIGXFSZ
SIG_ERR = sigaddset signal %d out of range
SIG_ERR = sigdelset signal %d out of range
SIG_ERR = signal (%d, %p)
SIG_ERR = sigset (%d, %p)
SJIS
SNDCTL_DSP_CHANNELS
SNDCTL_DSP_GETBLKSIZE
SNDCTL_DSP_GETCAPS
SNDCTL_DSP_GETFMTS
SNDCTL_DSP_GETISPACE
SNDCTL_DSP_GETOSPACE
SNDCTL_DSP_POST
SNDCTL_DSP_RESET
SNDCTL_DSP_SETFMT
SNDCTL_DSP_SETFRAGMENT
SNDCTL_DSP_SPEED
SNDCTL_DSP_STEREO
SNDCTL_DSP_SYNC
STATUS_ABANDONED_WAIT_0
STATUS_ACCESS_VIOLATION
STATUS_ARRAY_BOUNDS_EXCEEDED
STATUS_BREAKPOINT
STATUS_CONTROL_C_EXIT
STATUS_DATATYPE_MISALIGNMENT
STATUS_FLOAT_DENORMAL_OPERAND
STATUS_FLOAT_DIVIDE_BY_ZERO
STATUS_FLOAT_INEXACT_RESULT
STATUS_FLOAT_INVALID_OPERATION
STATUS_FLOAT_OVERFLOW
STATUS_FLOAT_STACK_CHECK
STATUS_FLOAT_UNDERFLOW
STATUS_GUARD_PAGE_VIOLATION
STATUS_ILLEGAL_INSTRUCTION
STATUS_INTEGER_DIVIDE_BY_ZERO
STATUS_INTEGER_OVERFLOW
STATUS_INVALID_DISPOSITION
STATUS_IN_PAGE_ERROR
STATUS_NONCONTINUABLE_EXCEPTION
STATUS_NO_MEMORY
STATUS_PENDING
STATUS_PRIVILEGED_INSTRUCTION
STATUS_SINGLE_STEP
STATUS_STACK_OVERFLOW
STATUS_TIMEOUT
STATUS_USER_APC
STATUS_WAIT_0
STILL_ACTIVE?  How'd we get here?
STOP
STREAM
SYSTEM
SYSTEMDRIVE=
SYSTEMROOT=
Saturday
Segmentation fault
Sending af_local secret %s
Sending eid credentials failed
Sending eid credentials succeeded
September
Servname not supported for ai_socktype
Set HOME (from account db) to %s
Set HOME to default /home/USER
Set nice to %d
SetCommState() failed, %E
SetCommTimeouts() failed, %E
SetConsoleCtrlHandler failed, %E
SetConsoleCursorInfo(%p, ...) failed during save, %E
SetConsoleCursorInfo(%p, cob) failed during restore, %E
SetConsoleCursorInfo(%p, save_cursor) failed during restore, %E
SetEvent failed, %E
SetHandleInformation failed, %E
SetProcessWindowStation failed, %E
SetThreadDescription() failed. %08x %08x\n
SetThreadGroupAffinity(%x,%d (%x/%d)) failed %E
Setting UTMP file failed
Setting attributes failed, status = %y
Setting delete disposition %S (%S) in renamed case failed, status = %y
Setting delete disposition on %S (%S) failed, status = %y
Setting delete disposition on %S failed, status = %y
Setting delete dispostion failed, status = %y
Setting delete-on-close on %S failed, status = %y
Setting process group leader to %d since %W(%d) is not a cygwin process
Sharing violation when opening %S
Signal %d at rip=%012X\r\n
Socket operation on non-socket
Socket type not supported
Software caused connection abort
Srmount error
Stack trace:\r\nFrame         Function      Args\r\n
Stale NFS file handle
Started.
State not recoverable
StdHandles=%p,%p
Stopped
Stopped (signal)
Stopped (tty input)
Stopped (tty output)
Streams pipe error
Success
SunMonTueWedThuFriSat
Sunday
Switch back from restricted token
Switch to restricted token
System error
TEMP=
TERM
TERM=
TIS-620
TLB size\t: %d 4K pages\n
TMP=
TMPDIR
TMPDIR=
TRAP
TSTP
TTIN
TTOU
TZif2
Temporary failure in name resolution
TerminateProcess failed, %E
Terminated
Text file busy
Thursday
Timer expired
Too many levels of nesting for %s
Too many levels of symbolic links
Too many links
Too many open files
Too many open files in system
Too many processes
Too many references: cannot splice
Too many users
Trace/breakpoint trap
Transaction failure %y.  Retry open.
Transaction failure.  Retry open.
TranslateNameW(%W, NameCanonical) %E
TranslateNameW(%W, NameUserPrincipal) %E
Transport endpoint is already connected
Transport endpoint is not connected
Try %S again
Try logon for %W\%W
Try to connect to named pipe: %W
Try to read mounts from %W
Try-to-bin %S
Trying %s...\n
Trying to delete %S, isdir = %d
Tuesday
U8_S8
UDP socket sockfd %d\n
ULONG cyg_ldap::connect_non_ssl(PCWSTR)
ULONG cyg_ldap::connect_ssl(PCWSTR)
ULONG cyg_ldap::next_page_s()
ULONG cyg_ldap::search_s(PWCHAR, ULONG, PWCHAR, WCHAR**)
ULONG get_obj_handle_count(HANDLE)
USERDOMAIN=
USERNAME=
USERPROFILE=
USR1
USR2
UTF-8
UTF8
UUUUU
UVPw
Unable to determine the native mapping for %ls (error %u)
Unexpected errno for flushing recvfrom: %s
Unexpected section order for "%s" %d\n
Unknown
Unknown .netrc keyword %s
Unknown code %u\n
Unknown domain %W
Unknown error
Unknown error %d
Unknown host
Unknown resolver error
Unknown server error
Unknown signal %d
UnmapViewOfFile %E
Urgent I/O condition
User defined signal 1
User defined signal 2
V?LUUUUU
VAS;
VAS\tN;
VAS]N;
VASkQ;
VASmQ;
VTALRM
Value too large for defined data type
Virtual timer expired
VirtualAlloc failed for MAP_PRIVATE address %p, %E
VirtualAlloc: address shift with MAP_FIXED given
VirtualFree in unmap_pages () failed, %E
VirtualProtect failed for address %p, parentstate: %y, state: %y, parentprot: %y, prot: %y, %E
VirtualProtect in unmap_pages () failed, %E
VirtualProtectEx failed for MAP_PRIVATE address %p, %E
VirtualQueryEx failed for MAP_PRIVATE address %p, %E
W4vC
WARNING: %y = NtQueryInformationFile (%p, InternalInfo, io.Status %y)
WARNING: Can't reopen CWD %y '%S', status %y
WARNING: Unable (ntstatus %y) to open real file %W
WARNING: Unable to read real file attributes for %W
WARNING: VirtualProtectEx to return to PAGE_NOACCESS state in parent failed for MAP_PRIVATE address %p, %E
WARNING: invalid path name '%W'
WCHAR* cyg_ldap::fetch_unix_name_from_rfc2307(uint32_t, bool)
WCHAR* get_user_profile_directory(PCWSTR, PWCHAR, SIZE_T)
WFMO
WFMO failed waiting for cygthread '%s', %E
WFMO failed, %E
WFMO returns %d, aio %p
WFSO
WFSO (%p, %W, inf)...
WFSO failed %s, fork_finished %p, %E
WFSO failed - %u, %E
WFSO failed for shared socket mutex, %E
WFSO failed, %E
WFSO for mutex %p failed, %E
WFSO returned unexpected value %u, %E
WFSO timed out %s
WINCH
WINDIR=
WINSZ failed
WINSZ: (row=%d,col=%d)
WM_ACTIVATE
WM_ACTIVATEAPP
WM_ASKCBFORMATNAME
WM_CANCELJOURNAL
WM_CANCELMODE
WM_CHANGECBCHAIN
WM_CHAR
WM_CHARTOITEM
WM_CHILDACTIVATE
WM_CLEAR
WM_CLOSE
WM_COMMAND
WM_COMPACTING
WM_COMPAREITEM
WM_COPY
WM_COPYDATA
WM_CREATE
WM_CTLCOLORBTN
WM_CTLCOLORDLG
WM_CTLCOLOREDIT
WM_CTLCOLORLISTBOX
WM_CTLCOLORMSGBOX
WM_CTLCOLORSCROLLBAR
WM_CTLCOLORSTATIC
WM_CUT
WM_DEADCHAR
WM_DELETEITEM
WM_DESTROY
WM_DESTROYCLIPBOARD
WM_DEVMODECHANGE
WM_DRAWCLIPBOARD
WM_DRAWITEM
WM_DROPFILES
WM_ENABLE
WM_ENDSESSION
WM_ENTERIDLE
WM_ENTERMENULOOP
WM_ERASEBKGND
WM_EXITMENULOOP
WM_FONTCHANGE
WM_GETDLGCODE
WM_GETFONT
WM_GETHOTKEY
WM_GETMINMAXINFO
WM_GETTEXT
WM_GETTEXTLENGTH
WM_HOTKEY
WM_HSCROLL
WM_HSCROLLCLIPBOARD
WM_ICONERASEBKGND
WM_INITDIALOG
WM_INITMENU
WM_INITMENUPOPUP
WM_KEYDOWN
WM_KEYFIRST
WM_KEYLAST
WM_KEYUP
WM_KILLFOCUS
WM_LBUTTONDBLCLK
WM_LBUTTONDOWN
WM_LBUTTONUP
WM_MBUTTONDBLCLK
WM_MBUTTONDOWN
WM_MBUTTONUP
WM_MDIACTIVATE
WM_MDICASCADE
WM_MDICREATE
WM_MDIDESTROY
WM_MDIGETACTIVE
WM_MDIICONARRANGE
WM_MDIMAXIMIZE
WM_MDINEXT
WM_MDIREFRESHMENU
WM_MDIRESTORE
WM_MDISETMENU
WM_MDITILE
WM_MEASUREITEM
WM_MENUCHAR
WM_MENUSELECT
WM_MOUSEACTIVATE
WM_MOUSEFIRST
WM_MOUSELAST
WM_MOUSEMOVE
WM_MOVE
WM_NCACTIVATE
WM_NCCALCSIZE
WM_NCCREATE
WM_NCDESTROY
WM_NCHITTEST
WM_NCLBUTTONDBLCLK
WM_NCLBUTTONDOWN
WM_NCLBUTTONUP
WM_NCMBUTTONDBLCLK
WM_NCMBUTTONDOWN
WM_NCMBUTTONUP
WM_NCMOUSEMOVE
WM_NCPAINT
WM_NCRBUTTONDBLCLK
WM_NCRBUTTONDOWN
WM_NCRBUTTONUP
WM_NEXTDLGCTL
WM_NULL
WM_PAINT
WM_PAINTCLIPBOARD
WM_PAINTICON
WM_PALETTECHANGED
WM_PALETTEISCHANGING
WM_PARENTNOTIFY
WM_PASTE
WM_PENWINFIRST
WM_PENWINLAST
WM_POWER
WM_QUERYDRAGICON
WM_QUERYENDSESSION
WM_QUERYNEWPALETTE
WM_QUERYOPEN
WM_QUEUESYNC
WM_QUIT
WM_RBUTTONDBLCLK
WM_RBUTTONDOWN
WM_RBUTTONUP
WM_RENDERALLFORMATS
WM_RENDERFORMAT
WM_SETCURSOR
WM_SETFOCUS
WM_SETFONT
WM_SETHOTKEY
WM_SETREDRAW
WM_SETTEXT
WM_SHOWWINDOW
WM_SIZE
WM_SIZECLIPBOARD
WM_SPOOLERSTATUS
WM_SYSCHAR
WM_SYSCOLORCHANGE
WM_SYSCOMMAND
WM_SYSDEADCHAR
WM_SYSKEYDOWN
WM_SYSKEYUP
WM_TIMECHANGE
WM_TIMER
WM_UNDO
WM_VKEYTOITEM
WM_VSCROLL
WM_VSCROLLCLIPBOARD
WM_WINDOWPOSCHANGED
WM_WINDOWPOSCHANGING
WM_WININICHANGE
WNetGetLastError failed: %u
WNetGetProviderNameW
WNetGetResourceInformationW
WNetOpenEnum
WNetOpenEnumW
WSADuplicateSocket succeeded (%x)
WSAEventSelect, %E
WSAIoctl: %u
WSASocket succeeded (%p)
WSAStartup
WU36.
WaitCommEvent %E
WaitForMultipleObjects failed, %E
WaitForSingleObject(%p) for thread exit returned %u
WaitSingleObject returned %d
Waiting for pack.wakeup %p
Warning, can't handle more than %d locks per file.
Warning: '%s' does not exists or is not a directory.\n\n%ss require the existance of this directory.\nCreate the directory '%s' and set the permissions to 01777.\nFor instance on the command line: mkdir -m 01777 %s\n
Warning: Fixup mapping beyond EOF failed
Warning: Mapping beyond EOF failed, %E
Warning: VirtualProtect (addr: %p, len: %ly, new_prot: %y, old_prot: %y), %E
WeRT@
Wednesday
WinSock SO_ERROR = %d
Window changed
WnetEnumResource
Write to echo pipe failed, %E
WriteConsoleOutputW failed, %E
WriteFile failed, %E
WriteFile for forwarding failed, %E
WriteFile for pipe %p failed, %E
WriteFile, %E
WritePipeOverlapped arg %d failed, %E
WritePipeOverlapped cwd failed, %E
WritePipeOverlapped fd %d failed, %E
WritePipeOverlapped fd failed, %E
WritePipeOverlapped hdl failed, %E
WritePipeOverlapped root failed, %E
WritePipeOverlapped siginfo failed, %E
WritePipeOverlapped sizeof argv failed, %E
WritePipeOverlapped sizeof cwd failed, %E
WritePipeOverlapped sizeof fd failed, %E
WritePipeOverlapped sizeof fds failed, %E
WritePipeOverlapped sizeof hdl failed, %E
WritePipeOverlapped sizeof root failed, %E
X!DoH
XCPU
XFSZ
XJSr
XM`8q
Y.ja
Y3MI
Z%T%i%f%`%P%l%
Z%T%i%f%`%P%l%}
Zpg'
[%s (tid %ld)
[.ShellClassInfo]\r\nCLSID={645FF040-5081-101B-9F08-00AA002F954E}\r\nLocalizedResourceName=@%SystemRoot%\system32\shell32.dll,-8964\r\n
[0QUUU
[1;2A
[1;2B
[1;2C
[1;2D
[1;2G
[1;5A
[1;5B
[1;5C
[1;5D
[1;5G
[1;6A
[1;6B
[1;6C
[1;6D
[1;6G
[<%d;%d;%d%c
[>67;%d%02d;0c
[teb (tid %ld)]
[win heap %ld
\040
\??\COM10
\??\COM100
\??\COM101
\??\COM102
\??\COM103
\??\COM104
\??\COM105
\??\COM106
\??\COM107
\??\COM108
\??\COM109
\??\COM11
\??\COM110
\??\COM111
\??\COM112
\??\COM113
\??\COM114
\??\COM115
\??\COM116
\??\COM117
\??\COM118
\??\COM119
\??\COM12
\??\COM120
\??\COM121
\??\COM122
\??\COM123
\??\COM124
\??\COM125
\??\COM126
\??\COM127
\??\COM128
\??\COM13
\??\COM14
\??\COM15
\??\COM16
\??\COM17
\??\COM18
\??\COM19
\??\COM20
\??\COM21
\??\COM22
\??\COM23
\??\COM24
\??\COM25
\??\COM26
\??\COM27
\??\COM28
\??\COM29
\??\COM30
\??\COM31
\??\COM32
\??\COM33
\??\COM34
\??\COM35
\??\COM36
\??\COM37
\??\COM38
\??\COM39
\??\COM40
\??\COM41
\??\COM42
\??\COM43
\??\COM44
\??\COM45
\??\COM46
\??\COM47
\??\COM48
\??\COM49
\??\COM50
\??\COM51
\??\COM52
\??\COM53
\??\COM54
\??\COM55
\??\COM56
\??\COM57
\??\COM58
\??\COM59
\??\COM60
\??\COM61
\??\COM62
\??\COM63
\??\COM64
\??\COM65
\??\COM66
\??\COM67
\??\COM68
\??\COM69
\??\COM70
\??\COM71
\??\COM72
\??\COM73
\??\COM74
\??\COM75
\??\COM76
\??\COM77
\??\COM78
\??\COM79
\??\COM80
\??\COM81
\??\COM82
\??\COM83
\??\COM84
\??\COM85
\??\COM86
\??\COM87
\??\COM88
\??\COM89
\??\COM90
\??\COM91
\??\COM92
\??\COM93
\??\COM94
\??\COM95
\??\COM96
\??\COM97
\??\COM98
\??\COM99
\D)2SD
\Device\CdRom0
\Device\CdRom1
\Device\CdRom10
\Device\CdRom11
\Device\CdRom12
\Device\CdRom13
\Device\CdRom14
\Device\CdRom15
\Device\CdRom2
\Device\CdRom3
\Device\CdRom4
\Device\CdRom5
\Device\CdRom6
\Device\CdRom7
\Device\CdRom8
\Device\CdRom9
\Device\Floppy0
\Device\Floppy1
\Device\Floppy10
\Device\Floppy11
\Device\Floppy12
\Device\Floppy13
\Device\Floppy14
\Device\Floppy15
\Device\Floppy2
\Device\Floppy3
\Device\Floppy4
\Device\Floppy5
\Device\Floppy6
\Device\Floppy7
\Device\Floppy8
\Device\Floppy9
\Device\Harddisk%u\Partition%u
\Device\Null
\Device\Tape0
\Device\Tape1
\Device\Tape10
\Device\Tape100
\Device\Tape101
\Device\Tape102
\Device\Tape103
\Device\Tape104
\Device\Tape105
\Device\Tape106
\Device\Tape107
\Device\Tape108
\Device\Tape109
\Device\Tape11
\Device\Tape110
\Device\Tape111
\Device\Tape112
\Device\Tape113
\Device\Tape114
\Device\Tape115
\Device\Tape116
\Device\Tape117
\Device\Tape118
\Device\Tape119
\Device\Tape12
\Device\Tape120
\Device\Tape121
\Device\Tape122
\Device\Tape123
\Device\Tape124
\Device\Tape125
\Device\Tape126
\Device\Tape127
\Device\Tape13
\Device\Tape14
\Device\Tape15
\Device\Tape16
\Device\Tape17
\Device\Tape18
\Device\Tape19
\Device\Tape2
\Device\Tape20
\Device\Tape21
\Device\Tape22
\Device\Tape23
\Device\Tape24
\Device\Tape25
\Device\Tape26
\Device\Tape27
\Device\Tape28
\Device\Tape29
\Device\Tape3
\Device\Tape30
\Device\Tape31
\Device\Tape32
\Device\Tape33
\Device\Tape34
\Device\Tape35
\Device\Tape36
\Device\Tape37
\Device\Tape38
\Device\Tape39
\Device\Tape4
\Device\Tape40
\Device\Tape41
\Device\Tape42
\Device\Tape43
\Device\Tape44
\Device\Tape45
\Device\Tape46
\Device\Tape47
\Device\Tape48
\Device\Tape49
\Device\Tape5
\Device\Tape50
\Device\Tape51
\Device\Tape52
\Device\Tape53
\Device\Tape54
\Device\Tape55
\Device\Tape56
\Device\Tape57
\Device\Tape58
\Device\Tape59
\Device\Tape6
\Device\Tape60
\Device\Tape61
\Device\Tape62
\Device\Tape63
\Device\Tape64
\Device\Tape65
\Device\Tape66
\Device\Tape67
\Device\Tape68
\Device\Tape69
\Device\Tape7
\Device\Tape70
\Device\Tape71
\Device\Tape72
\Device\Tape73
\Device\Tape74
\Device\Tape75
\Device\Tape76
\Device\Tape77
\Device\Tape78
\Device\Tape79
\Device\Tape8
\Device\Tape80
\Device\Tape81
\Device\Tape82
\Device\Tape83
\Device\Tape84
\Device\Tape85
\Device\Tape86
\Device\Tape87
\Device\Tape88
\Device\Tape89
\Device\Tape9
\Device\Tape90
\Device\Tape91
\Device\Tape92
\Device\Tape93
\Device\Tape94
\Device\Tape95
\Device\Tape96
\Device\Tape97
\Device\Tape98
\Device\Tape99
\\.\pipe\cygwin-%S-
\\.\pipe\cygwin-%S-pty%d-master-ctl
\bin\cygwin-console-helper.exe
\l#mW
\nEST5EDT,M3.2.0,M11.1.0\n
\nLoaded different DLL with same basename in forked child,\nparent loaded: %W\n child loaded: %W\nThe DLLs differ, so it's not safe to run the forked child.\nMake sure to remove the offending DLL before trying again.
\nin function 
\tNAS
\tNAS;
\tNAS\tN;
\tNAS]N;
\tNASkQ;
\tNASmQ;
\vHMI
\v\v\v\v\v\v\v\v\v\v\v\v
]NAS
]NAS;
]NAS\tN;
]NAS]N;
]NASkQ;
]NASmQ;
_SECURITY_ATTRIBUTES* __sec_user(PVOID, PSID, PSID, DWORD, BOOL)
__acl_t* acl_copy_int(const void*)
__acl_t* acl_dup(acl_t)
__acl_t* acl_from_text(const char*)
__acl_t* acl_get_file(const char*, acl_type_t)
__acl_t* acl_init(int)
__dumpstack_overflow
_hPipe
_hPipe != INVALID_HANDLE_VALUE
_hashXXXXXX
`1gg
`3GI
`Q</pRu
`UUUUU
aG>am
aa_DJ
aa_ER
aa_ER@saaho
aa_ET
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 :+-._
aborting due to test_and_set error
about to call do_exit (%x)
about to write %u chars to slave
accept
accept from unauthorized server
accept4
account
action %d
activated name '%s', thread_sync %p for id %y
add-slash
add_item ("%s", "/", ...) failed, errno %d
added pid %d to proc table, slot %d
addr %p, len %lu, prot %y, flags %y, fd %d, off %Y
address sizes\t: %u bits physical, %u bits virtual\n
address space needed by '%W' (%p) is already occupied
af_ZA
af_local_accept called, no_getpeereid=%d
af_local_connect called, no_getpeereid=%d
after longjmp
agr_PE
ai_family not supported
ai_socktype not supported
aio %p is already busy in slot %d
aio vaquita thread creation failed, %E
aio%d
aiowaiter fatal error, %E
aiowaiter unexpected WFMO result %d
ak_GH
alert
aliases alloc %p
all other handles closed
alltrusted
alnum
alpha
already ready
am_ET
ambiguous option -- %.*s
ampersand
an_ES
anonymous
anp_IN
apicid\t\t: %d\ninitial apicid\t: %d\n
apostrophe
ar_AE
ar_BH
ar_DZ
ar_EG
ar_IN
ar_IQ
ar_JO
ar_KW
ar_LB
ar_LY
ar_MA
ar_OM
ar_QA
ar_SA
ar_SD
ar_SS
ar_SY
ar_TN
ar_YE
argc %d
args: %x, %d
argv is NULL
argv[%d] = '%s'
armed signal_arrived %p, signal %d
array bound exceeded %d\n
as_IN
assertion "%s" failed: file "%s", line %d%s%s
assertion "%s" failed: file "%s", line %d%s%s\n
ast_ES
asterisk
attaching %s sid %d, pid %d, pgid %d, tty->pgid %d, tty->sid %d
attempt to access outside of chroot '%s - %s'
attempt to use destroyed mutex
attempts
audio_in=%p audio_out=%p
audio_in=%p audio_out=%p, close_on_exec %d
authz_ctx::operator AUTHZ_RESOURCE_MANAGER_HANDLE()
auto
awake
ayc_PE
az-AZ
az_AZ
az_IR
b%c%d%e%f%g%h%i%j%k%l%
backslash
backspace
bad .rhosts owner
bash
be_BY
be_BY@latin
bem_ZM
ber_DZ
ber_MA
bg ioctl pgid %d, tpgid %d, %s
bg_BG
bho_IN
bho_NP
bi_VU
bin_status try_to_bin(path_conv&, void*&, ACCESS_MASK, ULONG)
binary
bind
bind: %s\n
blank
blk_lock
bn_BD
bn_IN
bo_CN
bo_IN
bogomips\t: %d.00\n
bool NT_readline::init(POBJECT_ATTRIBUTES, CHAR*, ULONG)
bool _cygtls::inside_kernel(CONTEXT*)
bool _pinfo::alert_parent(char)
bool _pinfo::set_ctty(fhandler_termios*, int)
bool authz_ctx::get_user_attribute(mode_t*, PSECURITY_DESCRIPTOR, PSID)
bool bytes_available(DWORD&, HANDLE)
bool check_cygserver_available()
bool check_path(char*, ipc_type_t, const char*, size_t)
bool check_token_membership(PSID)
bool child_copy(HANDLE, bool, bool, ...)
bool child_info::sync(pid_t, void*&, DWORD)
bool child_info_fork::abort(const char*, ...)
bool client_request_get_version::check_version() const
bool cyg_ldap::fetch_ad_account(PSID, bool, PCWSTR)
bool cygheap_domain_info::init()
bool cygheap_fdmanip::isopen() const
bool cygthread::detach(HANDLE)
bool cygthread::terminate_thread()
bool dll::create_forkable()
bool dll::stat_real_file_once()
bool dll_list::close_mutex()
bool dll_list::create_forkables()
bool dll_list::update_forkables()
bool dtable::select_except(int, select_stuff*)
bool dtable::select_read(int, select_stuff*)
bool dtable::select_write(int, select_stuff*)
bool fast_mutex::init()
bool fhandler_base::fork_fixup(HANDLE, void*&, const char*)
bool fhandler_console::get_cons_readahead_valid()
bool fhandler_console::send_winch_maybe()
bool fhandler_console::set_raw_win32_keyboard_mode(bool)
bool fhandler_dev_dsp::Audio::queue::send(WAVEHDR*)
bool fhandler_dev_dsp::Audio_in::init(unsigned int)
bool fhandler_dev_dsp::Audio_in::query(int, int, int)
bool fhandler_dev_dsp::Audio_in::queueblock(WAVEHDR*)
bool fhandler_dev_dsp::Audio_in::read(char*, int&)
bool fhandler_dev_dsp::Audio_in::start(int, int, int)
bool fhandler_dev_dsp::Audio_in::waitfordata()
bool fhandler_dev_dsp::Audio_out::parsewav(const char*&, int&, int, int, int)
bool fhandler_dev_dsp::Audio_out::query(int, int, int)
bool fhandler_dev_dsp::Audio_out::sendcurrent()
bool fhandler_dev_dsp::Audio_out::start()
bool fhandler_dev_dsp::Audio_out::waitforspace()
bool fhandler_dev_tape::_lock(bool)
bool fhandler_fifo::wait(HANDLE)
bool fhandler_pty_master::setup()
bool fhandler_pty_slave::setup_pseudoconsole()
bool fhandler_socket_local::af_local_recv_cred()
bool fhandler_socket_local::af_local_recv_secret()
bool fhandler_socket_local::af_local_send_cred()
bool fhandler_socket_local::af_local_send_secret()
bool fhandler_socket_wsock::init_events()
bool fs_info::update(PUNICODE_STRING, HANDLE)
bool fstab_read_flags(char**, unsigned int&, bool)
bool get_logon_server(PCWSTR, PWCHAR, ULONG)
bool get_mem_values(DWORD, size_t&, size_t&, size_t&, size_t&, size_t&, size_t&)
bool get_proc_lock(DWORD, DWORD)
bool handle_to_fn(HANDLE, char*)
bool insert_file(char*, char*&)
bool linebuf::fromargv(av&, const char*, bool)
bool load_init()
bool mkdirs(PWCHAR, int)
bool mmap_record::map_pages(caddr_t, SIZE_T)
bool mmap_record::unmap_pages(caddr_t, SIZE_T)
bool mount_info::from_fstab(bool, WCHAR*, PWCHAR)
bool parse_protocol_line(FILE*, protoent*)
bool parse_services_line(FILE*, servent*)
bool pathfinder::find(const pathfinder::criterion_interface&, const vstrlist::member**, const vstrlist::member**)
bool pinfo::wait()
bool proc_can_be_signalled(_pinfo*)
bool pthread::create_cancel_event()
bool pthread_mutex::can_be_unlocked()
bool pthread_mutex::no_owner()
bool sec_acl(PACL, bool, bool, PSID, PSID, DWORD)
bool stopped_or_terminated(waitq*, _pinfo*)
bool timer_tracker::cancel()
bool tty::exists()
bool verify_token(HANDLE, cygsid&, user_groups&, bool*)
br_FR
br_FR@euro
braces not balanced
brackets ([ ]) not balanced
break here
brx_IN
bs-BA
bs_BA
buf %s, suffix found '%s'
buf=%p frags=%d fragsize=%d bytes=%d
builtin
byn_ER
bytes read %u
cYg%08x
cYg%8x %lx %d
cYg%8x %x
cYgSiGw00f %d %y %p
cYgstd %p %zx %x
ca_AD
ca_ES
ca_ES@euro
ca_ES@valencia
ca_FR
ca_IT
cache
cache size\t: %d KB\n
called detach but inuse %d, thread %y?
calling cleanup routines
calling proc_subproc, pid %d, options %d
calloc failed
can't call master, %E
can't commit child memory for stack %p(%ly), %E
can't commit memory for stack %p(%ly), %E
can't create tty_list::mutex '%s', %E
can't duplicate input from %u/%p, %E
can't duplicate output for cygwin, %E
can't duplicate output, %E
can't find windows system directory
can't set native for %s since no environ yet
can't set output_handle(%p) to non-blocking mode
cancelled
cannot register window class, %E
cannot wait for mutex %W: %E
carriage-return
ccalloc
ce_RU
cgM`
char %0c state is %d
char %0o
char* __acltotext(aclent_t*, int, const char*, char, int)
char* acl_to_any_text(acl_t, const char*, char, int)
char* acl_to_text(acl_t, ssize_t*)
char* cwdstuff::get(char*, int, int, unsigned int)
char* get_entire_line(FILE*)
char* getcwd(char*, size_t)
char* getlogin()
char* getwinenveq(const char*, size_t, int)
char* mmap_list::try_map(void*, size_t, int, off_t)
char* pwdgrp::fetch_account_from_windows(fetch_user_arg_t&, cyg_ldap*)
char* realpath(const char*, char*)
char* spenv::retrieve(bool, const char*)
char* strerror(int)
char* strerror_r(int, char*, size_t)
char* ttyname(int)
char** build_env(const char* const*, WCHAR*&, int&, bool, HANDLE)
char** win32env_to_cygenv(PWCHAR, bool)
checking %s before '..'
checking pgid %d, my sid %d, my parent %d
checking pid %d - has pgid %d\n
child %d - %s, errno %d
child is alive (but stopped)
child is running.  pid %d, ppid %d, stack here %p
child_info* get_cygwin_startup_info()
child_info::child_info(unsigned int, child_info_types, bool)
child_procs count %d
chr-US
chr_US
cifs
circumflex
circumflex-accent
cjknarrow
cjksingle
cjkwide
ckb_IQ
cleaning up for mutex %W
clear waiting threads
clflush size\t: %d\ncache_alignment\t: %d\n
client buffer too small for reply body: have %lu bytes and need %lu
client_request::client_request(client_request::request_code_t, void*, size_t)
client_request::header_t::header_t(client_request::request_code_t, size_t)
client_request_attach_tty::client_request_attach_tty(DWORD, HANDLE, HANDLE)
clock_nanosleep (%ld.%09ld)
clock_t times(tms*)
clone failed
close
close sockfd %d: %s\n
close(%d)
closed
closed by master
closing '%s' handle %p
closing archetype
closing cygheap->ctty %p
closing fd %d since it is an archetype
closing from_master_nat(%p)/from_master(%p)/to_master_nat(%p)/to_master(%p) since we own them(%u)
closing last open %s handle
closing master
closing passed in archetype %p, usecount %d
closing: %p, %p
cmalloc
cmdline
cmn_TW
cntrl
colon
comma
command line too long (>32K), return E2BIG
command substitution
commercial-at
commune
commune_result _pinfo::commune_request(__uint32_t, ...)
completed aio %p
concatenated line allocated %p
conn
connect
connect from unauthorized client
connect to address %s: 
connect(TCP): %s\n
considering pid %d, pgid %d, w->pid %d
consm
console device allocation failure - too many consoles in use, max consoles is 32
conssel
const char* cygheap_user::ontherange(homebodies, passwd*)
const char* find_exec(const char*, path_conv&, const char*, unsigned int, const char**)
const char* perhaps_suffix(const char*, path_conv&, int&, unsigned int)
const unsigned char* fhandler_console::write_normal(const unsigned char*, const unsigned char*)
controlled interrupt. stackptr %p, stack %p, stackptr[-1] %p
conv_to_posix_path (%s, 0x%x, %s)
conv_to_win32_path (%s)
conversion error, handle %p
copying data/bss for a loaded dll
copying data/bss of a linked dll
core id\t\t: %d\ncpu cores\t: %d\n
core id\t\t: 0\ncpu cores\t: 1\n
couldn't allocate heap, %E, base %p, top %p, reserve_size %ld, allocsize %ld, page_const %d
couldn't allocate memory %p(%d) for '%W' alignment, %E\n
couldn't allocate muto '%s', %E
couldn't copy linked dll data/bss
couldn't create %s
couldn't create aioworker tname table
couldn't create an event, %E
couldn't create cancel event for main thread
couldn't create cancel event, %E
couldn't create handle to myself for child, %E
couldn't create pending signal event, %E
couldn't create signal pipe, %E
couldn't create signalling event for exec, %E
couldn't create window, %E
couldn't dynamically determine load address for '%s' (handle %p), %E
couldn't examine memory at %p while mapping %W, %E
couldn't get context of thread, %E
couldn't get file size for '%s', %E
couldn't get memory info, %E
couldn't get memory info, pc %p, %E
couldn't get proc lock. what %d, val %d
couldn't initialize fd %d for %s
couldn't interrupt.  trying again.
couldn't make stderr distinct from stdout, %E
couldn't open file '%s', %E
couldn't open inuse event %s, %E
couldn't release memory %p for '%W' alignment, %E\n
couldn't set initial state for %s, %E
couldn't wake up wait event %p, %E
cpu %U %U %U %U\n
cpu family\t: %d\nmodel\t\t: %d\nmodel name\t: %s\nstepping\t: %d\nmicrocode\t: 0x%X\ncpu MHz\t\t: %d.000\n
cpu%d %U %U %U %U\n
cpuinfo
crealloc
create of writer failed
created an archetype (%p) for %s(%d/%d)
created event %s
created name '%s', thread %p, id %y
created new fhandler_base for handle %p, bin %d
created tracking thread for pid %d, winpid %y, rd_proc_pipe %p
created: pid = %u, master_pid = %u, from_master = %p, to_master = %p
crh_UA
cs=%04x ds=%04x es=%04x fs=%04x gs=%04x ss=%04x\r\n
cs_CZ
csb_PL
csc-cache
ctty
ctty %p, usecount %d
ctty %s
ctty was NULL
current match '%W' = '%W'\n
cv_RU
cwcsdup would have returned NULL
cy_GB
cyg.loadavg.mutex
cygcons.input.mutex
cygcons.output.mutex
cygcons.thread_sync
cygdrive
cygexec
cygheap
cygheap->ctty %p, archetype %p
cygheap->ctty now %p, archetype %p
cygheap_fdget::cygheap_fdget(int, bool, bool)
cygheap_protect
cygserver un-available
cygserver_running == CYGSERVER_OK || cygserver_running == CYGSERVER_UNAVAIL
cygserver_running == CYGSERVER_UNKNOWN || cygserver_running == CYGSERVER_OK || cygserver_running == CYGSERVER_UNAVAIL
cygserver_running == CYGSERVER_UNKNOWN || cygserver_running == CYGSERVER_UNAVAIL
cygtty.input.avail
cygtty.input.mutex
cygtty.output.mutex
cygtty.pipe_sw.mutex
cygtty.slave_alive
cygtty.slave_reading
cygwait failed. %E
cygwin
cygwin DLL and APP are out of sync -- API version mismatch %u > %u
cygwin1.dll
cygwin1S5
cygwin_getnameinfo
d%04x
d\rxp
da_DK
data
de_AT
de_AT@euro
de_BE
de_BE@euro
de_CH
de_DE
de_DE@euro
de_IT
de_LU
de_LU@euro
debug
debugger_command '%W'
default
default:
deleting element %d for %s(%d/%d)
deleting select records
derived path '%W', posix '%s'
desc
determining /dev/tty assignment for ctty %p
dev_=%p
devices
died waiting for dll loading
digit
directly
dirent* readdir(DIR*)
disable_pcon
disabled, missing or not on NTFS %W
disk geometry: (%D cyl)*(%u trk)*(%u sec)*(%u bps)
dll bss
dll data
dll_list
do_exit (%d), exit_state %d
doi_IN
dollar-sign
domain
domain|search "%s"\n
done
dos_drive_mappings::dos_drive_mappings()
drive size: %D
dsb_DE
dup handles directly since I'm the owner
dup handles via master control pipe %s
dup handles within myself.
dup(%s) failed, event handle %p, %E
dup(%s) failed, handle %p, %E
dup(%s) failed, mutex handle %p, %E
dup3 (%d, %d, %y)
dup_ent
dup_ent returned NULL for name %s, h %p
duped %sent "%s", %p
duped '%s' old %p, new %p
duped master
duped slave
duping %sent "%s", %p
duping existing value for '%s'
duplicated from_master %p->%p from pty_owner
duplicated from_master_nat %p->%p from pty_owner
duplicated to_master %p->%p from pty_owner
duplicated to_master_nat %p->%p from pty_owner
dv_MV
dz_BT
e"CW
e%ld
e86@m
e<bN
echo pipe
eight
el_CY
el_GR
el_GR@euro
empty (sub)expression
en_AG
en_AU
en_BW
en_CA
en_DK
en_GB
en_HK
en_IE
en_IE@euro
en_IL
en_IN
en_NG
en_NZ
en_PH
en_SG
en_US
en_ZA
en_ZM
en_ZW
enabled
end nBytes=%d
endprotoent ()
endservent ()
entering
entering ReadFile loop, my_readsig %p, my_sendsig %p
enum:
env count %ld, bytes %d
env var converted to %s
environ
envp %p
envp %p, envc %d
equals-sign
erase
err %E
errno
erroneous thread activation, name is NULL
error %y reading system process information
error closing from_master %p, %E
error closing from_master_nat %p, %E
error closing from_slave_nat %p, %E
error closing to_master %p, %E
error closing to_master_nat %p, %E
error detected %x
error duplicating pipes, %E
error in get_ifconf
error locking mutex %W: %E
error on read of child wait pipe %p, %E
error reading from pipe (%u)
error sending signal %d, pid %u, pipe handle %p, nb %u, packsize %u, %E
error updating my handlers, %E
error while loading shared libraries: %s: cannot open shared object file: %s
error writing to pipe %p %E
error writing to pipe, error = %u
error: utmp_fd %d
error_start
es_AR
es_BO
es_CL
es_CO
es_CR
es_CU
es_DO
es_EC
es_ES
es_ES@euro
es_GT
es_HN
es_MX
es_NI
es_PA
es_PE
es_PR
es_PY
es_SV
es_US
es_UY
es_VE
et_EE
eu_ES
eu_ES@euro
exclamation-mark
exec
execve
exename
exfat
exists %d
exists (%s)
exists and not dir
exit_code %y
exiting due to signal %d
exiting on fatal error
exiting thread
exiting wait thread for pid %d
export
external
f?;UUUUU
fa_IR
failed
failed to acquire input mutex after input event arrived
failed to allocate memory for syslog_globals.process_ident
failed to create key %S in the registry
failed to create mainthread handle
failed to create new win32 semaphore, currentvalue %ld, %E
failed to open /dev/null
failed, %E
failing message %y due to priority mask %y
failure in cygserver version request: %d
fcntl(%d, %d, ...)
fcntl: %s\n
fd %d not open
fd %d, %s, NtQueryInformationFile failed, status %y
fd %d, %s, read avail %u
fd %d, %s, write: size %u, avail %u
fd %d, h %p, address %p, len %ly, prot: %y, flags: %y, offset %Y
fd %d, handle %p
fd %d: defaulting to text
fd %d: not open
fd %d: opened as binary
ff-SN
ff_SN
fh %p, dev %08x
fhandler size
fhandler_base* build_fh_name(const char*, unsigned int, suffix_info*)
fhandler_base* build_fh_pc(path_conv&)
fhandler_base* dtable::dup_worker(fhandler_base*, int)
fhandler_base* fh_alloc(path_conv&)
fhandler_base* fhandler_process_fd::fetch_fh(void*&, uint32_t)
fhandler_console::input_states fhandler_console::process_input_message()
fhandler_dev_dsp::Audio::~Audio()
fhandler_dev_tape::fhandler_dev_tape()
fhandler_serial::open (%s, %y, 0%o)
fhandler_socket* get(int)
fi_FI
fi_FI@euro
fifo_client_connect_state fifo_client_handler::query_and_set_state()
fifo_reader
fifosel
fil_PH
file
file '%S' exists?
file was %s now %s
filemode set to %s
files
filesystems
fill_filebuf (%s)
find_exec (%s)
finished clearing
finished dll_crt0_0 initialization
finished processing terminated/stopped child
five
fixup_after_fork
fixup_before_fork_exec
fixup_shms_after_fork: NtMapViewOfSection (%p), status %y.  Terminating.
flags %y, ret %d
flags %y, supplied_bin %y
flushed file buffers
fo_FO
fork
fork failed - child pid %d, errno %d
fork: can't reserve memory for parent stack %p - %p, (child has %p - %p), %E
fork: couldn't allocate new stack guard page %p, %E
forkables dir %W
forkables mutex %W
forked pid %u
forked process %u died unexpectedly, retry %d, exit code %y
form-feed
found /dev/log, fd = %d, type = %s
found an archetype for %s(%d/%d) io_handle %p
found it
four
fpu\t\t: %s\nfpu_exception\t: %s\ncpuid level\t: %d\nwp\t\t: yes\n
fr_BE
fr_BE@euro
fr_CA
fr_CH
fr_FR
fr_FR@euro
fr_LU
fr_LU@euro
freed console, res %d
fsi_lock
fstat (%s)
full-stop
fur_IT
fv-az89-603
fy_DE
fy_NL
gK?A
ga_IE
ga_IE@euro
garbled signal pipe data nb %u, sig %d
gcc version 11.4.0 (GCC) 
gd_GB
gecos:
get_dp
get_mp
get_object_sd, %E
get_pos
get_proc_fhandler(%s)
getdomainname "%s"\n
getdomainname %s
gethostname %s
getpeername
getsockname
getsockopt
getsockopt (SO_KEEPALIVE) failed, %u\n
gez_ER
gez_ER@abegede
gez_ET
gez_ET@abegede
gl_ES
gl_ES@euro
glob
got %d
got %d error from build_fh_name
got %d error from build_fh_pc
got %d error from path_conv
got %u bytes from ReadFile
got STATUS_PIPE_CLOSING when trying to connect bogus client...
got interrupt %d, sending signal %d
graph
grave-accent
greater-than-sign
group not found in group DB
group* getgr_cp(group*)
group:
gu_IN
gv_GB
hOy'=
hParent %p, load_dlls %d
h_name %s
ha-NG
ha_NG
hak_TW
handle %p already opened
handle to netdb file %s: %p
hardlinks created
has a path longer than allowed for a\nWin32 working directory
has restricted permissions which render it\ninaccessible as Win32 working directory
hdl_cnt_mtx
he_IL
heap allocated at wrong address %p (mapped) != %p (expected)
heap base %p, heap top %p, heap size %ly (%lu)
here
here for '%s'
hi_IN
hif_FJ
hmm.  pgid %d pid %d
hne_IN
home:
host
hostent* cygwin_gethostbyaddr(const void*, socklen_t, int)
hostent* cygwin_gethostbyname(const char*)
hostent* gethostby_helper(const char*, int, int, int, int)
hostent* gethostby_specials(const char*, int, int, int)
hostent* gethostbyname2(const char*, int)
hostid %08y from MachineGuid %W
hr_HR
hsb_DE
ht_HT
hu_HU
hy_AM
hyphen
hyphen-minus
i3FB
iMaxSockets %d
iMaxUdpDg %d
ia_FR
id_ID
if_inet6
if_nameindex* if_nameindex()
iflag %y, oflag %y, cflag %y, lflag %y, VMIN %d, VTIME %d
ifr == NULL
ig_NG
ignorecase
ihash
ik_CA
illegal byte sequence
improbable, but %d != %d
impure
in fhandler_base dup
in forked process 
in use bytes     = %10lu\n
incoming lastaccess %ly %ly
incoming utime act %lx
incompatible version of cygwin server: client version %d.%d.%d.%d, server version %d.%d.%d.%d
inet6
inherited
inherited master
inheriting '%s' from parent
init_events
inity
input pipe
insert mode %sabled
int __acl_extended_fh(fhandler_base*)
int __acl_extended_file(path_conv&)
int __aclsort(int, aclent_t*)
int __sched_getaffinity_sys(pid_t, size_t, cpu_set_t*)
int __set_errno(const char*, int, int)
int __xpg_sigpause(int)
int _cygtls::call_signal_handler()
int _cygwin_istext_for_stdio(int)
int _gettemp(char*, int*, int, size_t, int)
int _pinfo::kill(siginfo_t&)
int _pipe(int*, unsigned int, int)
int _remove_r(_reent*, const char*)
int _setmode(int, int)
int accept4(int, sockaddr*, socklen_t*, int)
int access(const char*, int)
int acl(const char*, int, int, aclent_t*)
int acl_add_perm(acl_permset_t, acl_perm_t)
int acl_calc_mask(__acl_t**)
int acl_check(acl_t, int*)
int acl_clear_perms(acl_permset_t)
int acl_cmp(acl_t, acl_t)
int acl_copy_entry(acl_entry_t, acl_entry_t)
int acl_create_entry(__acl_t**, acl_entry_t*)
int acl_delete_entry(acl_t, acl_entry_t)
int acl_delete_perm(acl_permset_t, acl_perm_t)
int acl_entries(acl_t)
int acl_equiv_mode(acl_t, mode_t*)
int acl_extended_fd(int)
int acl_free(void*)
int acl_get_entry(acl_t, int, acl_entry_t*)
int acl_get_perm(acl_permset_t, acl_perm_t)
int acl_get_permset(acl_entry_t, acl_permset_t*)
int acl_get_tag_type(acl_entry_t, acl_tag_t*)
int acl_set_file(const char*, acl_type_t, acl_t)
int acl_set_permset(acl_entry_t, acl_permset_t)
int acl_set_qualifier(acl_entry_t, const void*)
int acl_set_tag_type(acl_entry_t, acl_tag_t)
int acl_valid(acl_t)
int aclfrommode(aclent_t*, int, mode_t*)
int aclsort(int, int, aclent_t*)
int acltomode(aclent_t*, int, mode_t*)
int aio_error(const aiocb*)
int aio_fsync(int, aiocb*)
int aio_read(aiocb*)
int aio_suspend(const aiocb* const*, int, const timespec*)
int aio_write(aiocb*)
int aiochkslot(aiocb*)
int aioqueue(aiocb*)
int aiosuspend(const aiocb* const*, int, const timespec*)
int av::setup(const char*, path_conv&, const char*, int, const char* const*, bool)
int chdir(const char*)
int check_access(security_descriptor&, GENERIC_MAPPING&, ACCESS_MASK, int, bool)
int check_file_access(path_conv&, int, bool)
int check_registry_access(HANDLE, int, bool)
int check_reparse_point_target(HANDLE, bool, PREPARSE_DATA_BUFFER, PUNICODE_STRING)
int checkstate(waitq*)
int child_info_spawn::worker(const char*, const char* const*, const char* const*, int, int, int)
int chmod(const char*, mode_t)
int chown_worker(const char*, unsigned int, uid_t, gid_t)
int chroot(const char*)
int clearenv()
int client_request::make_request()
int clock_getres(clockid_t, timespec*)
int clock_gettime(clockid_t, timespec*)
int clock_nanosleep(clockid_t, int, const timespec*, timespec*)
int clock_setres(clockid_t, timespec*)
int clock_settime(clockid_t, const timespec*)
int close(int)
int closedir(DIR*)
int cwdstuff::set(path_conv*, const char*)
int cyg_ldap::enumerate_ad_accounts(PCWSTR, bool)
int cyg_ldap::open(PCWSTR)
int cygwin_accept(int, sockaddr*, socklen_t*)
int cygwin_bind(int, const sockaddr*, socklen_t)
int cygwin_bindresvport(int, sockaddr_in*)
int cygwin_bindresvport_sa(int, sockaddr*)
int cygwin_connect(int, const sockaddr*, socklen_t)
int cygwin_getaddrinfo(const char*, const char*, const addrinfo*, addrinfo**)
int cygwin_gethostname(char*, size_t)
int cygwin_getnameinfo(const sockaddr*, socklen_t, char*, size_t, char*, size_t, int)
int cygwin_getpeername(int, sockaddr*, socklen_t*)
int cygwin_getsockname(int, sockaddr*, socklen_t*)
int cygwin_getsockopt(int, int, int, void*, socklen_t*)
int cygwin_listen(int, int)
int cygwin_rexec(char**, short unsigned int, char*, char*, char*, int*)
int cygwin_setsockopt(int, int, int, const void*, socklen_t)
int cygwin_shutdown(int, int)
int cygwin_socket(int, int, int)
int cygwin_umount(const char*, unsigned int)
int dirfd(DIR*)
int dofork(void**, bool*)
int dtable::dup3(int, int, int)
int dtable::extend(size_t, size_t)
int dup(int)
int dup2(int, int)
int dup3(int, int, int)
int euidaccess(const char*, int)
int faccessat(int, const char*, int, int)
int facl(int, int, int, aclent_t*)
int fchdir(int)
int fchmod(int, mode_t)
int fchmodat(int, const char*, mode_t, int)
int fchown(int, uid_t, gid_t)
int fchownat(int, const char*, uid_t, gid_t, int)
int fcntl(int, int, ...)
int fexecve(int, char* const*, char* const*)
int fhandler_base::close_with_arch()
int fhandler_base::fhaccess(int, bool)
int fhandler_base::fstat_by_handle(stat*)
int fhandler_base::fstat_by_name(stat*)
int fhandler_base::fstat_helper(stat*)
int fhandler_base::fstatvfs_by_handle(HANDLE, statvfs*)
int fhandler_base::open_fs(int, mode_t)
int fhandler_base::open_null(int)
int fhandler_base::open_with_arch(int, mode_t)
int fhandler_base::utimens_fs(const timespec*)
int fhandler_dev_clipboard::set_clipboard(const void*, size_t)
int fhandler_dev_dsp::_ioctl(unsigned int, void*)
int fhandler_dev_floppy::get_drive_info(hd_geometry*)
int fhandler_disk_file::fs_ioc_setflags(uint64_t)
int fhandler_disk_file::prw_open(bool, void*)
int fhandler_fifo::add_client_handler(bool)
int fhandler_fifo::remap_shared_fc_handler(size_t)
int fhandler_fifo::take_ownership(DWORD)
int fhandler_fifo::update_my_handlers()
int fhandler_mqueue::_dup(HANDLE, fhandler_mqueue*)
int fhandler_mqueue::mq_getattr(mq_attr*)
int fhandler_mqueue::mq_notify(const sigevent*)
int fhandler_mqueue::mq_open(int, mode_t, mq_attr*)
int fhandler_mqueue::mq_setattr(const mq_attr*, mq_attr*)
int fhandler_mqueue::mq_timedsend(const char*, size_t, unsigned int, const timespec*)
int fhandler_mqueue::mutex_lock(HANDLE, bool)
int fhandler_pty_master::process_slave_output(char*, size_t, int)
int fhandler_signalfd::signalfd(const sigset_t*, int)
int fhandler_socket_inet::set_keepalive(int, int, int)
int fhandler_socket_local::af_local_accept()
int fhandler_socket_local::af_local_set_no_getpeereid()
int fhandler_socket_wsock::set_socket_handle(SOCKET, int, int, int)
int fhandler_termios::ioctl(int, void*)
int fhandler_timerfd::gettime(itimerspec*)
int fhandler_timerfd::settime(int, const itimerspec*, itimerspec*)
int fhandler_timerfd::timerfd(clockid_t, int)
int fixup_mmaps_after_fork(HANDLE)
int fixup_shms_after_fork()
int flock(int, int)
int fremovexattr(int, const char*)
int frok::child(volatile char*)
int frok::parent(volatile char*)
int fsetxattr(int, const char*, const void*, size_t, int)
int fstat(int, stat*)
int fstatat(int, const char*, stat*, int)
int fstatvfs(int, statvfs*)
int fsync(int)
int ftruncate(int, off_t)
int futimens(int, const timespec*)
int futimesat(int, const char*, const timeval*)
int gen_full_path_at(char*, int, const char*, int)
int get_ifconf(ifconf*, int)
int get_inet_addr_inet(const sockaddr*, int, sockaddr_storage*, int*)
int get_inet_addr_local(const sockaddr*, int, sockaddr_storage*, int*, int*, int*)
int get_object_sd(HANDLE, security_descriptor&)
int get_posix_access(PSECURITY_DESCRIPTOR, mode_t&, uid_t*, gid_t*, aclent_t*, int, bool*)
int get_process_state(DWORD)
int get_reg_sd(HANDLE, security_descriptor&)
int getacl(HANDLE, path_conv&, int, aclent_t*)
int getdomainname(char*, size_t)
int getentropy(void*, size_t)
int geterrno_from_win_error(DWORD, int)
int getgrouplist(const char*, gid_t, gid_t*, int*)
int getifaddrs(ifaddrs**)
int getitimer(int, itimerval*)
int getpriority(int, id_t)
int getrlimit(int, rlimit*)
int getrusage(int, rusage*)
int globify(char*, char**&, int&, int&)
int handle_sigprocmask(int, const sigset_t*, sigset_t*, sigset_t&)
int handle_sigsuspend(sigset_t)
int initgroups(const char*, gid_t)
int internal_getgroups(int, gid_t*, cyg_ldap*)
int ioctl(int, int, ...)
int isatty(int)
int kill0(pid_t, siginfo_t&)
int kill_pgrp(pid_t, siginfo_t&)
int link(const char*, const char*)
int linkat(int, const char*, int, const char*, int)
int lio_listio(int, aiocb* const*, int, sigevent*)
int lockf(int, int, off_t)
int logout(const char*)
int lsetxattr(const char*, const char*, const void*, size_t, int)
int lstat(const char*, stat*)
int malloc_trim(size_t)
int mallopt(int, int)
int mkdir(const char*, mode_t)
int mkdirat(int, const char*, mode_t)
int mkfifoat(int, const char*, mode_t)
int mknod(const char*, mode_t, dev_t)
int mknodat(int, const char*, mode_t, dev_t)
int mlock(const void*, size_t)
int mount(const char*, const char*, unsigned int)
int mount_info::add_item(const char*, const char*, unsigned int)
int mount_info::conv_to_posix_path(const char*, char*, int)
int mount_info::conv_to_win32_path(const char*, char*, device&, unsigned int*)
int mount_info::cygdrive_win32_path(const char*, char*, int&)
int mount_info::del_item(const char*, unsigned int)
int mount_info::write_cygdrive_info(const char*, unsigned int)
int mprotect(void*, size_t, int)
int mq_close(mqd_t)
int mq_getattr(mqd_t, mq_attr*)
int mq_notify(mqd_t, const sigevent*)
int mq_setattr(mqd_t, const mq_attr*, mq_attr*)
int mq_timedsend(mqd_t, const char*, size_t, unsigned int, const timespec*)
int msgctl(int, int, msqid_ds*)
int msgget(key_t, int)
int msgsnd(int, const void*, size_t, int)
int msync(void*, size_t, int)
int mtinfo_drive::close(HANDLE, bool)
int mtinfo_drive::create_partitions(HANDLE, int32_t)
int mtinfo_drive::error(const char*)
int mtinfo_drive::get_status(HANDLE, mtget*)
int mtinfo_drive::ioctl(HANDLE, unsigned int, void*)
int mtinfo_drive::open(HANDLE)
int munlock(const void*, size_t)
int munmap(void*, size_t)
int nanosleep(const timespec*, timespec*)
int normalize_posix_path(const char*, char*, char*&)
int normalize_win32_path(const char*, char*, char*&)
int nt_create(LPSECURITY_ATTRIBUTES, void*&, void*&, DWORD, int64_t*)
int open(const char*, int, ...)
int openat(int, const char*, int, ...)
int openpty(int*, int*, char*, const termios*, const winsize*)
int pass_handler::initialize(int)
int pass_handler::print_va(const char*, va_list)
int pause()
int pclose(FILE*)
int peek_console(select_record*, bool)
int peek_fifo(select_record*, bool)
int peek_pipe(select_record*, bool)
int peek_pty_slave(select_record*, bool)
int peek_serial(select_record*, bool)
int peek_signalfd(select_record*, bool)
int peek_socket(select_record*, bool)
int peek_timerfd(select_record*, bool)
int peek_windows(select_record*, bool)
int pipe(int*)
int pipe2(int*, int)
int pipe_data_available(int, fhandler_base*, HANDLE, bool)
int posix_fadvise(int, off_t, off_t, int)
int posix_fallocate(int, off_t, off_t)
int posix_madvise(void*, size_t, int)
int ppoll(pollfd*, nfds_t, const timespec*, const sigset_t*)
int proc_subproc(DWORD, uintptr_t)
int pselect(int, fd_set*, fd_set*, fd_set*, const timespec*, const sigset_t*)
int pthread_getattr_np(pthread_t, pthread_attr**)
int pthread_mutex::lock(PLARGE_INTEGER)
int pthread_mutex::unlock()
int pthread_sigmask(int, const sigset_t*, sigset_t*)
int pthread_spinlock::lock()
int pthread_spinlock::unlock()
int ptsname_r(int, char*, size_t)
int putenv(char*)
int quotactl(int, const char*, int, caddr_t)
int raise(int)
int readdir_worker(DIR*, dirent*)
int remove_proc(int)
int rename2(const char*, const char*, unsigned int)
int renameat2(int, const char*, int, const char*, unsigned int)
int revoke(char*)
int rmdir(const char*)
int scandir(const char*, dirent***, int (*)(const dirent*), int (*)(const dirent**, const dirent**))
int scandirat(int, const char*, dirent***, int (*)(const dirent*), int (*)(const dirent**, const dirent**))
int sched_get_priority_max(int)
int sched_get_priority_min(int)
int sched_getparam(pid_t, sched_param*)
int sched_rr_get_interval(pid_t, timespec*)
int sched_setaffinity(pid_t, size_t, const cpu_set_t*)
int sched_setparam(pid_t, const sched_param*)
int sched_setscheduler(pid_t, int, const sched_param*)
int select(int, fd_set*, fd_set*, fd_set*, LONGLONG)
int semaphore::_trywait()
int semaphore::_wait(PLARGE_INTEGER)
int semctl(int, int, int, ...)
int semget(key_t, int, int)
int semop(int, sembuf*, size_t)
int set_bits(select_record*, fd_set*, fd_set*, fd_set*)
int set_privilege(HANDLE, DWORD, bool)
int set_same_file_return(bool)
int setcontext(const ucontext_t*)
int setdtablesize(int)
int setegid(gid_t)
int setenv(const char*, const char*, int)
int seteuid(uid_t)
int setgroups(int, const gid_t*)
int setitimer(int, const itimerval*, itimerval*)
int setmode_helper(_reent*, FILE*)
int setpgid(pid_t, pid_t)
int setpriority(int, id_t, int)
int setregid(gid_t, gid_t)
int setreuid(uid_t, uid_t)
int setrlimit(int, const rlimit*)
int setspeed(speed_t&, speed_t)
int settimeofday(const timeval*, const timezone*)
int setuid(uid_t)
int setxattr(const char*, const char*, const void*, size_t, int)
int setxattr_worker(path_conv&, const char*, const void*, size_t, int)
int shm_open(const char*, int, mode_t)
int shmctl(int, int, shmid_ds*)
int shmdt(const void*)
int shmget(key_t, size_t, int)
int sigaction(int, const sigaction*, sigaction*)
int sigaction_worker(int, const sigaction*, sigaction*, bool)
int sigaddset(sigset_t*, int)
int sigaltstack(const stack_t*, stack_t*)
int sigdelset(sigset_t*, int)
int sighold(int)
int siginterrupt(int, int)
int sigismember(const sigset_t*, int)
int signalfd(int, const sigset_t*, int)
int sigpacket::process()
int sigpacket::setup_handler(void*, sigaction&, _cygtls*)
int sigpause(int)
int sigprocmask(int, const sigset_t*, sigset_t*)
int sigqueue(pid_t, int, sigval)
int sigrelse(int)
int sigsuspend(const sigset_t*)
int sigtimedwait(const sigset_t*, siginfo_t*, const timespec*)
int sigwait_common(const sigset_t*, siginfo_t*, PLARGE_INTEGER)
int sockatmark(int)
int socketpair(int, int, int, int*)
int spawnve(int, const char*, const char* const*, const char* const*)
int start_thread_socket(select_record*, select_stuff*)
int stat(const char*, stat*)
int stat_worker(path_conv&, stat*)
int statvfs(const char*, statvfs*)
int strcoll_l(const char*, const char*, __locale_t*)
int symlink(const char*, const char*)
int symlink_info::check(char*, const suffix_info*, fs_info&, path_conv_handle&)
int symlink_info::check_sysfile(HANDLE)
int symlink_worker(const char*, path_conv&, bool)
int symlink_wsl(const char*, path_conv&)
int symlinkat(const char*, int, const char*)
int sysinfo(sysinfo*)
int system(const char*)
int tcdrain(int)
int tcflow(int, int)
int tcflush(int, int)
int tcgetattr(int, termios*)
int tcgetpgrp(int)
int tcsendbreak(int, int)
int tcsetattr(int, int, const termios*)
int tcsetpgrp(int, pid_t)
int timer_create(clockid_t, sigevent*, timer_t*)
int timer_delete(timer_t)
int timer_getoverrun(timer_t)
int timer_gettime(timer_t, itimerspec*)
int timer_settime(timer_t, int, const itimerspec*, itimerspec*)
int timer_tracker::settime(int, const itimerspec*, itimerspec*)
int timerfd_create(clockid_t, int)
int timerfd_gettime(int, itimerspec*)
int timerfd_settime(int, int, const itimerspec*, itimerspec*)
int truncate(const char*, off_t)
int try_to_debug()
int tty_list::allocate(void*&, void*&)
int tty_list::connect(int)
int tty_min::is_orphaned_process_group(int)
int ttyname_r(int, char*, size_t)
int umount(const char*)
int uname(utsname*)
int uname_x(utsname*)
int unlink(const char*)
int unlinkat(int, const char*, int)
int unsetenv(const char*)
int usleep(useconds_t)
int utime(const char*, const utimbuf*)
int utimens_worker(path_conv&, const timespec*)
int utimensat(int, const char*, const timespec*, int)
int utmpname(const char*)
int vfork()
int vhangup()
int wcscoll_l(const wchar_t*, const wchar_t*, __locale_t*)
int write_ea(HANDLE, path_conv&, const char*, const char*, size_t, int)
internal
internal error reading the windows environment - too many environment variables?
into buffer
invalid argument to regex routine
invalid backreference number
invalid character class
invalid character range
invalid collating element
invalid flags value %y
invalid flags: %y
invalid fstab option - '%s'
invalid pid %d(%x), signal %d
invalid regular expression
invalid repetition count(s)
invalid server "%s"\n
invisible_console %d
io_handle
ioctl
ioctl (%x)
ioctl(fd %d, cmd %y)
iovcnt >= 1
is a device
is a virtual Cygwin directory which does\nnot exist for a native Windows application
is not accessible for some unknown reason
is_IS
iso9660
it_CH
it_IT
it_IT@euro
itimer
iu-CA
iu_CA
jR\f5a@
jW6 
ja_JP
kQAS
kQAS;
kQAS\tN;
kQAS]N;
kQASkQ;
kQASmQ;
ka_GE
kab_DZ
kerb %d, domain member %d, user domain <%W>, machine <%W>
kill (%d, %d)
killing pid %d, pgrp %d, p->%s, %s
kk_KZ
kl_GL
km_KH
kn_IN
ko_KR
kok_IN
ks-IN
ks_IN
ks_IN@devanagari
ku-IQ
ku_TR
kw_GB
ky_KG
l,kg<i
lMR:
lb_LU
ldap_bind(%W) 0x%02x
ldap_init
ldap_init(%W) error 0x%02x
ldap_next_page
ldap_result() error 0x%02x
ldap_search
ldap_search(%W, ROOTDSE) error 0x%02x
ldap_search_init_pageW(%W,%W) error 0x%02x
ldap_search_sW(%W,%W) error 0x%02x
ldap_set_option(LDAP_OPT_ENCRYPT) error 0x%02x
ldap_set_option(LDAP_OPT_SIGN) error 0x%02x
leaving
leaving thread_socket
left-brace
left-curly-bracket
left-parenthesis
left-square-bracket
len (%U) > 256
len < (u_int)LONG_MAX
less-than-sign
lf_findoverlap: default\n
lg_UG
li_BE
li_NL
lij_IT
line %d:  %s<%p> usecount + %d = %d
line fragment allocated %p
line_edit_status fhandler_termios::line_edit(const char*, size_t, termios&, ssize_t*)
linked dll bss
linked dll data
listen
ln_CD
lo_LA
loadavg
loaded dll bss
loaded dll data
local
lock_process
lock_ttys::lock_ttys(DWORD)
lockf_guard
lockf_t* inode_t::get_all_locks_list()
login
long int _get_osfhandle(int)
long int get_avphys(int)
long int gethostid()
long int pathconf(const char*, int)
long int sysconf(int)
long int telldir(DIR*)
long unsigned int setlsapwd(const char*, const char*)
looking for processes to reap, count %d
looping
looping because pid %d, procinfo->pid %d, procinfo->dwProcessid %u has PID_EXITED|PID_REAPED set
lost connection to cygserver, error = %u
low-line
lower
lsa_open_policy(NULL) failed
lsaprivkeyauth failed, try s4uauth.
lt_LT
lv_LV
lzh_TW
m %d, us %U, wmfo_timeout %d
m0_dA
m<Pk
mB?3h-l
mQAS
mQAS;
mQAS\tN;
mQAS]N;
mQASkQ;
mQASmQ;
macdef
machine
mag_IN
mai_IN
mai_NP
main
mallinfo mallinfo()
malloc failed, %E
map_pages (addr=%p, len=%lu)
map_pages (fd=%d, len=%lu)
maps
mask:
max system bytes = %10lu\n
me %p, testing fd %d (%s)
meminfo
mfe_MU
mg_MG
mhr_RU
mi_NZ
miq_NI
misc
mjw_IN
mk_MK
ml_IN
mn-CN
mn-MN
mn_MN
mni_IN
mnw_MM
mode = %d, prog_arg = %.9500s
mountinfo
mounts
mouse: %s at (%d,%d)
mouse: double-click -> click
mprotect (addr: %p, len %lu, prot %y)
mq_receive: curmsgs = %ld; head = 0
mq_send: curmsgs = %ld; free = 0
mqd_t mq_open(const char*, int, ...)
mr_IN
ms_MY
msgctl (msqid = %d, cmd = %y, buf = %p)
msgget (key = %U, msgflg = %y)
msglen () <= _buflen
msgrcv (msqid = %d, msgp = %p, msgsz = %ld, msgtyp = %d, msgflg = %y)
msgsnd (msqid = %d, msgp = %p, msgsz = %ld, msgflg = %y)
msync (addr: %p, len %lu, flags %y)
mt_MT
mt_mtx
multibyte sequence write failed, handle %p
munmap (addr %p, len %lu)
mutex %p
mutex %p, owner %p, self %p, lock_counter %d, recursion_counter %u, type %d, res %d
mutex %p, self %p, owner %p, lock_counter %d, recursion_counter %u
mvfs
my_MM
myself dwProcessId %u
myself->ctty %d, myself->sid %d, myself->pid %d, arg %d, tc()->getsid () %d\n
n %d, waiting for subproc_ready(%p) and child process(%p)
name %W, shared %p (wanted %p), h %p, m %d, created %d
name %W, size %u, mode %s
name %s, id %y, this %p
name %s, size %u, mode %s
name too long during search\n
nameserver
nameserver "%s"\n
naming context <%W>
nan_TW
nan_TW@latin
native
native %s
nb_NO
ncfsd
nds_DE
nds_NL
ne_NP
needed, since last fork loaded %W
netapp
new alias alloc %p
new egid: %u current: %u
new fd out of bounds: %d
new process name %W
newfh->io_handle %p, oldfh->io_handle %p, new win32_name %p, old win32_name %p
newline
ngroups != NULL
nhn_MX
nine
niu_NU
niu_NZ
nl_AW
nl_BE
nl_BE@euro
nl_NL
nl_NL@euro
nn_NO
no /dev/tty assigned
no client buffer for reply body: %lu bytes needed
no dns server found\n
no matching terminated children found
no problems
no space for "%s"\n
no space for server "%s"\n
no-NO
no-add-slash
no_NO
no_envblock %d
no_getpeereid set
noacl
nodev
none
normal
nosuid
not 
not (%s), skip %s%s
not a symlink
not called from open for /dev/tty
not clearing: %d, master_pid %d
not closing archetype
not closing passed in archetype %p, usecount %d
not really ready
notexec
nouser
nr_ZA
nso_ZA
nt->Name.Buffer == NULL
nt_read status %y
ntdll.dll
ntfs
number-sign
nwfs
o0D0
o0D0|
o@Rn
oEZ(
oc_FR
off_t format_proc_cpuinfo(void*, char*&)
off_t format_proc_partitions(void*, char*&)
off_t format_proc_stat(void*, char*&)
off_t format_proc_uptime(void*, char*&)
off_t format_process_fd(void*, char*&)
off_t format_process_maps(void*, char*&)
off_t format_process_stat(void*, char*&)
off_t lseek(int, off_t, int)
off_t mmap_record::map_pages(SIZE_T)
old %s, ctty device number %y, tc.ntty device number %y flags & O_NOCTTY %y
old %sent structure "%s" %p\n
oldfh->dup failed
oldmask %lx, newmask %lx, deltamask %lx
oldmask %ly, newmask %ly
om_ET
om_KE
only found non-terminated children
open
open input event failed, %E
open input mutex failed, %E
open output mutex failed, %E
open pipe switch mutex failed, %E
open(%s, %y)
open_setup failed, %E
opened
opened conin$ %p, conout$ %p
opened pty master for pty%d
opening UDP socket\n
opening loadavg mutexfailed\n
opening user shared for '%W' at %p
openlog called with (%s, %d, %d)
operation aborted
option doesn't take an argument -- %.*s
option requires an argument -- %c
option requires an argument -- %s
options
or_IN
os_RU
osquery
other:
out of memory
out of memory reading system process information
output pipe
output pipe for non-cygwin apps
ov.hEvent
override
owner set to %d
owner_found_evt
owner_found_evt signaled, but I'm not the owner
owner_needed_evt
p >= path
pCda`D/vpEDC`E
pHdr=%p bytes=%d
pSampleData=%p nBytes=%d
pa-PK
pa_IN
pa_PK
page %u %u\nswap %u %u\nintr %u\nctxt %u\nbtime %u\n
pap_AW
pap_CW
params server "%s"\n
parent=%p
parentheses not balanced
partition
partition info: offset %D  length %D
partitions
passwd
passwd* getpw_cp(passwd*)
passwd:
password
pc %p, h %p, inside_kernel %d
pcgM`d\rxpeG/`e
pep->p_name strdup %p
percent-sign
performed fork fixups and dynamic dll loading
period
pgid
pglock
phi->NumberOfHandles <= n_handle
physical id\t: %d\n
pid %d wants some information
pid %d, exit value - old %y, windows %y, cygwin %y
pid %d, pgid %d, process_state %y
pid %d, pgid %d, res %d
pid %d, prog_arg %s, cmd line %.9500s)
pid %d, signal %d
pid %u, WFMO returned %d, exit_code %y, res %d
pid %u, exitval %p
pid_t cygwin_pid(DWORD)
pid_t cygwin_winpid_to_pid(int)
pid_t getpgid(pid_t)
pid_t getpid()
pid_t getppid()
pid_t getsid(pid_t)
pid_t setsid()
pid_t sexecve_is_bad()
pid_t tcgetsid(int)
pid_t wait4(int, int*, int, rusage*)
pinfo failed
pipe access denied%s
pipe access denied, retrying
pipe busy
pipe busy, retrying
pipe read handle %p
pipe write handle %p
pipe write handle NULL
pipe-%p
pipe:[
pipe:[%D]
pipe:[%U]
pipe_byte
pipesel
pl_PL
plus-sign
posix %s
posix=0
posix=1
posixrules
potential attempt to reinitialise a semaphore
ppid
ppid->pgid %d, ppid->sid %d
prefork: couldn't create pipe process tracker, %E
prefork: couldn't set process pipe(%p) inherit state, %E
prepare
primary
print
priority class %d
prlfs
proc
proc intro
proc size
proc table overflow: hit %d processes, pid %d\n
proc_retry
proc_subproc returned 0
process %d stopped by signal %d
process group is orphaned
process will continue without cygserver support
processing PICOM_CMDLINE
processing PICOM_CWD
processing PICOM_ENVIRON
processing PICOM_FD
processing PICOM_FDS
processing PICOM_FILE_PATHCONV
processing PICOM_PIPE_FHANDLER
processing PICOM_ROOT
processing PICOM_SIGINFO
processor\t: %d\n
prog '%s'
prog_arg is NULL
prog_arg is empty
program=%W, pid %u, thread %s\r\n
proto
protocol
protoent %s %p %y
protoent* cygwin_getprotobyname(const char*)
protoent* cygwin_getprotoent()
ps_AF
pselect (%d, %p, %p, %p, %p, %p)
pt_BR
pt_PT
pt_PT@euro
pthread_cond::_fixup_after_fork () failed to recreate win32 semaphore
pthread_cond::pthread_cond(pthread_condattr*)
pthread_key::recreate_key_from_buffer () failed to reallocate Tls storage
pthread_mutex::_fixup_after_fork () doesn't understand PROCESS_SHARED mutex's
pthread_mutex::_fixup_after_fork () failed to recreate win32 event for mutex
pthread_mutex_destroy (%p) = %d
pthread_mutex_unlock (%p) = %d
pthread_rwlock::_fixup_after_fork () failed to recreate mutex
pthread_rwlock::pthread_rwlock(pthread_rwlockattr*)
ptr=%p len=%ld
pty %d was not allocated
pty handles have been closed
pty master control pipe
pty%d <%p,%p> closing
pty%d allocated
pty%d open failed - failed to create %s
pty%d, write(%p, %lu)
pty%d-echoloop
pty%d-from-master
pty%d-from-master-nat
pty%d-to-master
pty%d-to-master-nat
ptym
ptymf
ptyssel
punct
pure virtual method called
pw_gecos %p (%s)
q/Ro
quc-GT
query "%s" type %d\n
query_hdl
query_hdl_close_req_evt
querydomain "%s"  "%s" type %d\n
querydomain: name too long\n
question-mark
queued aio %p
quotation-mark
quz_PE
r-event.%08x.%016X
r11=%016X r12=%016X r13=%016X\r\n
r14=%016X r15=%016X\r\n
r8 =%016X r9 =%016X r10=%016X\r\n
raj_IN
random: not enough state (%lu bytes); ignored.\n
raw keyboard mode %sabled
raw_read
raw_write
rax=%016X rbx=%016X rcx=%016X\r\n
rbp=%016X rsp=%016X\r\n
rcmd: %s: %s\n
rcmd: accept: %s\n
rcmd: getaddrinfo: %s\n
rcmd: select (setting up stderr): %s\n
rcmd: socket: %s\n
rcmd: socket: All ports in use\n
rcmd: too many files\n
rcmd: write (setting up stderr): %s\n
rdx=%016X rsi=%016X rdi=%016X\r\n
read
read %lu bytes from buffer (rest %lu)
read %lu bytes from tape (one block)
read %lu bytes from tape (rest %lu)
read %u bytes from buffer (rest %u)
read %u bytes from pos %U %s
read %u bytes from pos %U directly
read failed, %E
read(%d, %p, %d) %sblocking
read(%p, %lu) handle %p
read(%p,%d)
read(TCP) %d out of %d\n
read(TCP): %s\n
read: %s, n %d
read: %s, ready for read
read: %s, ready for read: avail %d
read: %s, saw EOF
read_ea (%S, %s, %p, %lu)
read_mtx
read_ready
read_ready: %d, write_ready: %d, except_ready: %d
readahead
reader
reading %lu bytes (vtime %d)
readv(%d, %p, %d) %sblocking
ready %d
real: %d, effective: %d
real: %u, effective: %u
recalculating us
recreate_mmaps_after_fork_failed
recreate_shm areas after fork failed
recursion_counter %u res %d
recursive exit?
recv_internal
recvfrom sockfd %d: %s\n
recvfrom: %d bytes from %08X:%hu sockfd %d\n
recvsize < (u_int)INT_MAX
refs
regexec() failed to match
registry
registry search "%s"\n
registry server "%s"\n
registry32
registry64
released a thread that was not inuse
released waiting thread
releasing blocked space at %p
remote drive
removing chld_procs[%d], pid %d, child_procs count %d
repetition-operator operand invalid
reply body read failure: only %ld bytes received of %lu, error = %d(%u)
reply header read failure: only %ld bytes received of %lu, error = %d(%u)
request F_RDLCK on O_WRONLY file: EBADF
request F_WRLCK on O_RDONLY file: EBADF
request body write failure: only %ld bytes sent of %lu, error = %d(%u)
request header write failure: only %ld bytes sent of %lu, error = %d(%u)
request_code >= 0 && request_code < CYGSERVER_REQUEST_LAST
requested %p != %p mem alloc base %p, state %y, size %lu, %E
res %d
res after verify %d
reset_com
ret %p
retired aio %p; slot %d released
retrans
retry
retrying with TCP\n
return -1, set errno to ENOSPC
returning
returning %d
returning %d tty: %s
returning %d, %s mode
returning %p from sending signal %d
returning -1
returning signal %d
reverse-solidus
rewind in position 0
rewinding
rexec: socket
right-brace
right-curly-bracket
right-parenthesis
right-square-bracket
rlimit_stack_guard
ro_RO
root
root_idx %d, user_shared magic %y, nmounts %d
ru_RU
ru_UA
runnable
runneradmin
running
rw_RW
s4uauth failed, bail out
sa_IN
sah_RU
sat_IN
saw EOF
sc_IT
sd-IN
sd-PK
sd_IN
sd_IN@devanagari
se_NO
search
search "%s" type %d\n
searchpath %s
sel.always_ready %d
sel.wait returns %d
select sockfd %d: %s\n
select: protocol failure in circuit setup\n
select_sem
select_stuff::wait_states select_stuff::wait(fd_set*, fd_set*, fd_set*, LONGLONG)
self
self/mounts
sem %p
sem.
semaphore
semaphore** sem_open(const char*, int, ...)
semaphore.%08x.%016X
semaphore/%016X%08x%08x
semctl (semid = %d, semnum = %d, cmd = %d, arg = %p)
semget (key = %U, nsems = %d, semflg = %y)
semicolon
semop (semid = %d, sops = %p, nsops = %ld)
send_internal
sending %d notification to parent failed, %E
sending EOF to slave
sendmsg
sendsig %p, pid %d, signal %d, its_me %d
sendsig handle never materialized
sendsize < (u_int)INT_MAX
sendto: server %08X:%hu sockfd %d %s\n
sep->s_name strdup %p
sep->s_proto strdup %p
serv
servent* cygwin_getservbyname(const char*, const char*)
servent* cygwin_getservbyport(int, const char*)
servent* cygwin_getservent()
services
set close_on_exec for %s to %d
set logout time for %s
set_blocksize
set_compression
set_imp_token (%p, %d)
set_keepalive
set_options
set_partition
set_pos
setgroups (%d)
setmask %lx, newmask %lx, mask_bits %lx
setprotoent (%d)
setservent (%d)
setsockopt
setsockopt (SO_KEEPALIVE) failed, %u\n
setsockopt optval=%x
setting file pointer to %U
setting initial state on %s (reset_com %d)
seven
sgs_LT
shared_fc_hdl
shell:
shmat (shmid = %d, shmaddr = %p, shmflg = %y)
shmctl (shmid = %d, cmd = %d, buf = %p)
shmdt (shmaddr = %p)
shmem created
shmem existed; ok if we're not the first reader
shmem_handle
shmget (key = %U, size = %d, shmflg = %y)
shn_MM
shs_CA
shut up gcc
shutdown
si %p si->thread %p
si_LK
siblings\t: %u\n
siblings\t: 1\n
sid %d, pgid %d, %s
sid_ET
sig %d\n
signal %d %sdelivered
signal %d blocked
signal %d default is currently ignore
signal %d ignored
signal %d out of range
signal %d processing
signal %d, newact %p (handler %p), oa %p
signal %d, newact %p, oa %p
signal %d, signal handler %p
signal received
signal received but ignored
signal received, set EINTR
signal_arrived
signalfd %d not ready
signalfd %d ready
signalfd (%d, %p, %y)
signalled %p that I was ready
signalled child
signalling pack.wakeup %p
signalling parent: %s
sigset_t set_process_mask_delta()
sigset_t sig_send(_pinfo*, siginfo_t&, _cygtls*)
sigwait
size %ld, fds %p
size of shared memory region changed from %lu to %u
size_t confstr(int, char*, size_t)
size_t dll_list::forkable_ntnamesize(dll_type, PCWCHAR, PCWCHAR)
size_t malloc_usable_size(void*)
size_t strxfrm_l(char*, const char*, size_t, __locale_t*)
size_t wcsxfrm_l(wchar_t*, const wchar_t*, size_t, __locale_t*)
sk_SK
sl_SI
slash
sleeping
slot %d released
slot %d%s
sm_WS
smallprint_buf
smbfs
so_DJ
so_ET
so_KE
so_SO
socket
socket (%d, %d (flags %y), %d)
socket is now %sblocking
socket(TCP): %s\n
socket(UDP): %s\n
socket: protocol failure in circuit setup.\n
socket:[
socket:[%lu]
socketpair
socksel
solidus
some disk file
space
sparse
spawned windows pid %d
spawnve (%s, %s, %p)
spinlock %p, owner %p, self %p, res %d
spinlock %p, self %p, owner %p
splitlock != NULL
sq_AL
sq_MK
sr-BA
sr-ME
sr-RS
sr_ME
sr_ME@latin
sr_RS
sr_RS@latin
sr_SP
sr_SP@latin
src %s
src '%s', dst '%s'
src_path %s, dst %s, flags %y, rc %d
ss_ZA
ssize_t acl_copy_ext(void*, acl_t, ssize_t)
ssize_t acl_size(acl_t)
ssize_t aio_return(aiocb*)
ssize_t asyncread(aiocb*)
ssize_t asyncwrite(aiocb*)
ssize_t check_iovec(const iovec*, int, bool)
ssize_t cygwin_conv_path(cygwin_conv_path_t, const void*, void*, size_t)
ssize_t cygwin_conv_path_list(cygwin_conv_path_t, const void*, void*, size_t)
ssize_t cygwin_recv(int, void*, size_t, int)
ssize_t cygwin_recvfrom(int, void*, size_t, int, sockaddr*, socklen_t*)
ssize_t cygwin_recvmsg(int, msghdr*, int)
ssize_t cygwin_send(int, const void*, size_t, int)
ssize_t cygwin_sendmsg(int, const msghdr*, int)
ssize_t cygwin_sendto(int, const void*, size_t, int, const sockaddr*, socklen_t)
ssize_t env_PATH_to_posix(const void*, void*, size_t)
ssize_t fgetxattr(int, const char*, void*, size_t)
ssize_t fhandler_dev_dsp::_write(const void*, size_t)
ssize_t fhandler_mqueue::mq_timedrecv(char*, size_t, unsigned int*, const timespec*)
ssize_t fhandler_socket_wsock::send_internal(_WSAMSG*, int)
ssize_t flistxattr(int, char*, size_t)
ssize_t getrandom(void*, size_t, unsigned int)
ssize_t getxattr(const char*, const char*, void*, size_t)
ssize_t getxattr_worker(path_conv&, const char*, void*, size_t)
ssize_t lgetxattr(const char*, const char*, void*, size_t)
ssize_t mq_timedreceive(mqd_t, char*, size_t, unsigned int*, const timespec*)
ssize_t msgrcv(int, void*, size_t, long int, int)
ssize_t pread(int, void*, size_t, off_t)
ssize_t pwrite(int, const void*, size_t, off_t)
ssize_t read(int, void*, size_t)
ssize_t read_ea(HANDLE, path_conv&, const char*, char*, size_t)
ssize_t readlink(const char*, char*, size_t)
ssize_t readlinkat(int, const char*, char*, size_t)
ssize_t readv(int, const iovec*, int)
ssize_t write(int, const void*, size_t)
ssize_t writev(int, const iovec*, int)
st_ZA
stack
stack - bottom %p, top %p, addr %p, guardsize %ly
started
started thread %p %p %p %p %p %p
starting aio %p
stat
static BOOL fhandler_pty_common::process_opost_output(HANDLE, const void*, ssize_t&, bool, tty*, bool)
static DWORD cygthread::stub(void*)
static DWORD fhandler_pipe::create(LPSECURITY_ATTRIBUTES, PHANDLE, PHANDLE, DWORD, const char*, DWORD, int64_t*)
static DWORD fhandler_pty_master::pty_master_fwd_thread(const fhandler_pty_master::master_fwd_thread_param_t*)
static DWORD fhandler_pty_master::pty_master_thread(const fhandler_pty_master::master_thread_param_t*)
static DWORD pthread::thread_init_wrapper(void*)
static WCHAR* dll_list::form_ntname(PWCHAR, size_t, PCWCHAR)
static WCHAR* dll_list::form_shortname(PWCHAR, size_t, PCWCHAR)
static bool dll_list::read_fii(HANDLE, PFILE_INTERNAL_INFORMATION)
static bool fhandler_console::need_invisible(bool)
static fh_devices fhandler_proc::get_proc_fhandler(const char*)
static fhandler_termios::process_sig_state fhandler_termios::process_sigs(char, tty*, fhandler_termios*)
static int exception::handle(EXCEPTION_RECORD*, void*, CONTEXT*, PDISPATCHER_CONTEXT)
static int fhandler_pipe::create(fhandler_pipe**, unsigned int, int)
static int pthread_mutex::init(pthread_mutex**, pthread_mutexattr* const*, pthread_mutex_t)
static int pthread_spinlock::init(pthread_spinlock**, int)
static int semaphore::clockwait(semaphore**, clockid_t, const timespec*)
static int semaphore::close(semaphore**)
static int semaphore::destroy(semaphore**)
static int semaphore::getinternal(semaphore**, int*, long long unsigned int*, LUID*, unsigned int*)
static int semaphore::getvalue(semaphore**, int*)
static int semaphore::init(semaphore**, int, unsigned int)
static int semaphore::post(semaphore**)
static int semaphore::trywait(semaphore**)
static int semaphore::wait(semaphore**)
static semaphore** semaphore::open(long long unsigned int, LUID, int, int, mode_t, unsigned int, bool&)
static void fhandler_console::free_console()
static void fhandler_console::set_disable_master_thread(bool, fhandler_console*)
static void user_info::create(bool)
static void* dll_list::ntopenfile(PCWCHAR, NTSTATUS*, ULONG, ACCESS_MASK, HANDLE)
statm
status
status %y
stopped
stopped child, stop signal %d
stopping
strict
stub called
stuff_start %p
stuff_start %p, timeout %u
subproc_ready %p
subproc_ready not set
succeeded
suspending thread, tls %p, _main_tls %p
sv_FI
sv_FI@euro
sv_SE
sw_KE
sw_TZ
swaps
symlink (%s, %S) wsym_type %d
symlink string too long
sync on %W
sync_proc_subproc
sync_proc_subproc is NULL
synchronized with pid %d
system bytes     = %10lu\n
system shared memory version
sysvipc
szDescription %s
szSystemStatus %s
szl_PL
ta_IN
ta_LK
target filename too long
tcK-
tcdrain
tcflush(%d) handle %p
te_IN
temporary buffer too small for %d bytes
terminating captive process
testname: %s
text
text write
tg-TJ
tg_TJ
th_TH
the_NP
this %p, pty%d opened - from_pty <%p,%p>, to_pty %p
this->path(%s), has_acls(%d)
thread '%s', id %y, inuse %d, stack_ptr %p
thread '%s', id %y, stack_ptr %p
thread canceled
thread creation failed, %E
thread handle NULL, not set up yet?
thread_info::thread_info(DWORD, HANDLE)
thread_tls_sentry
threadcount %d.  locking
threadcount %d.  unlocked
threadlist_t* init_cygheap::find_tls(int, bool&)
three
ti_ER
ti_ET
tid %p
tig_ER
tilde
time_t time(time_t*)
timed out
timed out after verification
timeout
timeout for server %08X:%hu sockfd %d\n
timerfd
timerfd %d not ready
timerfd %d ready
timerfd_create (%lu, %y)
title '%W'
tk_TM
tl_PH
tn_ZA
to NULL, us %D
to->tv_sec %ld, to->tv_nsec %ld, us %D
to_TO
to_slave pipe is full
tolower
too many retries\n
toupper
tpi_PG
tr_CY
tr_TR
trailing backslash (\)
transport
try_connect_guard
trying %s
trying to send signal %d but signal %d already armed
ts_ZA
tt_RU
tt_RU@iqtelif
tty_list::mutex
ttynum (%d) out of range
two_addr_t wsock_init(func_info*)
type %d disable %W
tzm-DZ
tzm-MA
ug_CN
uid: %u myself->uid: %u myself->gid: %u
uint32_t cyg_ldap::fetch_posix_offset_for_domain(PCWSTR)
uintptr_t cygwin_internal(cygwin_getinfo_types, ...)
uk_UA
ulen %ld, vmin_ %u, vtime_ %u
unable to allocate forker_finished event
unable to allocate heap, heap_chunk_size %ly, %E
unable to allocate subproc_ready event, %E
unable to block off %p to prevent %W from loading there
unable to create interim mapping for %W (using %W), %E
unable to load %W, %E
unable to map %W (using %W) to same address as parent: %p != %p
unable to map %W (using %W), %E
unable to release protective reservation (%p) for %W, %E
unable to release protective reservation for %W (%p), %E
unable to remap %W (using %W) to same address as parent (%p) - try running rebaseall
unable to unload interim mapping of %W (using %W), %E
underscore
unexpected answer\n
unit: %d
unix
unixfs
unknown
unknown (%y)
unknown exec type %u
unknown h/l command: %d
unknown option -- %c
unknown option -- %s
unknown option: "%s"\n
unknown value %d on proc pipe
unknown windows error %u, setting errno to %d
unlinking a directory
unlinking a nonexistent file
unm_US
unsigned int alarm(unsigned int)
update_needed_evt
upper
uptime
ur_IN
ur_PK
us now %D
useconds_t ualarm(useconds_t, useconds_t)
user
user != NULL
user heap
user not found in passwd DB
user shared memory size
user shared memory version
user shared version %x
user.
user:
user: <%W> <%W> <%W>
usertemp
using %s malloc
using computed value for '%s'
using dnsapi.dll\n
using tls %p
using value from GetEnvironmentVariable for '%W'
ut->ut_type %d, ut->ut_pid %d, ut->ut_line '%s', ut->ut_id '%s'\n
ut->ut_user '%s', ut->ut_host '%s'\n
utmp* getutid(const utmp*)
utmp* getutline(const utmp*)
utmp* pututline(const utmp*)
utmpx* getutxid(const utmpx*)
utmpx* getutxline(const utmpx*)
utmpx* pututxline(const utmpx*)
uz-UZ
uz_UZ
uz_UZ@cyrillic
v<y5
vH7B
ve_ZA
vendor_id\t: %s\n
version
vertical-line
vertical-tab
vfat
vi_VN
virtual DIR* fhandler_base::opendir(int)
virtual DIR* fhandler_dev::opendir(int)
virtual DIR* fhandler_disk_file::opendir(int)
virtual DIR* fhandler_virtual::opendir(int)
virtual __acl_t* fhandler_base::acl_get(acl_type_t)
virtual __acl_t* fhandler_disk_file::acl_get(acl_type_t)
virtual __acl_t* fhandler_socket_local::acl_get(acl_type_t)
virtual bg_check_types fhandler_termios::bg_check(int, bool)
virtual bool fhandler_base::fixup_mmap_after_fork(HANDLE, int, int, off_t, SIZE_T, void*)
virtual bool fhandler_dev_fd::fill_filebuf()
virtual bool fhandler_dev_zero::fixup_mmap_after_fork(HANDLE, int, int, off_t, SIZE_T, void*)
virtual bool fhandler_disk_file::fixup_mmap_after_fork(HANDLE, int, int, off_t, SIZE_T, void*)
virtual bool fhandler_pipe::open_setup(int)
virtual bool fhandler_process::fill_filebuf()
virtual bool fhandler_pty_master::hit_eof()
virtual bool fhandler_pty_master::open_setup(int)
virtual bool fhandler_pty_slave::open_setup(int)
virtual bool fhandler_registry::fill_filebuf()
virtual bool pthread::create(void* (*)(void*), pthread_attr*, void*)
virtual int clk_process_t::now(clockid_t, timespec*)
virtual int clk_thread_t::now(clockid_t, timespec*)
virtual int fhandler_base::acl_set(acl_t, acl_type_t)
virtual int fhandler_base::close()
virtual int fhandler_base::closedir(DIR*)
virtual int fhandler_base::dup(fhandler_base*, int)
virtual int fhandler_base::facl(int, int, aclent_t*)
virtual int fhandler_base::fadvise(off_t, off_t, int)
virtual int fhandler_base::fcntl(int, intptr_t)
virtual int fhandler_base::fpathconf(int)
virtual int fhandler_base::fsetxattr(const char*, const void*, size_t, int)
virtual int fhandler_base::fsync()
virtual int fhandler_base::init(HANDLE, DWORD, mode_t)
virtual int fhandler_base::ioctl(unsigned int, void*)
virtual int fhandler_base::link(const char*)
virtual int fhandler_base::lock(int, flock*)
virtual int fhandler_base::mand_lock(int, flock*)
virtual int fhandler_base::mkdir(mode_t)
virtual int fhandler_base::msync(HANDLE, caddr_t, size_t, int)
virtual int fhandler_base::munmap(HANDLE, caddr_t, size_t)
virtual int fhandler_base::open(int, mode_t)
virtual int fhandler_base::ptsname_r(char*, size_t)
virtual int fhandler_base::rmdir()
virtual int fhandler_base::tcdrain()
virtual int fhandler_base::tcflow(int)
virtual int fhandler_base::tcflush(int)
virtual int fhandler_base::tcgetattr(termios*)
virtual int fhandler_base::tcgetpgrp()
virtual int fhandler_base::tcsendbreak(int)
virtual int fhandler_base::tcsetattr(int, const termios*)
virtual int fhandler_base::tcsetpgrp(pid_t)
virtual int fhandler_base::utimens(const timespec*)
virtual int fhandler_console::close()
virtual int fhandler_console::ioctl(unsigned int, void*)
virtual int fhandler_console::open(int, mode_t)
virtual int fhandler_cygdrive::open(int, mode_t)
virtual int fhandler_cygdrive::readdir(DIR*, dirent*)
virtual int fhandler_dev::open(int, mode_t)
virtual int fhandler_dev::readdir(DIR*, dirent*)
virtual int fhandler_dev::rmdir()
virtual int fhandler_dev_dsp::close()
virtual int fhandler_dev_dsp::open(int, mode_t)
virtual int fhandler_dev_fd::fstat(stat*)
virtual int fhandler_dev_floppy::ioctl(unsigned int, void*)
virtual int fhandler_dev_floppy::open(int, mode_t)
virtual int fhandler_dev_raw::fstat(stat*)
virtual int fhandler_dev_raw::open(int, mode_t)
virtual int fhandler_dev_tape::dup(fhandler_base*, int)
virtual int fhandler_dev_tape::fstat(stat*)
virtual int fhandler_dev_tape::open(int, mode_t)
virtual int fhandler_disk_file::acl_set(acl_t, acl_type_t)
virtual int fhandler_disk_file::closedir(DIR*)
virtual int fhandler_disk_file::facl(int, int, aclent_t*)
virtual int fhandler_disk_file::fchown(uid_t, gid_t)
virtual int fhandler_disk_file::fsetxattr(const char*, const void*, size_t, int)
virtual int fhandler_disk_file::fstatvfs(statvfs*)
virtual int fhandler_disk_file::ftruncate(off_t, bool)
virtual int fhandler_disk_file::ioctl(unsigned int, void*)
virtual int fhandler_disk_file::link(const char*)
virtual int fhandler_disk_file::mand_lock(int, flock*)
virtual int fhandler_disk_file::readdir(DIR*, dirent*)
virtual int fhandler_disk_file::rmdir()
virtual int fhandler_fifo::open(int, mode_t)
virtual int fhandler_mqueue::fadvise(off_t, off_t, int)
virtual int fhandler_mqueue::fcntl(int, intptr_t)
virtual int fhandler_mqueue::fsetxattr(const char*, const void*, size_t, int)
virtual int fhandler_mqueue::ftruncate(off_t, bool)
virtual int fhandler_mqueue::link(const char*)
virtual int fhandler_mqueue::lock(int, flock*)
virtual int fhandler_mqueue::mand_lock(int, flock*)
virtual int fhandler_mqueue::mkdir(mode_t)
virtual int fhandler_mqueue::open(int, mode_t)
virtual int fhandler_netdrive::fstat(stat*)
virtual int fhandler_netdrive::open(int, mode_t)
virtual int fhandler_netdrive::readdir(DIR*, dirent*)
virtual int fhandler_nodevice::open(int, mode_t)
virtual int fhandler_pipe::dup(fhandler_base*, int)
virtual int fhandler_pipe::fstatvfs(statvfs*)
virtual int fhandler_pipe::ioctl(unsigned int, void*)
virtual int fhandler_pipe::open(int, mode_t)
virtual int fhandler_proc::fstat(stat*)
virtual int fhandler_proc::open(int, mode_t)
virtual int fhandler_proc::readdir(DIR*, dirent*)
virtual int fhandler_process::fstat(stat*)
virtual int fhandler_process::open(int, mode_t)
virtual int fhandler_process::readdir(DIR*, dirent*)
virtual int fhandler_procnet::fstat(stat*)
virtual int fhandler_procnet::open(int, mode_t)
virtual int fhandler_procnet::readdir(DIR*, dirent*)
virtual int fhandler_procsys::fstat(stat*)
virtual int fhandler_procsys::open(int, mode_t)
virtual int fhandler_procsys::readdir(DIR*, dirent*)
virtual int fhandler_procsysvipc::fstat(stat*)
virtual int fhandler_procsysvipc::open(int, mode_t)
virtual int fhandler_procsysvipc::readdir(DIR*, dirent*)
virtual int fhandler_pty_common::close()
virtual int fhandler_pty_master::accept_input()
virtual int fhandler_pty_master::close()
virtual int fhandler_pty_master::dup(fhandler_base*, int)
virtual int fhandler_pty_master::ioctl(unsigned int, void*)
virtual int fhandler_pty_master::ptsname_r(char*, size_t)
virtual int fhandler_pty_master::tcflush(int)
virtual int fhandler_pty_slave::close()
virtual int fhandler_pty_slave::dup(fhandler_base*, int)
virtual int fhandler_pty_slave::facl(int, int, aclent_t*)
virtual int fhandler_pty_slave::init(HANDLE, DWORD, mode_t)
virtual int fhandler_pty_slave::ioctl(unsigned int, void*)
virtual int fhandler_pty_slave::open(int, mode_t)
virtual int fhandler_pty_slave::tcflush(int)
virtual int fhandler_pty_slave::tcsetattr(int, const termios*)
virtual int fhandler_registry::closedir(DIR*)
virtual int fhandler_registry::dup(fhandler_base*, int)
virtual int fhandler_registry::fstat(stat*)
virtual int fhandler_registry::open(int, mode_t)
virtual int fhandler_registry::readdir(DIR*, dirent*)
virtual int fhandler_serial::ioctl(unsigned int, void*)
virtual int fhandler_serial::open(int, mode_t)
virtual int fhandler_serial::tcflow(int)
virtual int fhandler_serial::tcflush(int)
virtual int fhandler_serial::tcgetattr(termios*)
virtual int fhandler_serial::tcsendbreak(int)
virtual int fhandler_serial::tcsetattr(int, const termios*)
virtual int fhandler_socket::facl(int, int, aclent_t*)
virtual int fhandler_socket::fchown(uid_t, gid_t)
virtual int fhandler_socket::getpeereid(pid_t*, uid_t*, gid_t*)
virtual int fhandler_socket::ioctl(unsigned int, void*)
virtual int fhandler_socket::open(int, mode_t)
virtual int fhandler_socket_inet::bind(const sockaddr*, int)
virtual int fhandler_socket_inet::getsockopt(int, int, const void*, socklen_t*)
virtual int fhandler_socket_inet::setsockopt(int, int, const void*, socklen_t)
virtual int fhandler_socket_inet::socket(int, int, int, int)
virtual int fhandler_socket_inet::socketpair(int, int, int, int, fhandler_socket*)
virtual int fhandler_socket_local::acl_set(acl_t, acl_type_t)
virtual int fhandler_socket_local::af_local_connect()
virtual int fhandler_socket_local::bind(const sockaddr*, int)
virtual int fhandler_socket_local::getpeereid(pid_t*, uid_t*, gid_t*)
virtual int fhandler_socket_local::getsockopt(int, int, const void*, socklen_t*)
virtual int fhandler_socket_local::open(int, mode_t)
virtual int fhandler_socket_local::setsockopt(int, int, const void*, socklen_t)
virtual int fhandler_socket_local::socket(int, int, int, int)
virtual int fhandler_socket_local::socketpair(int, int, int, int, fhandler_socket*)
virtual int fhandler_socket_wsock::close()
virtual int fhandler_socket_wsock::dup(fhandler_base*, int)
virtual int fhandler_socket_wsock::fcntl(int, intptr_t)
virtual int fhandler_socket_wsock::fixup_before_fork_exec(DWORD)
virtual int fhandler_socket_wsock::ioctl(unsigned int, void*)
virtual int fhandler_termios::tcgetpgrp()
virtual int fhandler_termios::tcsetpgrp(pid_t)
virtual int fhandler_timerfd::close()
virtual int fhandler_timerfd::dup(fhandler_base*, int)
virtual int fhandler_timerfd::ioctl(unsigned int, void*)
virtual int fhandler_virtual::fchmod(mode_t)
virtual int fhandler_virtual::fchown(uid_t, gid_t)
virtual int fhandler_windows::ioctl(unsigned int, void*)
virtual int transport_layer_pipes::connect()
virtual long int fhandler_base::telldir(DIR*)
virtual off_t fhandler_base::lseek(off_t, int)
virtual off_t fhandler_dev_floppy::lseek(off_t, int)
virtual off_t fhandler_fifo::lseek(off_t, int)
virtual off_t fhandler_mqueue::lseek(off_t, int)
virtual off_t fhandler_pipe::lseek(off_t, int)
virtual off_t fhandler_pty_common::lseek(off_t, int)
virtual off_t fhandler_serial::lseek(off_t, int)
virtual off_t fhandler_socket::lseek(off_t, int)
virtual off_t fhandler_termios::lseek(off_t, int)
virtual off_t fhandler_virtual::lseek(off_t, int)
virtual pid_t fhandler_base::tcgetsid()
virtual pid_t fhandler_termios::tcgetsid()
virtual select_record* fhandler_serial::select_read(select_stuff*)
virtual ssize_t fhandler_base::fgetxattr(const char*, void*, size_t)
virtual ssize_t fhandler_base::pread(void*, size_t, off_t, void*)
virtual ssize_t fhandler_base::pwrite(void*, size_t, off_t, void*)
virtual ssize_t fhandler_base::readv(const iovec*, int, ssize_t)
virtual ssize_t fhandler_base::write(const void*, size_t)
virtual ssize_t fhandler_base::writev(const iovec*, int, ssize_t)
virtual ssize_t fhandler_console::write(const void*, size_t)
virtual ssize_t fhandler_dev_clipboard::write(const void*, size_t)
virtual ssize_t fhandler_dev_floppy::raw_write(const void*, size_t)
virtual ssize_t fhandler_dev_random::write(const void*, size_t)
virtual ssize_t fhandler_dev_tape::raw_write(const void*, size_t)
virtual ssize_t fhandler_dev_zero::write(const void*, size_t)
virtual ssize_t fhandler_disk_file::fgetxattr(const char*, void*, size_t)
virtual ssize_t fhandler_disk_file::pread(void*, size_t, off_t, void*)
virtual ssize_t fhandler_disk_file::pwrite(void*, size_t, off_t, void*)
virtual ssize_t fhandler_mqueue::fgetxattr(const char*, void*, size_t)
virtual ssize_t fhandler_mqueue::pread(void*, size_t, off_t, void*)
virtual ssize_t fhandler_mqueue::pwrite(void*, size_t, off_t, void*)
virtual ssize_t fhandler_pipe_fifo::raw_write(const void*, size_t)
virtual ssize_t fhandler_pty_slave::write(const void*, size_t)
virtual ssize_t fhandler_serial::raw_write(const void*, size_t)
virtual ssize_t fhandler_signalfd::write(const void*, size_t)
virtual ssize_t fhandler_socket_inet::recv_internal(LPWSAMSG, bool)
virtual ssize_t fhandler_socket_inet::sendmsg(const msghdr*, int)
virtual ssize_t fhandler_socket_local::recv_internal(LPWSAMSG, bool)
virtual ssize_t fhandler_socket_local::sendmsg(const msghdr*, int)
virtual ssize_t fhandler_socket_local::sendto(const void*, size_t, int, const sockaddr*, int)
virtual ssize_t fhandler_timerfd::write(const void*, size_t)
virtual ssize_t fhandler_virtual::write(const void*, size_t)
virtual ssize_t transport_layer_pipes::read(void*, size_t)
virtual ssize_t transport_layer_pipes::write(void*, size_t)
virtual virtual_ftype_t fhandler_proc::exists()
virtual virtual_ftype_t fhandler_process::exists()
virtual virtual_ftype_t fhandler_procnet::exists()
virtual virtual_ftype_t fhandler_procsysvipc::exists()
virtual virtual_ftype_t fhandler_registry::exists()
virtual void client_request::send(transport_layer_base*)
virtual void fhandler_base::fixup_after_exec()
virtual void fhandler_base::fixup_after_fork(HANDLE)
virtual void fhandler_base::raw_read(void*, size_t&)
virtual void fhandler_base::read(void*, size_t&)
virtual void fhandler_base::rewinddir(DIR*)
virtual void fhandler_base::seekdir(DIR*, long int)
virtual void fhandler_base::set_close_on_exec(bool)
virtual void fhandler_base::set_no_inheritance(void*&, bool)
virtual void fhandler_console::acquire_input_mutex_if_necessary(DWORD)
virtual void fhandler_console::read(void*, size_t&)
virtual void fhandler_dev_floppy::raw_read(void*, size_t&)
virtual void fhandler_dev_random::read(void*, size_t&)
virtual void fhandler_dev_tape::raw_read(void*, size_t&)
virtual void fhandler_fifo::raw_read(void*, size_t&)
virtual void fhandler_fifo::release_select_sem(const char*)
virtual void fhandler_pipe::raw_read(void*, size_t&)
virtual void fhandler_pipe::release_select_sem(const char*)
virtual void fhandler_pty_master::cleanup()
virtual void fhandler_pty_master::doecho(const void*, DWORD)
virtual void fhandler_pty_master::fixup_after_fork(HANDLE)
virtual void fhandler_pty_slave::cleanup()
virtual void fhandler_pty_slave::fixup_after_fork(HANDLE)
virtual void fhandler_pty_slave::read(void*, size_t&)
virtual void fhandler_serial::raw_read(void*, size_t&)
virtual void fhandler_signalfd::read(void*, size_t&)
virtual void fhandler_socket_wsock::fixup_after_fork(HANDLE)
virtual void fhandler_socket_wsock::set_close_on_exec(bool)
virtual void fhandler_timerfd::fixup_after_exec()
virtual void fhandler_timerfd::fixup_after_fork(HANDLE)
virtual void fhandler_timerfd::read(void*, size_t&)
virtual void fhandler_virtual::read(void*, size_t&)
virtual void fhandler_windows::read(void*, size_t&)
virtual void transport_layer_pipes::close()
virtual void* fhandler_base::mmap(char**, size_t, int, int, off_t)
virtual void* fhandler_dev_zero::mmap(char**, size_t, int, int, off_t)
virtual void* fhandler_disk_file::mmap(char**, size_t, int, int, off_t)
virtual void* pg_ent::enumerate_ad()
virtual_ftype_t fhandler_procsys::exists(stat*)
vmin_ %u, vtime_ %u
void (* signal(int, _sig_func_ptr))(int)
void (* sigset(int, _sig_func_ptr))(int)
void SetThreadName(DWORD, const char*)
void __assert_func(const char*, int, const char*, const char*)
void __cygwin_lock_lock(void**)
void __cygwin_lock_unlock(void**)
void __set_ENOMEM()
void __set_winsock_errno(const char*, int)
void _cygtls::interrupt_setup(siginfo_t&, void*, sigaction&)
void _cygtls::remove(DWORD)
void aionotify_on_pthread(sigevent*)
void allow_others_to_sync()
void break_here()
void build_argv(char*, char**&, int&, int)
void cfree(void*)
void child_info::ready(bool)
void connect_syslogd()
void cwdstuff::override_win32_cwd(bool, ULONG)
void cygheap_pwdgrp::nss_init_line(const char*)
void cygheap_user::init()
void cygserver_init()
void cygthread::create()
void cygthread::release(bool)
void cygwin_endprotoent()
void cygwin_endservent()
void cygwin_exception::open_stackdumpfile()
void cygwin_setprotoent(int)
void cygwin_setservent(int)
void dev_console::save_restore(HANDLE, char)
void dll::nominate_forkable(PCWCHAR)
void dll_crt0_0()
void dll_crt0_1(void*)
void dll_list::load_after_fork_impl(HANDLE, dll*, int)
void dll_list::prepare_forkables_nomination()
void dll_list::update_forkables_needs()
void do_exit(int)
void dtable::delete_archetype(fhandler_base*)
void dtable::fixup_after_fork(HANDLE)
void dtable::fixup_before_exec(DWORD)
void dtable::fixup_before_fork(DWORD)
void dtable::fixup_close(size_t, fhandler_base*)
void dtable::init_std_file_from_handle(int, HANDLE)
void dtable::stdio_init()
void environ_init(char**, int)
void extract_nt_dom_user(const passwd*, PWCHAR, PWCHAR)
void fhandler_base::set_flags(int, int)
void fhandler_console::char_command(char)
void fhandler_console::setup_io_mutex()
void fhandler_dev_dsp::Audio::queue::dellock()
void fhandler_dev_dsp::Audio::queue::reset()
void fhandler_dev_dsp::Audio::setconvert(int)
void fhandler_dev_dsp::Audio_in::fork_fixup(HANDLE)
void fhandler_dev_dsp::Audio_in::stop()
void fhandler_dev_dsp::Audio_out::fork_fixup(HANDLE)
void fhandler_dev_dsp::Audio_out::init(unsigned int)
void fhandler_dev_dsp::Audio_out::stop(bool)
void fhandler_dev_dsp::Audio_out::waitforallsent()
void fhandler_dev_dsp::_fixup_after_exec()
void fhandler_dev_dsp::_fixup_after_fork(HANDLE)
void fhandler_dev_dsp::_read(void*, size_t&)
void fhandler_mqueue::mq_open_finish(bool, bool)
void fhandler_pipe::set_pipe_non_blocking(bool)
void free(void*)
void get_azure_grp_sid()
void get_logon_sid()
void init_console_handler(bool)
void init_cygheap::close_ctty()
void internal_getlogin(cygheap_user&)
void internal_setlocale()
void lf_split(lockf_t*, lockf_t*, lockf_t**)
void lockf_t::create_lock_obj()
void lockf_t::del_lock_obj(HANDLE, bool)
void malloc_init()
void malloc_stats()
void mmap_record::init_page_map(mmap_record&)
void mount_info::create_root_entry(PWCHAR)
void multiple_cygwin_problem(const char*, uintptr_t, uintptr_t)
void openlog(const char*, int, int)
void parse_alias_list(char***, char**)
void parse_options(const char*)
void path_conv::check(const char*, unsigned int, const suffix_info*)
void pinfo::exit(DWORD)
void pinfo::init(pid_t, DWORD, HANDLE)
void pinfo::maybe_set_exit_code_from_windows()
void pinfo::set_acl()
void pinfo::thisproc(HANDLE)
void pinfo_init(char**, int)
void posify_maybe(char**, const char*, char*)
void proc_terminate()
void pthread::precreate(pthread_attr*)
void pthread_mutex::_fixup_after_fork()
void reg_key::build_reg(HKEY, REGSAM, va_list)
void resume_child(HANDLE)
void rewinddir(DIR*)
void rmdirs(WCHAR*)
void rmdirs_synchronized(WCHAR*, int, int, PFILE_DIRECTORY_INFORMATION, ULONG)
void seekdir(DIR*, long int)
void select_stuff::cleanup()
void select_stuff::destroy()
void semaphore::_fixup_after_fork()
void set_console_title(char*)
void set_imp_token(HANDLE, int)
void set_pipe_non_blocking(HANDLE, bool)
void set_signal_mask(sigset_t&, sigset_t)
void seterrno_from_nt_status(const char*, int, NTSTATUS)
void seterrno_from_win_error(const char*, int, DWORD)
void setprogname(const char*)
void shared_info::initialize()
void sig_handle_tty_stop(int, siginfo_t*, void*)
void signal_exit(int, siginfo_t*, void*)
void socket_cleanup(select_record*, select_stuff*)
void sync()
void sync_with_parent(const char*, bool)
void sync_worker(HANDLE, USHORT, LPCWSTR)
void talktome(siginfo_t*)
void timerfd_tracker::create_timechange_window()
void user_heap_info::init()
void vsyslog(int, const char*, va_list)
void wait_sig(void*)
void win_env::add_cache(const char*, const char*)
void wnet_dbg_out(const char*, DWORD)
void* MapView(HANDLE, void*, size_t, DWORD, int, int, off_t, bool)
void* __aclfromtext(const char*, int*, bool)
void* _csbrk(int)
void* _everyone_sd(void*, ACCESS_MASK)
void* acl_get_qualifier(acl_entry_t)
void* calloc(size_t, size_t)
void* crealloc(void*, size_t, const char*)
void* creturn(cygheap_types, cygheap_entry*, unsigned int, const char*)
void* cygwin_logon_user(const passwd*, const char*)
void* dlopen(const char*, int)
void* dlsym(void*, const char*)
void* dup_ent(unionent*&, unionent*, unionent::struct_type)
void* fhandler_pipe::get_query_hdl_per_process(WCHAR*, OBJECT_NAME_INFORMATION*)
void* fhandler_timerfd::get_timerfd_handle()
void* get_full_privileged_inheritable_token(HANDLE)
void* load_user_profile(HANDLE, passwd*, cygpsid&)
void* lsaprivkeyauth(passwd*)
void* malloc(size_t)
void* memalign(size_t, size_t)
void* mmap(void*, size_t, int, int, int, off_t)
void* open_shared(const WCHAR*, int, void*&, DWORD, shared_locations, bool&, PSECURITY_ATTRIBUTES, DWORD)
void* realloc(void*, size_t)
void* s4uauth(bool, PCWSTR, PCWSTR, NTSTATUS&)
void* set_posix_access(mode_t, uid_t, gid_t, aclent_t*, int, security_descriptor&, bool)
void* shmat(int, const void*, int)
void* thread_allocator::_alloc_old(SIZE_T)
void* tty::create_inuse(PSECURITY_ATTRIBUTES)
void* tty::get_event(const char*, PSECURITY_ATTRIBUTES, BOOL)
void* user_heap_info::sbrk(ptrdiff_t)
void* valloc(size_t)
vtime %u, vmin %u
vtime_ %u, vmin_ %u, read_bytes %u, tot %D
wHighVersion %d
wUUUUU
wVersion %d
wa_BE
wa_BE@euro
wae_CH
wait %u
wait catched signal
wait failed, pid %u, %E
wait for input event failed, %E
wait for input mutex failed, %E
wait for mutex caught signal
wait timed out, time_to_wait %u
wait_ret %d, m = %d.  verifying
waiting thread found no children
waitproc
wakeup %p
wal_ET
warning: %s not present in environment
wcsdup(%W, %W) %d
what %d, pw %p
win_env* getwinenv(const char*, const char*, win_env*)
wincmdln
window %d(%p) not ready
window %d(%p) ready
window station is not visible
windows
windows error %u == errno %d
winexename
wininfo_lock
winpid
winsymlinks
wndproc %d %s %d %d
wndproc %d unknown  %d %d
wo_SN
wq;=7
write
write failed, handle %p
write(%d, %p, %d)
write(TCP): %s\n
write: %s, n %d
write_ea (%S, %s, %p, %lu, %d)
write_marks
write_ready
writer
writer_opening
writev(%d, %p, %d)
writing filemark
wsa_event* search_wsa_event_slot(LONG)
wsock_evt
wsock_mtx
wt >= cnt (%u >= %u)
wval->pid %d, wval->options %d
xdigit
xdr-routines: 
xdr_array: out of memory
xdr_bytes: out of memory
xdr_reference: out of memory
xdr_string: out of memory
xdrrec_create
xdrrec_create: out of memory
xdrrec_inline
xh_ZA
yi_US
yo_NG
yue_HK
yuw_PG
zero
zero length file, treat as script.
zh_CN
zh_HK
zh_SG
zh_TW
zombie
zu_ZA
{%u;%u;%u;%u;%u;%luK
|JF9
}CQMR:
